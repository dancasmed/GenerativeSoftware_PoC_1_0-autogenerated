{"id":"34535e5d-1cdd-448e-a4c0-c5a1fb13e628","object":"chat.completion","created":1744175060,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class AcademicGradeTracker : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Academic Grade Tracker\\\";\\n\\n    private string _gradesFilePath;\\n    private List<Course> _courses;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Academic Grade Tracker module is running.\\\");\\n        _gradesFilePath = Path.Combine(dataFolder, \\\"grades.json\\\");\\n        _courses = LoadGrades();\\n\\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            DisplayMenu();\\n            string input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddCourse();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewGrades();\\n                    break;\\n                case \\\"3\\\":\\n                    CalculateGPA();\\n                    break;\\n                case \\\"4\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        SaveGrades();\\n        return true;\\n    }\\n\\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nAcademic Grade Tracker\\\");\\n        Console.WriteLine(\\\"1. Add Course\\\");\\n        Console.WriteLine(\\\"2. View Grades\\\");\\n        Console.WriteLine(\\\"3. Calculate GPA\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n\\n    private void AddCourse()\\n    {\\n        Console.Write(\\\"Enter course name: \\\");\\n        string name = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter credit hours: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int credits))\\n        {\\n            Console.WriteLine(\\\"Invalid credit hours. Please enter a number.\\\");\\n            return;\\n        }\\n\\n        Console.Write(\\\"Enter grade (A, B, C, D, F): \\\");\\n        string grade = Console.ReadLine().ToUpper();\\n\\n        if (!IsValidGrade(grade))\\n        {\\n            Console.WriteLine(\\\"Invalid grade. Please enter A, B, C, D, or F.\\\");\\n            return;\\n        }\\n\\n        _courses.Add(new Course { Name = name, Credits = credits, Grade = grade });\\n        Console.WriteLine(\\\"Course added successfully.\\\");\\n    }\\n\\n    private bool IsValidGrade(string grade)\\n    {\\n        return grade == \\\"A\\\" || grade == \\\"B\\\" || grade == \\\"C\\\" || grade == \\\"D\\\" || grade == \\\"F\\\";\\n    }\\n\\n    private void ViewGrades()\\n    {\\n        if (_courses.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No courses available.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nCurrent Grades:\\\");\\n        foreach (var course in _courses)\\n        {\\n            Console.WriteLine($\\\"{course.Name} - Credits: {course.Credits}, Grade: {course.Grade}\\\");\\n        }\\n    }\\n\\n    private void CalculateGPA()\\n    {\\n        if (_courses.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No courses available to calculate GPA.\\\");\\n            return;\\n        }\\n\\n        double totalPoints = 0;\\n        int totalCredits = 0;\\n\\n        foreach (var course in _courses)\\n        {\\n            double gradePoints = GetGradePoints(course.Grade);\\n            totalPoints += gradePoints * course.Credits;\\n            totalCredits += course.Credits;\\n        }\\n\\n        double gpa = totalPoints / totalCredits;\\n        Console.WriteLine($\\\"\\\\nYour GPA is: {gpa:F2}\\\");\\n    }\\n\\n    private double GetGradePoints(string grade)\\n    {\\n        switch (grade)\\n        {\\n            case \\\"A\\\": return 4.0;\\n            case \\\"B\\\": return 3.0;\\n            case \\\"C\\\": return 2.0;\\n            case \\\"D\\\": return 1.0;\\n            case \\\"F\\\": return 0.0;\\n            default: return 0.0;\\n        }\\n    }\\n\\n    private List<Course> LoadGrades()\\n    {\\n        if (!File.Exists(_gradesFilePath))\\n        {\\n            return new List<Course>();\\n        }\\n\\n        string json = File.ReadAllText(_gradesFilePath);\\n        return JsonSerializer.Deserialize<List<Course>>(json);\\n    }\\n\\n    private void SaveGrades()\\n    {\\n        string json = JsonSerializer.Serialize(_courses);\\n        File.WriteAllText(_gradesFilePath, json);\\n    }\\n}\\n\\npublic class Course\\n{\\n    public string Name { get; set; }\\n    public int Credits { get; set; }\\n    public string Grade { get; set; }\\n}\",\n  \"name\": \"Academic Grade Tracker\",\n  \"description\": \"A module to track academic grades and calculate GPA.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":519,"completion_tokens":1216,"total_tokens":1735,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":71},"system_fingerprint":"fp_3d5141a69a_prod0225"}