{"id":"8f06426c-dea5-42ea-9feb-d1d794a0f03a","object":"chat.completion","created":1743799359,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class BMICalculatorModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"BMI Calculator\\\";\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"BMI Calculator Module is running.\\\");\\n        \\n        try\\n        {\\n            double weight = 0;\\n            double height = 0;\\n            \\n            Console.WriteLine(\\\"Enter your weight in kilograms:\\\");\\n            string weightInput = Console.ReadLine();\\n            \\n            Console.WriteLine(\\\"Enter your height in meters:\\\");\\n            string heightInput = Console.ReadLine();\\n            \\n            if (!double.TryParse(weightInput, out weight) || !double.TryParse(heightInput, out height))\\n            {\\n                Console.WriteLine(\\\"Invalid input. Please enter numeric values.\\\");\\n                return false;\\n            }\\n            \\n            if (weight <= 0 || height <= 0)\\n            {\\n                Console.WriteLine(\\\"Weight and height must be positive values.\\\");\\n                return false;\\n            }\\n            \\n            double bmi = CalculateBMI(weight, height);\\n            string category = GetBMICategory(bmi);\\n            \\n            Console.WriteLine(\\\"Your BMI is: \\\" + bmi.ToString(\\\"F2\\\"));\\n            Console.WriteLine(\\\"Category: \\\" + category);\\n            \\n            SaveResult(dataFolder, weight, height, bmi, category);\\n            \\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n    \\n    private double CalculateBMI(double weight, double height)\\n    {\\n        return weight / (height * height);\\n    }\\n    \\n    private string GetBMICategory(double bmi)\\n    {\\n        if (bmi < 18.5)\\n            return \\\"Underweight\\\";\\n        else if (bmi < 25)\\n            return \\\"Normal weight\\\";\\n        else if (bmi < 30)\\n            return \\\"Overweight\\\";\\n        else\\n            return \\\"Obese\\\";\\n    }\\n    \\n    private void SaveResult(string dataFolder, double weight, double height, double bmi, string category)\\n    {\\n        try\\n        {\\n            var result = new\\n            {\\n                Timestamp = DateTime.Now,\\n                Weight = weight,\\n                Height = height,\\n                BMI = bmi,\\n                Category = category\\n            };\\n            \\n            string fileName = Path.Combine(dataFolder, \\\"bmi_results.json\\\");\\n            string jsonString = JsonSerializer.Serialize(result);\\n            \\n            File.AppendAllText(fileName, jsonString + Environment.NewLine);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Failed to save results: \\\" + ex.Message);\\n        }\\n    }\\n}\",\n  \"name\": \"BMI Calculator\",\n  \"description\": \"A module that calculates Body Mass Index (BMI) based on user input and saves results to a JSON file.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":750,"total_tokens":1271,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":9},"system_fingerprint":"fp_3d5141a69a_prod0225"}