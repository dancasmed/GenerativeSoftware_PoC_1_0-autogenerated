{
  "model": "deepseek-reasoner",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful assistant with high skills in software development. The user will ask you to implement/create an application module using Cross-Platform .NET 9 C# code that adheres to the following interface:\n\n\u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022\n\n### Requirements:\n- The generated code must avoid using external APIs if possible, in case an API is needed add it to the list of required APIS.\n_ If the generated code needs NuGets installed add the NuGet name to the list of required Nugets.\n- The response must be in JSON format.\n- The \u0060source_code\u0060 field must contain C# code only (avoid markdown notation).\n- Do not include the IGeneratedModule in the generated source code.\n- The generated code **must not include any instructions that begin with \u0060Console.WriteLine($\u0060**.\n- If data persistence is required, use JSON files stored in the \u0060dataFolder\u0060 parameter of the \u0060Main\u0060 method.\n- Ensure the generated module is as detailed and complete as possible.\n- The constructor of the generated module must not have any parameters.\n- The generated code MUST not call Exit method. When the implemented Main method finish the excution control is passed to the main application.\n- The generated code must print information in the console to let know the user the module is running.\n- The generated code must implement CRUPDS operations for the data models.\n\n### Example output:\n{\u0022source_code\u0022:\u0022GENERATED C# CODE\u0022,\u0022description\u0022: \u0022GENERATED DESCRIPTION FOR THE MODULE\u0022, \u0022required_apis\u0022=[{\u0022API_1\u0022},{\u0022API_2\u0022}], , \u0022required_nugets\u0022=[{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_1\u0022,\u0022nuget_version\u0022:\u00221.0.0\u0022 },{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_2\u0022,\u0022nuget_version\u0022:\u00222.0.0.0\u0022 }]}"
    },
    {
      "role": "user",
      "content": "Generate a Cross-Platform .NET 9 C# code that implements the next interface \u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022 the Main method is the start point for the module. The souce code will run on a console application. The generated code must not write strings to console like this Console.WriteLine($\u0022{variable}\u0022). The source code will be automaticallty compiled so avoid adding markdown notation or anything that is not c# code The module must: Design a software module that calculates Body Mass Index (BMI) based on user-provided height and weight inputs. The module should accurately compute BMI using the standard formula (weight divided by height squared) and provide immediate feedback. The system should handle various units of measurement (e.g., metric and imperial) and ensure data validation to prevent incorrect inputs. The module should be user-friendly, with clear instructions and error messages for invalid entries. Additionally, the module should categorize the BMI result into standard health categories (e.g., underweight, normal weight, overweight, obese) and optionally provide recommendations based on the category.\n## Funcional Details ##\nCalculate BMI using the standard formula: weight / (height^2).\nSupport multiple units of measurement (metric and imperial).\nValidate user inputs to ensure they are within reasonable ranges.\nCategorize BMI results into standard health categories.\nProvide immediate feedback and clear error messages for invalid inputs.\n## Required features ## \nCalculate BMI based on height and weight inputs.\nSupport metric units (kg, cm).\nBasic input validation (positive numbers, reasonable ranges).\nDisplay BMI result and health category.\n## User interaction ## \nUser enters height and weight in preferred units.\nUser submits the data for calculation.\nSystem validates inputs and calculates BMI.\nSystem displays BMI result and health category.\nSystem provides optional recommendations based on BMI category.\n## Suggested data models ##\n**UserInput**: { height: float, weight: float, units: string (metric/imperial) }\n**BMIResult**: { bmi: float, category: string, recommendation: string }\n**UserSession**: { user_id: string, inputs: [UserInput], results: [BMIResult], timestamp: datetime }"
    }
  ],
  "stream": false
}