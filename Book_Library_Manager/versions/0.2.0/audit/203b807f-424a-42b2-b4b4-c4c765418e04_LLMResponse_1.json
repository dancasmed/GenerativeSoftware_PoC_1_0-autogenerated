{"id":"7f082521-42c9-4823-86d8-97732b5f5f7d","object":"chat.completion","created":1743797995,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class BookLibraryManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Book Library Manager\\\";\\n    \\n    private string _dataFilePath;\\n    private List<Book> _books;\\n    \\n    public BookLibraryManager()\\n    {\\n        _books = new List<Book>();\\n    }\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        _dataFilePath = Path.Combine(dataFolder, \\\"book_library.json\\\");\\n        \\n        Console.WriteLine(\\\"Book Library Manager is running...\\\");\\n        \\n        LoadBooks();\\n        \\n        bool exit = false;\\n        while (!exit)\\n        {\\n            DisplayMenu();\\n            var input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddBook();\\n                    break;\\n                case \\\"2\\\":\\n                    ListBooks();\\n                    break;\\n                case \\\"3\\\":\\n                    UpdateBookStatus();\\n                    break;\\n                case \\\"4\\\":\\n                    DeleteBook();\\n                    break;\\n                case \\\"5\\\":\\n                    exit = true;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        SaveBooks();\\n        Console.WriteLine(\\\"Book Library Manager has finished.\\\");\\n        return true;\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nBook Library Manager\\\");\\n        Console.WriteLine(\\\"1. Add a new book\\\");\\n        Console.WriteLine(\\\"2. List all books\\\");\\n        Console.WriteLine(\\\"3. Update book reading status\\\");\\n        Console.WriteLine(\\\"4. Delete a book\\\");\\n        Console.WriteLine(\\\"5. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n    \\n    private void AddBook()\\n    {\\n        Console.Write(\\\"Enter book title: \\\");\\n        string title = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter author: \\\");\\n        string author = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter genre: \\\");\\n        string genre = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter reading status (Not Started/In Progress/Completed): \\\");\\n        string status = Console.ReadLine();\\n        \\n        _books.Add(new Book\\n        {\\n            Title = title,\\n            Author = author,\\n            Genre = genre,\\n            ReadingStatus = status\\n        });\\n        \\n        Console.WriteLine(\\\"Book added successfully.\\\");\\n    }\\n    \\n    private void ListBooks()\\n    {\\n        if (_books.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No books in the library.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nBooks in your library:\\\");\\n        for (int i = 0; i < _books.Count; i++)\\n        {\\n            var book = _books[i];\\n            Console.WriteLine($\\\"{i + 1}. {book.Title} by {book.Author} ({book.Genre}) - {book.ReadingStatus}\\\");\\n        }\\n    }\\n    \\n    private void UpdateBookStatus()\\n    {\\n        ListBooks();\\n        if (_books.Count == 0) return;\\n        \\n        Console.Write(\\\"Enter the number of the book to update: \\\");\\n        if (int.TryParse(Console.ReadLine(), out int index) && index > 0 && index <= _books.Count)\\n        {\\n            Console.Write(\\\"Enter new reading status (Not Started/In Progress/Completed): \\\");\\n            string newStatus = Console.ReadLine();\\n            \\n            _books[index - 1].ReadingStatus = newStatus;\\n            Console.WriteLine(\\\"Book status updated successfully.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Invalid book number.\\\");\\n        }\\n    }\\n    \\n    private void DeleteBook()\\n    {\\n        ListBooks();\\n        if (_books.Count == 0) return;\\n        \\n        Console.Write(\\\"Enter the number of the book to delete: \\\");\\n        if (int.TryParse(Console.ReadLine(), out int index) && index > 0 && index <= _books.Count)\\n        {\\n            _books.RemoveAt(index - 1);\\n            Console.WriteLine(\\\"Book deleted successfully.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Invalid book number.\\\");\\n        }\\n    }\\n    \\n    private void LoadBooks()\\n    {\\n        try\\n        {\\n            if (File.Exists(_dataFilePath))\\n            {\\n                string json = File.ReadAllText(_dataFilePath);\\n                _books = JsonSerializer.Deserialize<List<Book>>(json);\\n            }\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error loading books: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void SaveBooks()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_books);\\n            File.WriteAllText(_dataFilePath, json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving books: \\\" + ex.Message);\\n        }\\n    }\\n}\\n\\npublic class Book\\n{\\n    public string Title { get; set; }\\n    public string Author { get; set; }\\n    public string Genre { get; set; }\\n    public string ReadingStatus { get; set; }\\n}\",\n  \"name\": \"Book Library Manager\",\n  \"description\": \"A module to manage personal book library with title, author, genre and reading status tracking\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":529,"completion_tokens":1394,"total_tokens":1923,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":81},"system_fingerprint":"fp_3d5141a69a_prod0225"}