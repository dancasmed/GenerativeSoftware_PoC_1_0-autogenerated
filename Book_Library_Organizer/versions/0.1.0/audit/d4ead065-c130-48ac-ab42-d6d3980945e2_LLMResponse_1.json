{"id":"683e3477-ef3f-4cef-a0f5-e158d7f44b7a","object":"chat.completion","created":1744177035,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class BookLibraryModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Book Library Organizer\\\";\\n    \\n    private List<Book> _books;\\n    private string _dataFilePath;\\n    \\n    public BookLibraryModule()\\n    {\\n        _books = new List<Book>();\\n    }\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Initializing Book Library Organizer...\\\");\\n        \\n        _dataFilePath = Path.Combine(dataFolder, \\\"books.json\\\");\\n        \\n        try\\n        {\\n            if (File.Exists(_dataFilePath))\\n            {\\n                string jsonData = File.ReadAllText(_dataFilePath);\\n                _books = JsonSerializer.Deserialize<List<Book>>(jsonData) ?? new List<Book>();\\n                Console.WriteLine(\\\"Loaded existing book library.\\\");\\n            }\\n            else\\n            {\\n                Console.WriteLine(\\\"No existing library found. Starting with an empty library.\\\");\\n            }\\n            \\n            bool running = true;\\n            while (running)\\n            {\\n                DisplayMenu();\\n                string input = Console.ReadLine();\\n                \\n                switch (input)\\n                {\\n                    case \\\"1\\\":\\n                        AddBook();\\n                        break;\\n                    case \\\"2\\\":\\n                        SearchBooks();\\n                        break;\\n                    case \\\"3\\\":\\n                        ListAllBooks();\\n                        break;\\n                    case \\\"4\\\":\\n                        running = false;\\n                        break;\\n                    default:\\n                        Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                        break;\\n                }\\n            }\\n            \\n            SaveLibrary();\\n            Console.WriteLine(\\\"Book library saved successfully.\\\");\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nBook Library Menu:\\\");\\n        Console.WriteLine(\\\"1. Add a new book\\\");\\n        Console.WriteLine(\\\"2. Search books\\\");\\n        Console.WriteLine(\\\"3. List all books\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n    \\n    private void AddBook()\\n    {\\n        Console.Write(\\\"Enter book title: \\\");\\n        string title = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter author name: \\\");\\n        string author = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter genre: \\\");\\n        string genre = Console.ReadLine();\\n        \\n        _books.Add(new Book { Title = title, Author = author, Genre = genre });\\n        Console.WriteLine(\\\"Book added successfully!\\\");\\n    }\\n    \\n    private void SearchBooks()\\n    {\\n        Console.WriteLine(\\\"\\\\nSearch by:\\\");\\n        Console.WriteLine(\\\"1. Title\\\");\\n        Console.WriteLine(\\\"2. Author\\\");\\n        Console.WriteLine(\\\"3. Genre\\\");\\n        Console.Write(\\\"Select search criteria: \\\");\\n        \\n        string criteria = Console.ReadLine();\\n        Console.Write(\\\"Enter search term: \\\");\\n        string term = Console.ReadLine().ToLower();\\n        \\n        List<Book> results = new List<Book>();\\n        \\n        switch (criteria)\\n        {\\n            case \\\"1\\\":\\n                results = _books.FindAll(b => b.Title.ToLower().Contains(term));\\n                break;\\n            case \\\"2\\\":\\n                results = _books.FindAll(b => b.Author.ToLower().Contains(term));\\n                break;\\n            case \\\"3\\\":\\n                results = _books.FindAll(b => b.Genre.ToLower().Contains(term));\\n                break;\\n            default:\\n                Console.WriteLine(\\\"Invalid search criteria.\\\");\\n                return;\\n        }\\n        \\n        if (results.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No books found matching your search.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"\\\\nSearch results:\\\");\\n            foreach (var book in results)\\n            {\\n                Console.WriteLine($\\\"{book.Title} by {book.Author} ({book.Genre})\\\");\\n            }\\n        }\\n    }\\n    \\n    private void ListAllBooks()\\n    {\\n        if (_books.Count == 0)\\n        {\\n            Console.WriteLine(\\\"The library is currently empty.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nAll books in the library:\\\");\\n        foreach (var book in _books)\\n        {\\n            Console.WriteLine($\\\"{book.Title} by {book.Author} ({book.Genre})\\\");\\n        }\\n    }\\n    \\n    private void SaveLibrary()\\n    {\\n        string jsonData = JsonSerializer.Serialize(_books);\\n        File.WriteAllText(_dataFilePath, jsonData);\\n    }\\n}\\n\\npublic class Book\\n{\\n    public string Title { get; set; }\\n    public string Author { get; set; }\\n    public string Genre { get; set; }\\n}\",\n  \"name\": \"Book Library Organizer\",\n  \"description\": \"A module for organizing and searching through a library of books by title, author, or genre\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":531,"completion_tokens":1320,"total_tokens":1851,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":83},"system_fingerprint":"fp_3d5141a69a_prod0225"}