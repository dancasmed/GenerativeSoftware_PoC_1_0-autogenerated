
{"id":"ec15cbd5-445c-4e54-a54f-c71c66635d27","object":"chat.completion","created":1743796598,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class CarRentalModule\\n{\\n    public string Name { get; set; } = \\\"Car Rental Inventory Manager\\\";\\n    \\n    private string _dataFilePath;\\n    \\n    public CarRentalModule()\\n    {\\n    }\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Starting Car Rental Inventory Manager...\\\");\\n        \\n        _dataFilePath = Path.Combine(dataFolder, \\\"carInventory.json\\\");\\n        \\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n        \\n        if (!File.Exists(_dataFilePath))\\n        {\\n            InitializeDefaultInventory();\\n            Console.WriteLine(\\\"Created new inventory file with default data.\\\");\\n        }\\n        \\n        DisplayMainMenu();\\n        \\n        return true;\\n    }\\n    \\n    private void InitializeDefaultInventory()\\n    {\\n        var defaultCars = new List<Car>\\n        {\\n            new Car { Id = 1, Make = \\\"Toyota\\\", Model = \\\"Camry\\\", Year = 2022, DailyRate = 45.99m, IsAvailable = true },\\n            new Car { Id = 2, Make = \\\"Honda\\\", Model = \\\"Civic\\\", Year = 2021, DailyRate = 39.99m, IsAvailable = true },\\n            new Car { Id = 3, Make = \\\"Ford\\\", Model = \\\"Mustang\\\", Year = 2023, DailyRate = 69.99m, IsAvailable = true }\\n        };\\n        \\n        SaveInventory(defaultCars);\\n    }\\n    \\n    private List<Car> LoadInventory()\\n    {\\n        try\\n        {\\n            string json = File.ReadAllText(_dataFilePath);\\n            return JsonSerializer.Deserialize<List<Car>>(json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error loading inventory: \\\" + ex.Message);\\n            return new List<Car>();\\n        }\\n    }\\n    \\n    private void SaveInventory(List<Car> cars)\\n    {\\n        try\\n        {\\n            var options = new JsonSerializerOptions { WriteIndented = true };\\n            string json = JsonSerializer.Serialize(cars, options);\\n            File.WriteAllText(_dataFilePath, json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving inventory: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void DisplayMainMenu()\\n    {\\n        bool exit = false;\\n        \\n        while (!exit)\\n        {\\n            Console.WriteLine(\\\"\\\\nCar Rental Inventory Management\\\");\\n            Console.WriteLine(\\\"1. View All Cars\\\");\\n            Console.WriteLine(\\\"2. Add New Car\\\");\\n            Console.WriteLine(\\\"3. Update Car Availability\\\");\\n            Console.WriteLine(\\\"4. Remove Car\\\");\\n            Console.WriteLine(\\\"5. Exit\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    ViewAllCars();\\n                    break;\\n                case \\\"2\\\":\\n                    AddNewCar();\\n                    break;\\n                case \\\"3\\\":\\n                    UpdateCarAvailability();\\n                    break;\\n                case \\\"4\\\":\\n                    RemoveCar();\\n                    break;\\n                case \\\"5\\\":\\n                    exit = true;\\n                    Console.WriteLine(\\\"Exiting Car Rental Inventory Manager...\\\");\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n    }\\n    \\n    private void ViewAllCars()\\n    {\\n        var cars = LoadInventory();\\n        \\n        if (cars.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No cars in inventory.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nCurrent Inventory:\\\");\\n        Console.WriteLine(\\\"ID\\\\tMake\\\\tModel\\\\tYear\\\\tDaily Rate\\\\tAvailable\\\");\\n        \\n        foreach (var car in cars)\\n        {\\n            Console.WriteLine(string.Format(\\\"{0}\\\\t{1}\\\\t{2}\\\\t{3}\\\\t{4:C}\\\\t{5}\\\", \\n                car.Id, car.Make, car.Model, car.Year, car.DailyRate, car.IsAvailable ? \\\"Yes\\\" : \\\"No\\\"));\\n        }\\n    }\\n    \\n    private void AddNewCar()\\n    {\\n        Console.WriteLine(\\\"\\\\nAdd New Car\\\");\\n        \\n        try\\n        {\\n            Console.Write(\\\"Enter Make: \\\");\\n            string make = Console.ReadLine();\\n            \\n            Console.Write(\\\"Enter Model: \\\");\\n            string model = Console.ReadLine();\\n            \\n            Console.Write(\\\"Enter Year: \\\");\\n            int year = int.Parse(Console.ReadLine());\\n            \\n            Console.Write(\\\"Enter Daily Rate: \\\");\\n            decimal dailyRate = decimal.Parse(Console.ReadLine());\\n            \\n            var cars = LoadInventory();\\n            int newId = cars.Count > 0 ? cars.Max(c => c.Id) + 1 : 1;\\n            \\n            cars.Add(new Car \\n            { \\n                Id = newId, \\n                Make = make, \\n                Model = model, \\n                Year = year, \\n                DailyRate = dailyRate, \\n                IsAvailable = true \\n            });\\n            \\n            SaveInventory(cars);\\n            Console.WriteLine(\\\"Car added successfully.\\\");\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error adding car: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void UpdateCarAvailability()\\n    {\\n        ViewAllCars();\\n        \\n        try\\n        {\\n            Console.Write(\\\"\\\\nEnter ID of car to update: \\\");\\n            int id = int.Parse(Console.ReadLine());\\n            \\n            var cars = LoadInventory();\\n            var car = cars.FirstOrDefault(c => c.Id == id);\\n            \\n            if (car == null)\\n            {\\n                Console.WriteLine(\\\"Car not found.\\\");\\n                return;\\n            }\\n            \\n            Console.Write(\\\"Is the car available? (Y/N): \\\");\\n            string input = Console.ReadLine().ToUpper();\\n            \\n            car.IsAvailable = (input == \\\"Y\\\");\\n            SaveInventory(cars);\\n            \\n            Console.WriteLine(\\\"Availability updated successfully.\\\");\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error updating car: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void RemoveCar()\\n    {\\n        ViewAllCars();\\n        \\n        try\\n        {\\n            Console.Write(\\\"\\\\nEnter ID of car to remove: \\\");\\n            int id = int.Parse(Console.ReadLine());\\n            \\n            var cars = LoadInventory();\\n            var car = cars.FirstOrDefault(c => c.Id == id);\\n            \\n            if (car == null)\\n            {\\n                Console.WriteLine(\\\"Car not found.\\\");\\n                return;\\n            }\\n            \\n            cars.Remove(car);\\n            SaveInventory(cars);\\n            \\n            Console.WriteLine(\\\"Car removed successfully.\\\");\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error removing car: \\\" + ex.Message);\\n        }\\n    }\\n}\\n\\npublic class Car\\n{\\n    public int Id { get; set; }\\n    public string Make { get; set; }\\n    public string Model { get; set; }\\n    public int Year { get; set; }\\n    public decimal DailyRate { get; set; }\\n    public bool IsAvailable { get; set; }\\n}\",\n  \"name\": \"Car Rental Inventory Manager\",\n  \"description\": \"A module for managing a car rental inventory with availability status tracking\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":520,"completion_tokens":1934,"total_tokens":2454,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":8},"system_fingerprint":"fp_3d5141a69a_prod0225"}