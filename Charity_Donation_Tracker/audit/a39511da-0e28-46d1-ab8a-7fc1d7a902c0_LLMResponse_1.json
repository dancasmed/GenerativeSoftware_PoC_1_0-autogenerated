{"id":"522e426f-4ced-41ec-b66a-024f11680c16","object":"chat.completion","created":1744176325,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class CharityDonationTracker : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Charity Donation Tracker\\\";\\n    \\n    private string _donationsFilePath;\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Starting Charity Donation Tracker module...\\\");\\n        \\n        _donationsFilePath = Path.Combine(dataFolder, \\\"donations.json\\\");\\n        \\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n        \\n        bool continueRunning = true;\\n        \\n        while (continueRunning)\\n        {\\n            Console.WriteLine(\\\"\\\\nCharity Donation Tracker\\\");\\n            Console.WriteLine(\\\"1. Add Donation\\\");\\n            Console.WriteLine(\\\"2. View All Donations\\\");\\n            Console.WriteLine(\\\"3. Exit\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddDonation();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewAllDonations();\\n                    break;\\n                case \\\"3\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        Console.WriteLine(\\\"Charity Donation Tracker module finished.\\\");\\n        return true;\\n    }\\n    \\n    private void AddDonation()\\n    {\\n        Console.Write(\\\"Enter donor name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter donation amount: \\\");\\n        string amountInput = Console.ReadLine();\\n        \\n        if (!decimal.TryParse(amountInput, out decimal amount))\\n        {\\n            Console.WriteLine(\\\"Invalid amount. Please enter a valid number.\\\");\\n            return;\\n        }\\n        \\n        Console.Write(\\\"Enter donation date (YYYY-MM-DD): \\\");\\n        string dateInput = Console.ReadLine();\\n        \\n        if (!DateTime.TryParse(dateInput, out DateTime date))\\n        {\\n            Console.WriteLine(\\\"Invalid date. Please use YYYY-MM-DD format.\\\");\\n            return;\\n        }\\n        \\n        var donation = new Donation\\n        {\\n            DonorName = name,\\n            Amount = amount,\\n            Date = date\\n        };\\n        \\n        List<Donation> donations = LoadDonations();\\n        donations.Add(donation);\\n        SaveDonations(donations);\\n        \\n        Console.WriteLine(\\\"Donation added successfully!\\\");\\n    }\\n    \\n    private void ViewAllDonations()\\n    {\\n        List<Donation> donations = LoadDonations();\\n        \\n        if (donations.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No donations recorded yet.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nAll Donations:\\\");\\n        Console.WriteLine(\\\"-------------------------------------------------\\\");\\n        Console.WriteLine(\\\"Donor Name\\\\tAmount\\\\tDate\\\");\\n        Console.WriteLine(\\\"-------------------------------------------------\\\");\\n        \\n        foreach (var donation in donations)\\n        {\\n            Console.WriteLine(string.Format(\\\"{0}\\\\t{1:C}\\\\t{2:yyyy-MM-dd}\\\", \\n                donation.DonorName, donation.Amount, donation.Date));\\n        }\\n        \\n        decimal total = 0;\\n        foreach (var donation in donations)\\n        {\\n            total += donation.Amount;\\n        }\\n        \\n        Console.WriteLine(\\\"-------------------------------------------------\\\");\\n        Console.WriteLine(string.Format(\\\"Total: {0:C}\\\", total));\\n    }\\n    \\n    private List<Donation> LoadDonations()\\n    {\\n        if (!File.Exists(_donationsFilePath))\\n        {\\n            return new List<Donation>();\\n        }\\n        \\n        string json = File.ReadAllText(_donationsFilePath);\\n        return JsonSerializer.Deserialize<List<Donation>>(json) ?? new List<Donation>();\\n    }\\n    \\n    private void SaveDonations(List<Donation> donations)\\n    {\\n        string json = JsonSerializer.Serialize(donations);\\n        File.WriteAllText(_donationsFilePath, json);\\n    }\\n}\\n\\npublic class Donation\\n{\\n    public string DonorName { get; set; }\\n    public decimal Amount { get; set; }\\n    public DateTime Date { get; set; }\\n}\",\n  \"name\": \"Charity Donation Tracker\",\n  \"description\": \"Tracks donations for a charity event with donor details, amount and date. Stores data in JSON format.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1167,"total_tokens":1688,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":73},"system_fingerprint":"fp_3d5141a69a_prod0225"}