{"id":"42582afe-1085-4038-bd50-49590e4976b2","object":"chat.completion","created":1743790098,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class CharityDonationTracker : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Charity Donation Tracker\\\";\\n\\n    private string donationsFilePath;\\n    \\n    public CharityDonationTracker()\\n    {\\n    }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        donationsFilePath = Path.Combine(dataFolder, \\\"donations.json\\\");\\n        \\n        Console.WriteLine(\\\"Charity Donation Tracker module is running.\\\");\\n        Console.WriteLine(\\\"Data will be saved to: \\\" + donationsFilePath);\\n        \\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            DisplayMenu();\\n            \\n            string input = Console.ReadLine();\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddDonation();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewAllDonations();\\n                    break;\\n                case \\\"3\\\":\\n                    CalculateTotalDonations();\\n                    break;\\n                case \\\"4\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        Console.WriteLine(\\\"Charity Donation Tracker module completed.\\\");\\n        return true;\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nCharity Donation Tracker\\\");\\n        Console.WriteLine(\\\"1. Add a donation\\\");\\n        Console.WriteLine(\\\"2. View all donations\\\");\\n        Console.WriteLine(\\\"3. Calculate total donations\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n    \\n    private void AddDonation()\\n    {\\n        Console.Write(\\\"Enter donor name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter donation amount: \\\");\\n        if (!decimal.TryParse(Console.ReadLine(), out decimal amount))\\n        {\\n            Console.WriteLine(\\\"Invalid amount. Please enter a valid number.\\\");\\n            return;\\n        }\\n        \\n        Console.Write(\\\"Enter donation date (YYYY-MM-DD): \\\");\\n        if (!DateTime.TryParse(Console.ReadLine(), out DateTime date))\\n        {\\n            Console.WriteLine(\\\"Invalid date format. Using current date.\\\");\\n            date = DateTime.Now;\\n        }\\n        \\n        var donation = new Donation\\n        {\\n            DonorName = name,\\n            Amount = amount,\\n            Date = date\\n        };\\n        \\n        List<Donation> donations = LoadDonations();\\n        donations.Add(donation);\\n        SaveDonations(donations);\\n        \\n        Console.WriteLine(\\\"Donation added successfully.\\\");\\n    }\\n    \\n    private void ViewAllDonations()\\n    {\\n        List<Donation> donations = LoadDonations();\\n        \\n        if (donations.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No donations recorded yet.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nAll Donations:\\\");\\n        Console.WriteLine(\\\"--------------------------------------------------\\\");\\n        Console.WriteLine(\\\"{0,-20} {1,10} {2,15}\\\", \\\"Donor Name\\\", \\\"Amount\\\", \\\"Date\\\");\\n        Console.WriteLine(\\\"--------------------------------------------------\\\");\\n        \\n        foreach (var donation in donations)\\n        {\\n            Console.WriteLine(\\\"{0,-20} {1,10:C2} {2,15:d}\\\", \\n                donation.DonorName, \\n                donation.Amount, \\n                donation.Date);\\n        }\\n    }\\n    \\n    private void CalculateTotalDonations()\\n    {\\n        List<Donation> donations = LoadDonations();\\n        decimal total = 0;\\n        \\n        foreach (var donation in donations)\\n        {\\n            total += donation.Amount;\\n        }\\n        \\n        Console.WriteLine(\\\"Total donations: \\\" + total.ToString(\\\"C2\\\"));\\n    }\\n    \\n    private List<Donation> LoadDonations()\\n    {\\n        if (!File.Exists(donationsFilePath))\\n        {\\n            return new List<Donation>();\\n        }\\n        \\n        string json = File.ReadAllText(donationsFilePath);\\n        return JsonSerializer.Deserialize<List<Donation>>(json) ?? new List<Donation>();\\n    }\\n    \\n    private void SaveDonations(List<Donation> donations)\\n    {\\n        string json = JsonSerializer.Serialize(donations);\\n        File.WriteAllText(donationsFilePath, json);\\n    }\\n}\\n\\npublic class Donation\\n{\\n    public string DonorName { get; set; }\\n    public decimal Amount { get; set; }\\n    public DateTime Date { get; set; }\\n}\",\n  \"name\": \"Charity Donation Tracker\",\n  \"description\": \"Tracks donations to a charity with donor details and amounts. Allows adding new donations, viewing all donations, and calculating total donations.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":522,"completion_tokens":1241,"total_tokens":1763,"prompt_tokens_details":{"cached_tokens":0},"prompt_cache_hit_tokens":0,"prompt_cache_miss_tokens":522},"system_fingerprint":"fp_3d5141a69a_prod0225"}