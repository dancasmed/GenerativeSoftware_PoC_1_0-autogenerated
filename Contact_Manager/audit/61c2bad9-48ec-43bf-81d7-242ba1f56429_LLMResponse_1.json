{"id":"4590aec8-8171-43d3-9270-a604fdf9bd86","object":"chat.completion","created":1743794746,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class ContactManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Contact Manager\\\";\\n    \\n    private List<Contact> _contacts = new List<Contact>();\\n    private string _dataFilePath;\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Starting Contact Manager module...\\\");\\n        \\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n        \\n        _dataFilePath = Path.Combine(dataFolder, \\\"contacts.json\\\");\\n        \\n        LoadContacts();\\n        \\n        bool running = true;\\n        while (running)\\n        {\\n            DisplayMenu();\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddContact();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewContacts();\\n                    break;\\n                case \\\"3\\\":\\n                    SearchContact();\\n                    break;\\n                case \\\"4\\\":\\n                    DeleteContact();\\n                    break;\\n                case \\\"5\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        SaveContacts();\\n        Console.WriteLine(\\\"Contact Manager module finished.\\\");\\n        \\n        return true;\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nContact Manager Menu:\\\");\\n        Console.WriteLine(\\\"1. Add Contact\\\");\\n        Console.WriteLine(\\\"2. View Contacts\\\");\\n        Console.WriteLine(\\\"3. Search Contact\\\");\\n        Console.WriteLine(\\\"4. Delete Contact\\\");\\n        Console.WriteLine(\\\"5. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n    \\n    private void AddContact()\\n    {\\n        Console.Write(\\\"Enter contact name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter phone number: \\\");\\n        string phone = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter email address: \\\");\\n        string email = Console.ReadLine();\\n        \\n        _contacts.Add(new Contact { Name = name, Phone = phone, Email = email });\\n        Console.WriteLine(\\\"Contact added successfully.\\\");\\n    }\\n    \\n    private void ViewContacts()\\n    {\\n        if (_contacts.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No contacts available.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nContacts List:\\\");\\n        for (int i = 0; i < _contacts.Count; i++)\\n        {\\n            Console.WriteLine($\\\"{i + 1}. {_contacts[i].Name} - {_contacts[i].Phone} - {_contacts[i].Email}\\\");\\n        }\\n    }\\n    \\n    private void SearchContact()\\n    {\\n        Console.Write(\\\"Enter search term: \\\");\\n        string term = Console.ReadLine().ToLower();\\n        \\n        var results = _contacts.FindAll(c => \\n            c.Name.ToLower().Contains(term) || \\n            c.Phone.Contains(term) || \\n            c.Email.ToLower().Contains(term));\\n        \\n        if (results.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No matching contacts found.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nSearch Results:\\\");\\n        foreach (var contact in results)\\n        {\\n            Console.WriteLine($\\\"{contact.Name} - {contact.Phone} - {contact.Email}\\\");\\n        }\\n    }\\n    \\n    private void DeleteContact()\\n    {\\n        ViewContacts();\\n        \\n        if (_contacts.Count == 0)\\n            return;\\n        \\n        Console.Write(\\\"Enter contact number to delete: \\\");\\n        if (int.TryParse(Console.ReadLine(), out int index) && index > 0 && index <= _contacts.Count)\\n        {\\n            _contacts.RemoveAt(index - 1);\\n            Console.WriteLine(\\\"Contact deleted successfully.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Invalid contact number.\\\");\\n        }\\n    }\\n    \\n    private void LoadContacts()\\n    {\\n        if (File.Exists(_dataFilePath))\\n        {\\n            try\\n            {\\n                string json = File.ReadAllText(_dataFilePath);\\n                _contacts = JsonSerializer.Deserialize<List<Contact>>(json);\\n                Console.WriteLine(\\\"Contacts loaded successfully.\\\");\\n            }\\n            catch (Exception ex)\\n            {\\n                Console.WriteLine(\\\"Error loading contacts: \\\" + ex.Message);\\n            }\\n        }\\n    }\\n    \\n    private void SaveContacts()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_contacts);\\n            File.WriteAllText(_dataFilePath, json);\\n            Console.WriteLine(\\\"Contacts saved successfully.\\\");\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving contacts: \\\" + ex.Message);\\n        }\\n    }\\n}\\n\\npublic class Contact\\n{\\n    public string Name { get; set; }\\n    public string Phone { get; set; }\\n    public string Email { get; set; }\\n}\",\n  \"name\": \"Contact Manager\",\n  \"description\": \"A module for managing contacts with phone numbers and emails, with persistence to JSON files.\",\n  \"required_apis\": [],\n  \"required_nugets\": [\n    {\n      \"nuget_name\": \"System.Text.Json\",\n      \"nuget_version\": \"6.0.0\"\n    }\n  ]\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":522,"completion_tokens":1380,"total_tokens":1902,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":10},"system_fingerprint":"fp_3d5141a69a_prod0225"}