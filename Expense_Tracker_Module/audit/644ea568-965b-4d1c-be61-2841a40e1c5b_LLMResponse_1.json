
{"id":"655ebd85-2fbf-4249-8c34-aea5b24509cc","object":"chat.completion","created":1743763890,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class ExpenseTrackerModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Expense Tracker Module\\\";\\n\\n    private string _expensesFilePath;\\n    private string _categoriesFilePath;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Expense Tracker Module is running...\\\");\\n\\n        _expensesFilePath = Path.Combine(dataFolder, \\\"expenses.json\\\");\\n        _categoriesFilePath = Path.Combine(dataFolder, \\\"categories.json\\\");\\n\\n        InitializeFiles();\\n\\n        bool running = true;\\n        while (running)\\n        {\\n            DisplayMenu();\\n            var input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddExpense();\\n                    break;\\n                case \\\"2\\\":\\n                    AddCategory();\\n                    break;\\n                case \\\"3\\\":\\n                    ViewMonthlyReport();\\n                    break;\\n                case \\\"4\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        return true;\\n    }\\n\\n    private void InitializeFiles()\\n    {\\n        if (!File.Exists(_expensesFilePath))\\n        {\\n            File.WriteAllText(_expensesFilePath, \\\"[]\\\");\\n        }\\n\\n        if (!File.Exists(_categoriesFilePath))\\n        {\\n            File.WriteAllText(_categoriesFilePath, JsonSerializer.Serialize(new List<string> { \\\"Food\\\", \\\"Transport\\\", \\\"Utilities\\\", \\\"Entertainment\\\" }));\\n        }\\n    }\\n\\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nExpense Tracker Menu:\\\");\\n        Console.WriteLine(\\\"1. Add Expense\\\");\\n        Console.WriteLine(\\\"2. Add Category\\\");\\n        Console.WriteLine(\\\"3. View Monthly Report\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n\\n    private void AddExpense()\\n    {\\n        Console.Write(\\\"Enter expense amount: \\\");\\n        if (!decimal.TryParse(Console.ReadLine(), out decimal amount))\\n        {\\n            Console.WriteLine(\\\"Invalid amount. Please enter a valid number.\\\");\\n            return;\\n        }\\n\\n        Console.Write(\\\"Enter expense description: \\\");\\n        var description = Console.ReadLine();\\n\\n        var categories = JsonSerializer.Deserialize<List<string>>(File.ReadAllText(_categoriesFilePath));\\n        Console.WriteLine(\\\"Available categories:\\\");\\n        for (int i = 0; i < categories.Count; i++)\\n        {\\n            Console.WriteLine($\\\"{i + 1}. {categories[i]}\\\");\\n        }\\n\\n        Console.Write(\\\"Select category (number): \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int categoryIndex) || categoryIndex < 1 || categoryIndex > categories.Count)\\n        {\\n            Console.WriteLine(\\\"Invalid category selection.\\\");\\n            return;\\n        }\\n\\n        var expense = new Expense\\n        {\\n            Amount = amount,\\n            Description = description,\\n            Category = categories[categoryIndex - 1],\\n            Date = DateTime.Now\\n        };\\n\\n        var expenses = JsonSerializer.Deserialize<List<Expense>>(File.ReadAllText(_expensesFilePath));\\n        expenses.Add(expense);\\n        File.WriteAllText(_expensesFilePath, JsonSerializer.Serialize(expenses));\\n\\n        Console.WriteLine(\\\"Expense added successfully.\\\");\\n    }\\n\\n    private void AddCategory()\\n    {\\n        Console.Write(\\\"Enter new category name: \\\");\\n        var categoryName = Console.ReadLine();\\n\\n        if (string.IsNullOrWhiteSpace(categoryName))\\n        {\\n            Console.WriteLine(\\\"Category name cannot be empty.\\\");\\n            return;\\n        }\\n\\n        var categories = JsonSerializer.Deserialize<List<string>>(File.ReadAllText(_categoriesFilePath));\\n        if (categories.Contains(categoryName))\\n        {\\n            Console.WriteLine(\\\"Category already exists.\\\");\\n            return;\\n        }\\n\\n        categories.Add(categoryName);\\n        File.WriteAllText(_categoriesFilePath, JsonSerializer.Serialize(categories));\\n\\n        Console.WriteLine(\\\"Category added successfully.\\\");\\n    }\\n\\n    private void ViewMonthlyReport()\\n    {\\n        Console.Write(\\\"Enter year and month (yyyy-MM): \\\");\\n        var monthInput = Console.ReadLine();\\n\\n        if (!DateTime.TryParse(monthInput + \\\"-01\\\", out DateTime month))\\n        {\\n            Console.WriteLine(\\\"Invalid date format. Please use yyyy-MM.\\\");\\n            return;\\n        }\\n\\n        var expenses = JsonSerializer.Deserialize<List<Expense>>(File.ReadAllText(_expensesFilePath));\\n        var monthlyExpenses = expenses.FindAll(e => e.Date.Year == month.Year && e.Date.Month == month.Month);\\n\\n        if (monthlyExpenses.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No expenses found for the selected month.\\\");\\n            return;\\n        }\\n\\n        var categories = JsonSerializer.Deserialize<List<string>>(File.ReadAllText(_categoriesFilePath));\\n        var report = new Dictionary<string, decimal>();\\n\\n        foreach (var category in categories)\\n        {\\n            report[category] = 0;\\n        }\\n\\n        foreach (var expense in monthlyExpenses)\\n        {\\n            report[expense.Category] += expense.Amount;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nMonthly Expense Report:\\\");\\n        Console.WriteLine($\\\"Month: {month:yyyy-MM}\\\");\\n        Console.WriteLine(\\\"----------------------------\\\");\\n\\n        decimal total = 0;\\n        foreach (var entry in report)\\n        {\\n            if (entry.Value > 0)\\n            {\\n                Console.WriteLine($\\\"{entry.Key}: {entry.Value:C}\\\");\\n                total += entry.Value;\\n            }\\n        }\\n\\n        Console.WriteLine(\\\"----------------------------\\\");\\n        Console.WriteLine($\\\"Total: {total:C}\\\");\\n    }\\n\\n    private class Expense\\n    {\\n        public decimal Amount { get; set; }\\n        public string Description { get; set; }\\n        public string Category { get; set; }\\n        public DateTime Date { get; set; }\\n    }\\n}\",\n  \"name\": \"Expense Tracker Module\",\n  \"description\": \"Tracks daily expenses and categorizes them for monthly reports\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1547,"total_tokens":2068,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":9},"system_fingerprint":"fp_3d5141a69a_prod0225"}