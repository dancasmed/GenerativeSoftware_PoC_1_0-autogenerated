
{"id":"79a5a6fe-cfd6-4490-b9ba-28bae75a8c9d","object":"chat.completion","created":1744185098,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class FitnessCenterModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Fitness Center Management System\\\";\\n\\n    private string membersFilePath;\\n    private string classesFilePath;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Initializing Fitness Center Management System...\\\");\\n\\n        membersFilePath = Path.Combine(dataFolder, \\\"members.json\\\");\\n        classesFilePath = Path.Combine(dataFolder, \\\"classes.json\\\");\\n\\n        InitializeDataFiles();\\n\\n        bool running = true;\\n        while (running)\\n        {\\n            DisplayMenu();\\n            var input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddMember();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewMembers();\\n                    break;\\n                case \\\"3\\\":\\n                    AddClass();\\n                    break;\\n                case \\\"4\\\":\\n                    ViewClasses();\\n                    break;\\n                case \\\"5\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        Console.WriteLine(\\\"Fitness Center Management System is shutting down...\\\");\\n        return true;\\n    }\\n\\n    private void InitializeDataFiles()\\n    {\\n        if (!Directory.Exists(Path.GetDirectoryName(membersFilePath)))\\n        {\\n            Directory.CreateDirectory(Path.GetDirectoryName(membersFilePath));\\n        }\\n\\n        if (!File.Exists(membersFilePath))\\n        {\\n            File.WriteAllText(membersFilePath, \\\"[]\\\");\\n        }\\n\\n        if (!File.Exists(classesFilePath))\\n        {\\n            File.WriteAllText(classesFilePath, \\\"[]\\\");\\n        }\\n    }\\n\\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nFitness Center Management System\\\");\\n        Console.WriteLine(\\\"1. Add Member\\\");\\n        Console.WriteLine(\\\"2. View Members\\\");\\n        Console.WriteLine(\\\"3. Add Class\\\");\\n        Console.WriteLine(\\\"4. View Classes\\\");\\n        Console.WriteLine(\\\"5. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n\\n    private void AddMember()\\n    {\\n        Console.Write(\\\"Enter member name: \\\");\\n        var name = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter member email: \\\");\\n        var email = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter membership type (Basic/Premium): \\\");\\n        var membershipType = Console.ReadLine();\\n\\n        var members = LoadMembers();\\n        members.Add(new Member\\n        {\\n            Id = Guid.NewGuid(),\\n            Name = name,\\n            Email = email,\\n            MembershipType = membershipType,\\n            JoinDate = DateTime.Now\\n        });\\n\\n        SaveMembers(members);\\n        Console.WriteLine(\\\"Member added successfully.\\\");\\n    }\\n\\n    private void ViewMembers()\\n    {\\n        var members = LoadMembers();\\n\\n        Console.WriteLine(\\\"\\\\nMembers List:\\\");\\n        foreach (var member in members)\\n        {\\n            Console.WriteLine(\\\"ID: \\\" + member.Id);\\n            Console.WriteLine(\\\"Name: \\\" + member.Name);\\n            Console.WriteLine(\\\"Email: \\\" + member.Email);\\n            Console.WriteLine(\\\"Membership: \\\" + member.MembershipType);\\n            Console.WriteLine(\\\"Join Date: \\\" + member.JoinDate);\\n            Console.WriteLine();\\n        }\\n    }\\n\\n    private void AddClass()\\n    {\\n        Console.Write(\\\"Enter class name: \\\");\\n        var className = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter instructor name: \\\");\\n        var instructor = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter schedule (e.g., Mon/Wed 5-6pm): \\\");\\n        var schedule = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter maximum capacity: \\\");\\n        var capacity = int.Parse(Console.ReadLine());\\n\\n        var classes = LoadClasses();\\n        classes.Add(new FitnessClass\\n        {\\n            Id = Guid.NewGuid(),\\n            ClassName = className,\\n            Instructor = instructor,\\n            Schedule = schedule,\\n            Capacity = capacity,\\n            CurrentEnrollment = 0\\n        });\\n\\n        SaveClasses(classes);\\n        Console.WriteLine(\\\"Class added successfully.\\\");\\n    }\\n\\n    private void ViewClasses()\\n    {\\n        var classes = LoadClasses();\\n\\n        Console.WriteLine(\\\"\\\\nClass Schedule:\\\");\\n        foreach (var fitnessClass in classes)\\n        {\\n            Console.WriteLine(\\\"ID: \\\" + fitnessClass.Id);\\n            Console.WriteLine(\\\"Class: \\\" + fitnessClass.ClassName);\\n            Console.WriteLine(\\\"Instructor: \\\" + fitnessClass.Instructor);\\n            Console.WriteLine(\\\"Schedule: \\\" + fitnessClass.Schedule);\\n            Console.WriteLine(\\\"Capacity: \\\" + fitnessClass.Capacity + \\\" (\\\" + fitnessClass.CurrentEnrollment + \\\" enrolled)\\\");\\n            Console.WriteLine();\\n        }\\n    }\\n\\n    private List<Member> LoadMembers()\\n    {\\n        var json = File.ReadAllText(membersFilePath);\\n        return JsonSerializer.Deserialize<List<Member>>(json) ?? new List<Member>();\\n    }\\n\\n    private void SaveMembers(List<Member> members)\\n    {\\n        var json = JsonSerializer.Serialize(members);\\n        File.WriteAllText(membersFilePath, json);\\n    }\\n\\n    private List<FitnessClass> LoadClasses()\\n    {\\n        var json = File.ReadAllText(classesFilePath);\\n        return JsonSerializer.Deserialize<List<FitnessClass>>(json) ?? new List<FitnessClass>();\\n    }\\n\\n    private void SaveClasses(List<FitnessClass> classes)\\n    {\\n        var json = JsonSerializer.Serialize(classes);\\n        File.WriteAllText(classesFilePath, json);\\n    }\\n}\\n\\npublic class Member\\n{\\n    public Guid Id { get; set; }\\n    public string Name { get; set; }\\n    public string Email { get; set; }\\n    public string MembershipType { get; set; }\\n    public DateTime JoinDate { get; set; }\\n}\\n\\npublic class FitnessClass\\n{\\n    public Guid Id { get; set; }\\n    public string ClassName { get; set; }\\n    public string Instructor { get; set; }\\n    public string Schedule { get; set; }\\n    public int Capacity { get; set; }\\n    public int CurrentEnrollment { get; set; }\\n}\",\n  \"name\": \"Fitness Center Management System\",\n  \"description\": \"A system to manage fitness center memberships and class schedules with data persistence in JSON files.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":525,"completion_tokens":1633,"total_tokens":2158,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":13},"system_fingerprint":"fp_3d5141a69a_prod0225"}