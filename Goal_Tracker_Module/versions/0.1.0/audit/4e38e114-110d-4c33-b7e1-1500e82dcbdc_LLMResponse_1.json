{"id":"6332d1c9-3e25-48aa-8304-8b40ffd6dc52","object":"chat.completion","created":1743799762,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class GoalTrackerModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Goal Tracker Module\\\";\\n\\n    private string _goalsFilePath;\\n    private List<Goal> _goals;\\n\\n    public GoalTrackerModule()\\n    {\\n        _goals = new List<Goal>();\\n    }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Goal Tracker Module is running...\\\");\\n        _goalsFilePath = Path.Combine(dataFolder, \\\"goals.json\\\");\\n\\n        LoadGoals();\\n\\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            DisplayMenu();\\n            var input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddGoal();\\n                    break;\\n                case \\\"2\\\":\\n                    UpdateGoalProgress();\\n                    break;\\n                case \\\"3\\\":\\n                    ViewGoals();\\n                    break;\\n                case \\\"4\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        SaveGoals();\\n        return true;\\n    }\\n\\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nGoal Tracker Menu:\\\");\\n        Console.WriteLine(\\\"1. Add a new goal\\\");\\n        Console.WriteLine(\\\"2. Update goal progress\\\");\\n        Console.WriteLine(\\\"3. View all goals\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n\\n    private void LoadGoals()\\n    {\\n        if (File.Exists(_goalsFilePath))\\n        {\\n            try\\n            {\\n                string json = File.ReadAllText(_goalsFilePath);\\n                _goals = JsonSerializer.Deserialize<List<Goal>>(json);\\n            }\\n            catch (Exception ex)\\n            {\\n                Console.WriteLine(\\\"Error loading goals: \\\" + ex.Message);\\n            }\\n        }\\n    }\\n\\n    private void SaveGoals()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_goals);\\n            File.WriteAllText(_goalsFilePath, json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving goals: \\\" + ex.Message);\\n        }\\n    }\\n\\n    private void AddGoal()\\n    {\\n        Console.Write(\\\"Enter goal name: \\\");\\n        string name = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter goal description: \\\");\\n        string description = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter total milestones: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int totalMilestones))\\n        {\\n            Console.WriteLine(\\\"Invalid number of milestones.\\\");\\n            return;\\n        }\\n\\n        var goal = new Goal\\n        {\\n            Id = Guid.NewGuid(),\\n            Name = name,\\n            Description = description,\\n            TotalMilestones = totalMilestones,\\n            CompletedMilestones = 0,\\n            CreatedDate = DateTime.Now\\n        };\\n\\n        _goals.Add(goal);\\n        Console.WriteLine(\\\"Goal added successfully!\\\");\\n    }\\n\\n    private void UpdateGoalProgress()\\n    {\\n        if (_goals.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No goals available to update.\\\");\\n            return;\\n        }\\n\\n        ViewGoals();\\n        Console.Write(\\\"Enter the number of the goal to update: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int goalIndex) || goalIndex < 1 || goalIndex > _goals.Count)\\n        {\\n            Console.WriteLine(\\\"Invalid goal selection.\\\");\\n            return;\\n        }\\n\\n        var goal = _goals[goalIndex - 1];\\n        Console.Write(\\\"Enter number of completed milestones to add: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int completedMilestones))\\n        {\\n            Console.WriteLine(\\\"Invalid number of milestones.\\\");\\n            return;\\n        }\\n\\n        goal.CompletedMilestones = Math.Min(goal.CompletedMilestones + completedMilestones, goal.TotalMilestones);\\n        Console.WriteLine(\\\"Goal progress updated successfully!\\\");\\n    }\\n\\n    private void ViewGoals()\\n    {\\n        if (_goals.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No goals available.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nCurrent Goals:\\\");\\n        for (int i = 0; i < _goals.Count; i++)\\n        {\\n            var goal = _goals[i];\\n            double percentage = (double)goal.CompletedMilestones / goal.TotalMilestones * 100;\\n            Console.WriteLine($\\\"{i + 1}. {goal.Name} - {percentage:F1}% complete ({goal.CompletedMilestones}/{goal.TotalMilestones} milestones)\\\");\\n            Console.WriteLine($\\\"   Description: {goal.Description}\\\");\\n            Console.WriteLine($\\\"   Created: {goal.CreatedDate:yyyy-MM-dd}\\\");\\n        }\\n    }\\n}\\n\\npublic class Goal\\n{\\n    public Guid Id { get; set; }\\n    public string Name { get; set; }\\n    public string Description { get; set; }\\n    public int TotalMilestones { get; set; }\\n    public int CompletedMilestones { get; set; }\\n    public DateTime CreatedDate { get; set; }\\n}\",\n  \"name\": \"Goal Tracker Module\",\n  \"description\": \"A module for tracking personal goals with milestones and completion percentage\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":522,"completion_tokens":1379,"total_tokens":1901,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":74},"system_fingerprint":"fp_3d5141a69a_prod0225"}