
{"id":"c1c6f398-adc9-4197-b800-7513fc97c295","object":"chat.completion","created":1744180589,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class GymMembershipManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Gym Membership Manager\\\";\\n    \\n    private string _membersFilePath;\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        _membersFilePath = Path.Combine(dataFolder, \\\"members.json\\\");\\n        \\n        Console.WriteLine(\\\"Gym Membership Manager is running.\\\");\\n        Console.WriteLine(\\\"Initializing database in: \\\" + dataFolder);\\n        \\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n        \\n        List<Member> members = LoadMembers();\\n        \\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            DisplayMenu();\\n            string choice = Console.ReadLine();\\n            \\n            switch (choice)\\n            {\\n                case \\\"1\\\":\\n                    AddMember(members);\\n                    break;\\n                case \\\"2\\\":\\n                    ViewMembers(members);\\n                    break;\\n                case \\\"3\\\":\\n                    SearchMember(members);\\n                    break;\\n                case \\\"4\\\":\\n                    DeleteMember(members);\\n                    break;\\n                case \\\"5\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid choice. Please try again.\\\");\\n                    break;\\n            }\\n            \\n            SaveMembers(members);\\n        }\\n        \\n        Console.WriteLine(\\\"Gym Membership Manager is shutting down.\\\");\\n        return true;\\n    }\\n    \\n    private List<Member> LoadMembers()\\n    {\\n        if (File.Exists(_membersFilePath))\\n        {\\n            string json = File.ReadAllText(_membersFilePath);\\n            return JsonSerializer.Deserialize<List<Member>>(json) ?? new List<Member>();\\n        }\\n        return new List<Member>();\\n    }\\n    \\n    private void SaveMembers(List<Member> members)\\n    {\\n        string json = JsonSerializer.Serialize(members);\\n        File.WriteAllText(_membersFilePath, json);\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nGym Membership Manager\\\");\\n        Console.WriteLine(\\\"1. Add Member\\\");\\n        Console.WriteLine(\\\"2. View All Members\\\");\\n        Console.WriteLine(\\\"3. Search Member\\\");\\n        Console.WriteLine(\\\"4. Delete Member\\\");\\n        Console.WriteLine(\\\"5. Exit\\\");\\n        Console.Write(\\\"Enter your choice: \\\");\\n    }\\n    \\n    private void AddMember(List<Member> members)\\n    {\\n        Console.Write(\\\"Enter member name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter member ID: \\\");\\n        string memberId = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter membership type: \\\");\\n        string membershipType = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter start date (YYYY-MM-DD): \\\");\\n        if (DateTime.TryParse(Console.ReadLine(), out DateTime startDate))\\n        {\\n            members.Add(new Member\\n            {\\n                Name = name,\\n                MemberId = memberId,\\n                MembershipType = membershipType,\\n                StartDate = startDate,\\n                IsActive = true\\n            });\\n            \\n            Console.WriteLine(\\\"Member added successfully.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Invalid date format. Member not added.\\\");\\n        }\\n    }\\n    \\n    private void ViewMembers(List<Member> members)\\n    {\\n        if (members.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No members found.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nList of Members:\\\");\\n        foreach (var member in members)\\n        {\\n            Console.WriteLine($\\\"ID: {member.MemberId}, Name: {member.Name}, Type: {member.MembershipType}, Start Date: {member.StartDate.ToShortDateString()}, Active: {member.IsActive}\\\");\\n        }\\n    }\\n    \\n    private void SearchMember(List<Member> members)\\n    {\\n        Console.Write(\\\"Enter member name or ID to search: \\\");\\n        string searchTerm = Console.ReadLine();\\n        \\n        var foundMembers = members.FindAll(m => \\n            m.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) || \\n            m.MemberId.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));\\n        \\n        if (foundMembers.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No members found matching your search.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"\\\\nFound Members:\\\");\\n            foreach (var member in foundMembers)\\n            {\\n                Console.WriteLine($\\\"ID: {member.MemberId}, Name: {member.Name}, Type: {member.MembershipType}, Start Date: {member.StartDate.ToShortDateString()}, Active: {member.IsActive}\\\");\\n            }\\n        }\\n    }\\n    \\n    private void DeleteMember(List<Member> members)\\n    {\\n        Console.Write(\\\"Enter member ID to delete: \\\");\\n        string memberId = Console.ReadLine();\\n        \\n        int index = members.FindIndex(m => m.MemberId.Equals(memberId, StringComparison.OrdinalIgnoreCase));\\n        \\n        if (index >= 0)\\n        {\\n            members.RemoveAt(index);\\n            Console.WriteLine(\\\"Member deleted successfully.\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Member not found.\\\");\\n        }\\n    }\\n}\\n\\npublic class Member\\n{\\n    public string Name { get; set; }\\n    public string MemberId { get; set; }\\n    public string MembershipType { get; set; }\\n    public DateTime StartDate { get; set; }\\n    public bool IsActive { get; set; }\\n}\",\n  \"name\": \"Gym Membership Manager\",\n  \"description\": \"A system to manage gym memberships with CRUD operations, storing data in JSON format\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1479,"total_tokens":2000,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":9},"system_fingerprint":"fp_3d5141a69a_prod0225"}