{"id":"ea2d6540-a0d0-4732-aef1-59d7685a08f1","object":"chat.completion","created":1744183332,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class HomePurchaseCalculator : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Home Purchase Calculator\\\";\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Home Purchase Calculator Module is running.\\\");\\n        Console.WriteLine(\\\"This module calculates the total cost of a home purchase with down payment and mortgage.\\\");\\n\\n        try\\n        {\\n            double homePrice = GetInputDouble(\\\"Enter the home price: \\\");\\n            double downPaymentPercentage = GetInputDouble(\\\"Enter the down payment percentage (e.g., 20 for 20%): \\\");\\n            double annualInterestRate = GetInputDouble(\\\"Enter the annual interest rate (e.g., 3.5 for 3.5%): \\\");\\n            int loanTermYears = GetInputInt(\\\"Enter the loan term in years: \\\");\\n\\n            double downPayment = homePrice * (downPaymentPercentage / 100);\\n            double loanAmount = homePrice - downPayment;\\n            double monthlyInterestRate = annualInterestRate / 100 / 12;\\n            int numberOfPayments = loanTermYears * 12;\\n\\n            double monthlyPayment = loanAmount * \\n                (monthlyInterestRate * Math.Pow(1 + monthlyInterestRate, numberOfPayments)) / \\n                (Math.Pow(1 + monthlyInterestRate, numberOfPayments) - 1);\\n\\n            double totalPayment = monthlyPayment * numberOfPayments;\\n            double totalCost = downPayment + totalPayment;\\n\\n            var result = new\\n            {\\n                HomePrice = homePrice,\\n                DownPaymentPercentage = downPaymentPercentage,\\n                DownPaymentAmount = downPayment,\\n                LoanAmount = loanAmount,\\n                AnnualInterestRate = annualInterestRate,\\n                LoanTermYears = loanTermYears,\\n                MonthlyPayment = monthlyPayment,\\n                TotalPayment = totalPayment,\\n                TotalCost = totalCost\\n            };\\n\\n            string jsonResult = JsonSerializer.Serialize(result, new JsonSerializerOptions { WriteIndented = true });\\n            string filePath = Path.Combine(dataFolder, \\\"HomePurchaseResult.json\\\");\\n            File.WriteAllText(filePath, jsonResult);\\n\\n            Console.WriteLine(\\\"Calculation completed successfully.\\\");\\n            Console.WriteLine(\\\"Results saved to: \\\" + filePath);\\n            Console.WriteLine(\\\"Total cost of home purchase: \\\" + totalCost.ToString(\\\"C\\\"));\\n\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n\\n    private double GetInputDouble(string prompt)\\n    {\\n        Console.Write(prompt);\\n        string input = Console.ReadLine();\\n        while (!double.TryParse(input, out double result) || result <= 0)\\n        {\\n            Console.Write(\\\"Invalid input. Please enter a positive number: \\\");\\n            input = Console.ReadLine();\\n        }\\n        return double.Parse(input);\\n    }\\n\\n    private int GetInputInt(string prompt)\\n    {\\n        Console.Write(prompt);\\n        string input = Console.ReadLine();\\n        while (!int.TryParse(input, out int result) || result <= 0)\\n        {\\n            Console.Write(\\\"Invalid input. Please enter a positive integer: \\\");\\n            input = Console.ReadLine();\\n        }\\n        return int.Parse(input);\\n    }\\n}\",\n  \"name\": \"Home Purchase Calculator\",\n  \"description\": \"Calculates the total cost of a home purchase including down payment and mortgage payments.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":529,"completion_tokens":852,"total_tokens":1381,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":17},"system_fingerprint":"fp_3d5141a69a_prod0225"}