{"id":"b224900c-9ef4-48cb-a36b-39d293de836e","object":"chat.completion","created":1743797167,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class InvestmentPortfolioTracker : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Investment Portfolio Tracker\\\";\\n    \\n    private string _dataFilePath;\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Investment Portfolio Tracker module is running.\\\");\\n        \\n        try\\n        {\\n            _dataFilePath = Path.Combine(dataFolder, \\\"portfolio_data.json\\\");\\n            \\n            if (!Directory.Exists(dataFolder))\\n            {\\n                Directory.CreateDirectory(dataFolder);\\n            }\\n            \\n            var portfolio = LoadPortfolio();\\n            \\n            bool exit = false;\\n            while (!exit)\\n            {\\n                Console.WriteLine(\\\"\\\\nPortfolio Tracker Menu:\\\");\\n                Console.WriteLine(\\\"1. Add Investment\\\");\\n                Console.WriteLine(\\\"2. View Portfolio\\\");\\n                Console.WriteLine(\\\"3. Calculate Performance\\\");\\n                Console.WriteLine(\\\"4. Exit\\\");\\n                Console.Write(\\\"Select an option: \\\");\\n                \\n                var input = Console.ReadLine();\\n                \\n                switch (input)\\n                {\\n                    case \\\"1\\\":\\n                        AddInvestment(portfolio);\\n                        break;\\n                    case \\\"2\\\":\\n                        ViewPortfolio(portfolio);\\n                        break;\\n                    case \\\"3\\\":\\n                        CalculatePerformance(portfolio);\\n                        break;\\n                    case \\\"4\\\":\\n                        exit = true;\\n                        break;\\n                    default:\\n                        Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                        break;\\n                }\\n            }\\n            \\n            SavePortfolio(portfolio);\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n    \\n    private List<Investment> LoadPortfolio()\\n    {\\n        if (File.Exists(_dataFilePath))\\n        {\\n            var json = File.ReadAllText(_dataFilePath);\\n            return JsonSerializer.Deserialize<List<Investment>>(json) ?? new List<Investment>();\\n        }\\n        return new List<Investment>();\\n    }\\n    \\n    private void SavePortfolio(List<Investment> portfolio)\\n    {\\n        var json = JsonSerializer.Serialize(portfolio);\\n        File.WriteAllText(_dataFilePath, json);\\n    }\\n    \\n    private void AddInvestment(List<Investment> portfolio)\\n    {\\n        Console.Write(\\\"Enter investment name: \\\");\\n        var name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter initial amount invested: \\\");\\n        if (!decimal.TryParse(Console.ReadLine(), out var amount))\\n        {\\n            Console.WriteLine(\\\"Invalid amount.\\\");\\n            return;\\n        }\\n        \\n        Console.Write(\\\"Enter current value: \\\");\\n        if (!decimal.TryParse(Console.ReadLine(), out var currentValue))\\n        {\\n            Console.WriteLine(\\\"Invalid current value.\\\");\\n            return;\\n        }\\n        \\n        portfolio.Add(new Investment\\n        {\\n            Name = name,\\n            InitialAmount = amount,\\n            CurrentValue = currentValue,\\n            PurchaseDate = DateTime.Now\\n        });\\n        \\n        Console.WriteLine(\\\"Investment added successfully.\\\");\\n    }\\n    \\n    private void ViewPortfolio(List<Investment> portfolio)\\n    {\\n        if (portfolio.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No investments in portfolio.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nCurrent Portfolio:\\\");\\n        Console.WriteLine(\\\"-------------------------------------------------\\\");\\n        Console.WriteLine(\\\"| Name           | Initial Amt | Current Val | Gain/Loss |\\\");\\n        Console.WriteLine(\\\"-------------------------------------------------\\\");\\n        \\n        foreach (var investment in portfolio)\\n        {\\n            var gainLoss = investment.CurrentValue - investment.InitialAmount;\\n            Console.WriteLine(string.Format(\\\"| {0,-15} | {1,11:C2} | {2,11:C2} | {3,9:C2} |\\\", \\n                investment.Name, investment.InitialAmount, investment.CurrentValue, gainLoss));\\n        }\\n        \\n        Console.WriteLine(\\\"-------------------------------------------------\\\");\\n    }\\n    \\n    private void CalculatePerformance(List<Investment> portfolio)\\n    {\\n        if (portfolio.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No investments in portfolio.\\\");\\n            return;\\n        }\\n        \\n        decimal totalInitial = 0;\\n        decimal totalCurrent = 0;\\n        \\n        foreach (var investment in portfolio)\\n        {\\n            totalInitial += investment.InitialAmount;\\n            totalCurrent += investment.CurrentValue;\\n        }\\n        \\n        var totalGainLoss = totalCurrent - totalInitial;\\n        var percentageChange = (totalGainLoss / totalInitial) * 100;\\n        \\n        Console.WriteLine(\\\"\\\\nPortfolio Performance Summary:\\\");\\n        Console.WriteLine(\\\"Total Initial Investment: \\\" + totalInitial.ToString(\\\"C2\\\"));\\n        Console.WriteLine(\\\"Total Current Value: \\\" + totalCurrent.ToString(\\\"C2\\\"));\\n        Console.WriteLine(\\\"Total Gain/Loss: \\\" + totalGainLoss.ToString(\\\"C2\\\"));\\n        Console.WriteLine(\\\"Percentage Change: \\\" + percentageChange.ToString(\\\"F2\\\") + \\\"%\\\");\\n    }\\n}\\n\\npublic class Investment\\n{\\n    public string Name { get; set; }\\n    public decimal InitialAmount { get; set; }\\n    public decimal CurrentValue { get; set; }\\n    public DateTime PurchaseDate { get; set; }\\n}\",\n  \"name\": \"Investment Portfolio Tracker\",\n  \"description\": \"Tracks investment portfolio performance including gains/losses calculations and stores data in JSON format\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1388,"total_tokens":1909,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":73},"system_fingerprint":"fp_3d5141a69a_prod0225"}