{
  "model": "deepseek-reasoner",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful assistant with high skills in software development. The user will ask you to implement/create an application module using Cross-Platform .NET 9 C# code that adheres to the following interface:\n\n\u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022\n\n### Requirements:\n- The generated code must avoid using external APIs if possible, in case an API is needed add it to the list of required APIS.\n_ If the generated code needs NuGets installed add the NuGet name to the list of required Nugets.\n- The response must be in JSON format.\n- The \u0060source_code\u0060 field must contain C# code only (avoid markdown notation).\n- Do not include the IGeneratedModule in the generated source code.\n- The generated code **must not include any instructions that begin with \u0060Console.WriteLine($\u0060**.\n- If data persistence is required, use JSON files stored in the \u0060dataFolder\u0060 parameter of the \u0060Main\u0060 method.\n- Ensure the generated module is as detailed and complete as possible.\n- The constructor of the generated module must not have any parameters.\n- The generated code MUST not call Exit method. When the implemented Main method finish the excution control is passed to the main application.\n- The generated code must print information in the console to let know the user the module is running.\n- The generated code must implement CRUPDS operations for the data models.\n\n### Example output:\n{\u0022source_code\u0022:\u0022GENERATED C# CODE\u0022,\u0022description\u0022: \u0022GENERATED DESCRIPTION FOR THE MODULE\u0022, \u0022required_apis\u0022=[{\u0022API_1\u0022},{\u0022API_2\u0022}], , \u0022required_nugets\u0022=[{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_1\u0022,\u0022nuget_version\u0022:\u00221.0.0\u0022 },{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_2\u0022,\u0022nuget_version\u0022:\u00222.0.0.0\u0022 }]}"
    },
    {
      "role": "user",
      "content": "Generate a Cross-Platform .NET 9 C# code that implements the next interface \u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022 the Main method is the start point for the module. The souce code will run on a console application. The generated code must not write strings to console like this Console.WriteLine($\u0022{variable}\u0022). The source code will be automaticallty compiled so avoid adding markdown notation or anything that is not c# code The module must: Design a software module that allows users to plan their weekly meals, track calorie counts, and generate grocery lists. The module should enable users to create, customize, and manage meal plans for each day of the week, ensuring they meet their dietary goals. Users should be able to input their dietary preferences, restrictions, and calorie targets. The module should automatically calculate the total calorie count for each day and the entire week, and generate a corresponding grocery list based on the selected meals. The grocery list should be organized by categories (e.g., produce, dairy, meat) for easy shopping. The module should also allow users to save and reuse meal plans, and provide options to adjust portion sizes and ingredients.\n## Funcional Details ##\nCreate and customize weekly meal plans\nTrack calorie counts for each meal and day\nGenerate organized grocery lists based on selected meals\nInput dietary preferences, restrictions, and calorie targets\nAdjust portion sizes and ingredients\nSave and reuse meal plans\n## Required features ## \nCreate and manage weekly meal plans\nCalculate and display calorie counts\nGenerate basic grocery lists\nInput dietary preferences and restrictions\n## User interaction ## \nUser inputs dietary preferences and restrictions\nUser sets calorie targets for the week\nUser selects or creates meals for each day of the week\nUser adjusts portion sizes and ingredients as needed\nUser views the total calorie count for each day and the week\nUser generates and views the grocery list\nUser saves or reuses meal plans\n## Suggested data models ##\n**Meal**: \u0060{id: string, name: string, description: string, ingredients: Ingredient[], calories: number, preparation_time: number, dietary_tags: string[]}\u0060\n**Ingredient**: \u0060{id: string, name: string, category: string, quantity: number, unit: string}\u0060\n**MealPlan**: \u0060{id: string, user_id: string, start_date: date, end_date: date, days: Day[]}\u0060\n**Day**: \u0060{date: date, meals: Meal[], total_calories: number}\u0060\n**GroceryList**: \u0060{id: string, meal_plan_id: string, items: GroceryItem[], total_items: number}\u0060\n**GroceryItem**: \u0060{id: string, ingredient_id: string, name: string, category: string, quantity: number, unit: string, checked: boolean}\u0060\n**User**: \u0060{id: string, name: string, dietary_preferences: string[], dietary_restrictions: string[], calorie_target: number}\u0060"
    }
  ],
  "stream": false
}