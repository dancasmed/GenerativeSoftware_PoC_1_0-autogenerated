{
  "UseOnlineModel": true,
  "ModelToUse": "deepseek-chat",
  "Description": "",
  "SystemPrompt": "You are a helpful assistant with high skills in software, prompt engineering and business development. The user will provide a requirement to create a software module. Your task is elavorate a prompt detailing that requirement the most possible.\n### Requirements:\n- Assign a name to the software module.\n- Generate a clear prompt that will be used as input for an LLM model to design the first version of this software module.\n- Avoid mentioning version numbers, this will be managed later.\n- Avoid mention an expected response format, this will be provided later.\n- Avoid specifying the behaivor the LLM model must take, this will be managed later.\n- The response must be in markdown notation.\n- Focus on functional details\n- Avoid suggesting platforms, programming languages or any other implementation details.\n- Detail the user interaction with the module.\n- Generate a list of minimum features, desired features and bar-raiser features.\n- Data models description must be included and must be in markdown notation. IMPORTANT: It will be processed as string.\n- Make clear all models should implement CRUDS operations.\n### Example output:\n{\u0022module_name\u0022:\u0022MODULE_NAME\u0022 \u0022reviewed_prompt\u0022:\u0022GENERATED PROMPT\u0022,\u0022functional_details\u0022:\u0022[\u0022FUNCTIONAL DETAIL 1\u0022,\u0022FUNCTIONAL DETAIL 2\u0022],\u0022user_interaction\u0022:\u0022[USER INTERACTION 1, USER INTERACTION 2]\u0022,\u0022minimum_features\u0022:\u0022[MINIMUM FEATURE 1, MINIMUM FEATURE 2]\u0022,\u0022desired_features\u0022:\u0022[DESIRED FEATURE 1, DESIRED FEATURE 2]\u0022,\u0022bar_raiser_features\u0022:\u0022[BAR RAISER FEATURE 1, BAR RAISER FEATURE 2]\u0022,\u0022data_models\u0022:\u0022[DATA MODEL 1, DATA MODEL 2]\u0022}",
  "BasePrompt": "Analyze and improve the next prompt, adding all the possible details. This are the initial or high-level requirements: \u003CTASK_INPUT\u003E",
  "TaskInput": "Plan weekly meals with calorie counts and grocery lists",
  "ModelRawResponse": "{\n  \u0022choices\u0022: [\n    {\n      \u0022message\u0022: {\n        \u0022content\u0022: \u0022\\u0060\\u0060\\u0060json\\n{\\n  \\u0022module_name\\u0022: \\u0022MealPlannerPro\\u0022,\\n  \\u0022reviewed_prompt\\u0022: \\u0022Design a software module that allows users to plan their weekly meals, track calorie counts, and generate grocery lists. The module should enable users to create, customize, and manage meal plans for each day of the week, ensuring they meet their dietary goals. Users should be able to input their dietary preferences, restrictions, and calorie targets. The module should automatically calculate the total calorie count for each day and the entire week, and generate a corresponding grocery list based on the selected meals. The grocery list should be organized by categories (e.g., produce, dairy, meat) for easy shopping. The module should also allow users to save and reuse meal plans, and provide options to adjust portion sizes and ingredients.\\u0022,\\n  \\u0022functional_details\\u0022: [\\n    \\u0022Create and customize weekly meal plans\\u0022,\\n    \\u0022Track calorie counts for each meal and day\\u0022,\\n    \\u0022Generate organized grocery lists based on selected meals\\u0022,\\n    \\u0022Input dietary preferences, restrictions, and calorie targets\\u0022,\\n    \\u0022Adjust portion sizes and ingredients\\u0022,\\n    \\u0022Save and reuse meal plans\\u0022\\n  ],\\n  \\u0022user_interaction\\u0022: [\\n    \\u0022User inputs dietary preferences and restrictions\\u0022,\\n    \\u0022User sets calorie targets for the week\\u0022,\\n    \\u0022User selects or creates meals for each day of the week\\u0022,\\n    \\u0022User adjusts portion sizes and ingredients as needed\\u0022,\\n    \\u0022User views the total calorie count for each day and the week\\u0022,\\n    \\u0022User generates and views the grocery list\\u0022,\\n    \\u0022User saves or reuses meal plans\\u0022\\n  ],\\n  \\u0022minimum_features\\u0022: [\\n    \\u0022Create and manage weekly meal plans\\u0022,\\n    \\u0022Calculate and display calorie counts\\u0022,\\n    \\u0022Generate basic grocery lists\\u0022,\\n    \\u0022Input dietary preferences and restrictions\\u0022\\n  ],\\n  \\u0022desired_features\\u0022: [\\n    \\u0022Organize grocery lists by categories\\u0022,\\n    \\u0022Adjust portion sizes and ingredients\\u0022,\\n    \\u0022Save and reuse meal plans\\u0022,\\n    \\u0022Provide nutritional information beyond calories (e.g., protein, carbs)\\u0022\\n  ],\\n  \\u0022bar_raiser_features\\u0022: [\\n    \\u0022Integration with grocery delivery services\\u0022,\\n    \\u0022Meal recommendations based on dietary goals\\u0022,\\n    \\u0022Sync with fitness trackers for calorie tracking\\u0022,\\n    \\u0022Multi-user support for family meal planning\\u0022\\n  ],\\n  \\u0022data_models\\u0022: [\\n    \\u0022**Meal**: \\u0060{id: string, name: string, description: string, ingredients: Ingredient[], calories: number, preparation_time: number, dietary_tags: string[]}\\u0060\\u0022,\\n    \\u0022**Ingredient**: \\u0060{id: string, name: string, category: string, quantity: number, unit: string}\\u0060\\u0022,\\n    \\u0022**MealPlan**: \\u0060{id: string, user_id: string, start_date: date, end_date: date, days: Day[]}\\u0060\\u0022,\\n    \\u0022**Day**: \\u0060{date: date, meals: Meal[], total_calories: number}\\u0060\\u0022,\\n    \\u0022**GroceryList**: \\u0060{id: string, meal_plan_id: string, items: GroceryItem[], total_items: number}\\u0060\\u0022,\\n    \\u0022**GroceryItem**: \\u0060{id: string, ingredient_id: string, name: string, category: string, quantity: number, unit: string, checked: boolean}\\u0060\\u0022,\\n    \\u0022**User**: \\u0060{id: string, name: string, dietary_preferences: string[], dietary_restrictions: string[], calorie_target: number}\\u0060\\u0022\\n  ]\\n}\\n\\u0060\\u0060\\u0060\u0022\n      }\n    }\n  ]\n}",
  "ResponseFormat": {
    "type": "object",
    "properties": {
      "module_name": {
        "type": "string"
      },
      "reviewed_prompt": {
        "type": "string"
      },
      "functional_details": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "user_interaction": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "minimum_features": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "desired_features": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "bar_raiser_features": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "data_models": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "required": [
      "module_name",
      "reviewed_prompt",
      "functional_details",
      "user_interaction",
      "minimum_features",
      "desired_features",
      "bar_raiser_features",
      "data_models"
    ]
  },
  "ExecutionTimeMS": 155,
  "responseType": "SelfEvolvingSoftware.LLM.Tasks.Responses.ReviewInitialRequirementTaskResponse, PoC_1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
  "TaskUUID": "b5df425d-f583-44b4-be4e-cb2b5139da09",
  "ModuleName": "ModuleCreator"
}