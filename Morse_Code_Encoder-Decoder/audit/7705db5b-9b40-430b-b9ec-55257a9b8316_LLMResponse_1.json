
{"id":"73de00b3-018d-4751-979a-39f5e233910d","object":"chat.completion","created":1744172143,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text;\\n\\npublic class MorseCodeModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Morse Code Encoder/Decoder\\\";\\n\\n    private static readonly Dictionary<char, string> CharToMorse = new Dictionary<char, string>()\\n    {\\n        {'A', \\\".-\\\"}, {'B', \\\"-...\\\"}, {'C', \\\"-.-.\\\"}, {'D', \\\"-..\\\"}, {'E', \\\".\\\"},\\n        {'F', \\\"..-.\\\"}, {'G', \\\"--.\\\"}, {'H', \\\"....\\\"}, {'I', \\\"..\\\"}, {'J', \\\".---\\\"},\\n        {'K', \\\"-.-\\\"}, {'L', \\\".-..\\\"}, {'M', \\\"--\\\"}, {'N', \\\"-.\\\"}, {'O', \\\"---\\\"},\\n        {'P', \\\".--.\\\"}, {'Q', \\\"--.-\\\"}, {'R', \\\".-.\\\"}, {'S', \\\"...\\\"}, {'T', \\\"-\\\"},\\n        {'U', \\\"..-\\\"}, {'V', \\\"...-\\\"}, {'W', \\\".--\\\"}, {'X', \\\"-..-\\\"}, {'Y', \\\"-.--\\\"},\\n        {'Z', \\\"--..\\\"}, {'0', \\\"-----\\\"}, {'1', \\\".----\\\"}, {'2', \\\"..---\\\"}, {'3', \\\"...--\\\"},\\n        {'4', \\\"....-\\\"}, {'5', \\\".....\\\"}, {'6', \\\"-....\\\"}, {'7', \\\"--...\\\"}, {'8', \\\"---..\\\"},\\n        {'9', \\\"----.\\\"}, {' ', \\\"/\\\"}\\n    };\\n\\n    private static readonly Dictionary<string, char> MorseToChar = new Dictionary<string, char>()\\n    {\\n        {\\\".-\\\", 'A'}, {\\\"-...\\\", 'B'}, {\\\"-.-.\\\", 'C'}, {\\\"-..\\\", 'D'}, {\\\".\\\", 'E'},\\n        {\\\"..-.\\\", 'F'}, {\\\"--.\\\", 'G'}, {\\\"....\\\", 'H'}, {\\\"..\\\", 'I'}, {\\\".---\\\", 'J'},\\n        {\\\"-.-\\\", 'K'}, {\\\".-..\\\", 'L'}, {\\\"--\\\", 'M'}, {\\\"-.\\\", 'N'}, {\\\"---\\\", 'O'},\\n        {\\\".--.\\\", 'P'}, {\\\"--.-\\\", 'Q'}, {\\\".-.\\\", 'R'}, {\\\"...\\\", 'S'}, {\\\"-\\\", 'T'},\\n        {\\\"..-\\\", 'U'}, {\\\"...-\\\", 'V'}, {\\\".--\\\", 'W'}, {\\\"-..-\\\", 'X'}, {\\\"-.--\\\", 'Y'},\\n        {\\\"--..\\\", 'Z'}, {\\\"-----\\\", '0'}, {\\\".----\\\", '1'}, {\\\"..---\\\", '2'}, {\\\"...--\\\", '3'},\\n        {\\\"....-\\\", '4'}, {\\\".....\\\", '5'}, {\\\"-....\\\", '6'}, {\\\"--...\\\", '7'}, {\\\"---..\\\", '8'},\\n        {\\\"----.\\\", '9'}, {\\\"/\\\", ' '}\\n    };\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Morse Code Encoder/Decoder Module\\\");\\n        Console.WriteLine(\\\"Available operations:\\\");\\n        Console.WriteLine(\\\"1. Encode text to Morse code\\\");\\n        Console.WriteLine(\\\"2. Decode Morse code to text\\\");\\n        Console.WriteLine(\\\"3. Exit\\\");\\n\\n        while (true)\\n        {\\n            Console.Write(\\\"Select operation (1-3): \\\");\\n            string input = Console.ReadLine();\\n\\n            if (input == \\\"3\\\")\\n            {\\n                Console.WriteLine(\\\"Exiting Morse Code Module...\\\");\\n                return true;\\n            }\\n\\n            if (input == \\\"1\\\")\\n            {\\n                Console.Write(\\\"Enter text to encode: \\\");\\n                string text = Console.ReadLine().ToUpper();\\n                string morseCode = EncodeToMorse(text);\\n                Console.WriteLine(\\\"Encoded Morse code: \\\" + morseCode);\\n                SaveToFile(dataFolder, \\\"encoded.txt\\\", morseCode);\\n            }\\n            else if (input == \\\"2\\\")\\n            {\\n                Console.Write(\\\"Enter Morse code to decode (separate letters with space, words with '/'): \\\");\\n                string morseCode = Console.ReadLine();\\n                string text = DecodeFromMorse(morseCode);\\n                Console.WriteLine(\\\"Decoded text: \\\" + text);\\n                SaveToFile(dataFolder, \\\"decoded.txt\\\", text);\\n            }\\n            else\\n            {\\n                Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n            }\\n        }\\n    }\\n\\n    private string EncodeToMorse(string text)\\n    {\\n        StringBuilder morse = new StringBuilder();\\n        foreach (char c in text)\\n        {\\n            if (CharToMorse.TryGetValue(c, out string morseChar))\\n            {\\n                morse.Append(morseChar + \\\" \\\");\\n            }\\n            else\\n            {\\n                morse.Append(\\\"? \\\");\\n            }\\n        }\\n        return morse.ToString().Trim();\\n    }\\n\\n    private string DecodeFromMorse(string morseCode)\\n    {\\n        StringBuilder text = new StringBuilder();\\n        string[] morseWords = morseCode.Split(new[] { \\\" / \\\" }, StringSplitOptions.None);\\n\\n        foreach (string word in morseWords)\\n        {\\n            string[] morseChars = word.Split(' ');\\n            foreach (string morseChar in morseChars)\\n            {\\n                if (MorseToChar.TryGetValue(morseChar, out char c))\\n                {\\n                    text.Append(c);\\n                }\\n                else\\n                {\\n                    text.Append('?');\\n                }\\n            }\\n            text.Append(' ');\\n        }\\n        return text.ToString().Trim();\\n    }\\n\\n    private void SaveToFile(string dataFolder, string fileName, string content)\\n    {\\n        try\\n        {\\n            string filePath = Path.Combine(dataFolder, fileName);\\n            File.WriteAllText(filePath, content);\\n            Console.WriteLine(\\\"Result saved to \\\" + filePath);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving file: \\\" + ex.Message);\\n        }\\n    }\\n}\",\n  \"name\": \"Morse Code Encoder/Decoder\",\n  \"description\": \"Provides functionality to encode text to Morse code and decode Morse code back to text. Results are saved to JSON files in the specified data folder.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":519,"completion_tokens":1561,"total_tokens":2080,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":7},"system_fingerprint":"fp_3d5141a69a_prod0225"}