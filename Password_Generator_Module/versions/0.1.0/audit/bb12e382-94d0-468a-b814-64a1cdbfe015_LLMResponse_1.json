{"id":"1fe5eace-92dd-496f-8d09-8d29eb9985f0","object":"chat.completion","created":1743786106,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text;\\nusing System.Text.Json;\\n\\npublic class PasswordGeneratorModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Password Generator Module\\\";\\n\\n    private const string ConfigFileName = \\\"PasswordGeneratorConfig.json\\\";\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Password Generator Module is running.\\\");\\n\\n        try\\n        {\\n            var config = LoadConfig(dataFolder);\\n            if (config == null)\\n            {\\n                config = GetDefaultConfig();\\n                SaveConfig(dataFolder, config);\\n            }\\n\\n            Console.WriteLine(\\\"Generating passwords with the following settings:\\\");\\n            Console.WriteLine(\\\"Length: \\\" + config.PasswordLength);\\n            Console.WriteLine(\\\"Include Numbers: \\\" + config.IncludeNumbers);\\n            Console.WriteLine(\\\"Include Special Characters: \\\" + config.IncludeSpecialChars);\\n\\n            for (int i = 0; i < 5; i++)\\n            {\\n                string password = GeneratePassword(config);\\n                Console.WriteLine(\\\"Generated Password \\\" + (i + 1) + \\\": \\\" + password);\\n            }\\n\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n\\n    private PasswordGeneratorConfig LoadConfig(string dataFolder)\\n    {\\n        string configPath = Path.Combine(dataFolder, ConfigFileName);\\n        if (!File.Exists(configPath))\\n            return null;\\n\\n        string json = File.ReadAllText(configPath);\\n        return JsonSerializer.Deserialize<PasswordGeneratorConfig>(json);\\n    }\\n\\n    private void SaveConfig(string dataFolder, PasswordGeneratorConfig config)\\n    {\\n        string configPath = Path.Combine(dataFolder, ConfigFileName);\\n        string json = JsonSerializer.Serialize(config);\\n        File.WriteAllText(configPath, json);\\n    }\\n\\n    private PasswordGeneratorConfig GetDefaultConfig()\\n    {\\n        return new PasswordGeneratorConfig\\n        {\\n            PasswordLength = 12,\\n            IncludeNumbers = true,\\n            IncludeSpecialChars = true\\n        };\\n    }\\n\\n    private string GeneratePassword(PasswordGeneratorConfig config)\\n    {\\n        const string lowerChars = \\\"abcdefghijklmnopqrstuvwxyz\\\";\\n        const string upperChars = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\";\\n        const string numberChars = \\\"0123456789\\\";\\n        const string specialChars = \\\"!@#$%^&*()-_=+[]{}|;:'\\\\\\\",.<>/?\\\";\\n\\n        var charSet = new StringBuilder(lowerChars + upperChars);\\n\\n        if (config.IncludeNumbers)\\n            charSet.Append(numberChars);\\n\\n        if (config.IncludeSpecialChars)\\n            charSet.Append(specialChars);\\n\\n        var random = new Random();\\n        var password = new StringBuilder(config.PasswordLength);\\n\\n        for (int i = 0; i < config.PasswordLength; i++)\\n        {\\n            password.Append(charSet[random.Next(charSet.Length)]);\\n        }\\n\\n        return password.ToString();\\n    }\\n}\\n\\npublic class PasswordGeneratorConfig\\n{\\n    public int PasswordLength { get; set; }\\n    public bool IncludeNumbers { get; set; }\\n    public bool IncludeSpecialChars { get; set; }\\n}\",\n  \"name\": \"Password Generator Module\",\n  \"description\": \"Generates random passwords with configurable length and options for including numbers and special characters.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":522,"completion_tokens":864,"total_tokens":1386,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":10},"system_fingerprint":"fp_3d5141a69a_prod0225"}