
{"id":"a0cbab54-6f38-4085-816e-97a66bbc8ad4","object":"chat.completion","created":1744183806,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class PhotographyPortfolioManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Photography Portfolio Manager\\\";\\n\\n    private string _dataFolder;\\n    private string _portfolioFilePath;\\n\\n    public PhotographyPortfolioManager()\\n    {\\n    }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        _dataFolder = dataFolder;\\n        _portfolioFilePath = Path.Combine(_dataFolder, \\\"portfolio.json\\\");\\n\\n        Console.WriteLine(\\\"Photography Portfolio Manager is running.\\\");\\n        Console.WriteLine(\\\"Data will be stored in: \\\" + _dataFolder);\\n\\n        InitializePortfolioFile();\\n\\n        bool running = true;\\n        while (running)\\n        {\\n            DisplayMenu();\\n            string input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddPhoto();\\n                    break;\\n                case \\\"2\\\":\\n                    ListPhotos();\\n                    break;\\n                case \\\"3\\\":\\n                    SearchPhotosByTag();\\n                    break;\\n                case \\\"4\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        Console.WriteLine(\\\"Exiting Photography Portfolio Manager.\\\");\\n        return true;\\n    }\\n\\n    private void InitializePortfolioFile()\\n    {\\n        if (!Directory.Exists(_dataFolder))\\n        {\\n            Directory.CreateDirectory(_dataFolder);\\n        }\\n\\n        if (!File.Exists(_portfolioFilePath))\\n        {\\n            File.WriteAllText(_portfolioFilePath, \\\"[]\\\");\\n        }\\n    }\\n\\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nPhotography Portfolio Manager\\\");\\n        Console.WriteLine(\\\"1. Add a new photo\\\");\\n        Console.WriteLine(\\\"2. List all photos\\\");\\n        Console.WriteLine(\\\"3. Search photos by tag\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n\\n    private void AddPhoto()\\n    {\\n        Console.Write(\\\"Enter photo file name: \\\");\\n        string fileName = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter photo title: \\\");\\n        string title = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter photo description: \\\");\\n        string description = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter date taken (yyyy-MM-dd): \\\");\\n        string dateTaken = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter tags (comma separated): \\\");\\n        string tagsInput = Console.ReadLine();\\n        List<string> tags = new List<string>(tagsInput.Split(','));\\n\\n        var photo = new Photo\\n        {\\n            FileName = fileName,\\n            Title = title,\\n            Description = description,\\n            DateTaken = dateTaken,\\n            Tags = tags\\n        };\\n\\n        var portfolio = LoadPortfolio();\\n        portfolio.Add(photo);\\n        SavePortfolio(portfolio);\\n\\n        Console.WriteLine(\\\"Photo added successfully.\\\");\\n    }\\n\\n    private void ListPhotos()\\n    {\\n        var portfolio = LoadPortfolio();\\n\\n        if (portfolio.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No photos in the portfolio.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nPhoto Portfolio:\\\");\\n        foreach (var photo in portfolio)\\n        {\\n            Console.WriteLine(\\\"File: \\\" + photo.FileName);\\n            Console.WriteLine(\\\"Title: \\\" + photo.Title);\\n            Console.WriteLine(\\\"Description: \\\" + photo.Description);\\n            Console.WriteLine(\\\"Date Taken: \\\" + photo.DateTaken);\\n            Console.WriteLine(\\\"Tags: \\\" + string.Join(\\\", \\\", photo.Tags));\\n            Console.WriteLine();\\n        }\\n    }\\n\\n    private void SearchPhotosByTag()\\n    {\\n        Console.Write(\\\"Enter tag to search: \\\");\\n        string searchTag = Console.ReadLine().Trim();\\n\\n        var portfolio = LoadPortfolio();\\n        var matchingPhotos = portfolio.FindAll(p => p.Tags.Contains(searchTag));\\n\\n        if (matchingPhotos.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No photos found with tag: \\\" + searchTag);\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nPhotos with tag '\\\" + searchTag + \\\"':\\\");\\n        foreach (var photo in matchingPhotos)\\n        {\\n            Console.WriteLine(\\\"File: \\\" + photo.FileName);\\n            Console.WriteLine(\\\"Title: \\\" + photo.Title);\\n            Console.WriteLine();\\n        }\\n    }\\n\\n    private List<Photo> LoadPortfolio()\\n    {\\n        string json = File.ReadAllText(_portfolioFilePath);\\n        return JsonSerializer.Deserialize<List<Photo>>(json);\\n    }\\n\\n    private void SavePortfolio(List<Photo> portfolio)\\n    {\\n        string json = JsonSerializer.Serialize(portfolio, new JsonSerializerOptions { WriteIndented = true });\\n        File.WriteAllText(_portfolioFilePath, json);\\n    }\\n}\\n\\npublic class Photo\\n{\\n    public string FileName { get; set; }\\n    public string Title { get; set; }\\n    public string Description { get; set; }\\n    public string DateTaken { get; set; }\\n    public List<string> Tags { get; set; }\\n}\",\n  \"name\": \"Photography Portfolio Manager\",\n  \"description\": \"A tool to manage a photography portfolio with image metadata and tags\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":525,"completion_tokens":1353,"total_tokens":1878,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":13},"system_fingerprint":"fp_3d5141a69a_prod0225"}