{"id":"512e5fab-50b6-4a61-a44b-23436301b751","object":"chat.completion","created":1743796160,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class PodcastTracker : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Podcast Tracker\\\";\\n    \\n    private string _historyFilePath;\\n    \\n    public PodcastTracker()\\n    {\\n    }\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Podcast Tracker module is running...\\\");\\n        \\n        _historyFilePath = Path.Combine(dataFolder, \\\"podcast_history.json\\\");\\n        \\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n        \\n        var history = LoadHistory();\\n        \\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            Console.WriteLine(\\\"\\\\nPodcast Tracker Menu:\\\");\\n            Console.WriteLine(\\\"1. Add podcast episode\\\");\\n            Console.WriteLine(\\\"2. View listening history\\\");\\n            Console.WriteLine(\\\"3. Exit module\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n            \\n            var input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddPodcastEpisode(history);\\n                    break;\\n                case \\\"2\\\":\\n                    DisplayHistory(history);\\n                    break;\\n                case \\\"3\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        SaveHistory(history);\\n        Console.WriteLine(\\\"Podcast Tracker module finished.\\\");\\n        return true;\\n    }\\n    \\n    private List<PodcastEpisode> LoadHistory()\\n    {\\n        if (!File.Exists(_historyFilePath))\\n        {\\n            return new List<PodcastEpisode>();\\n        }\\n        \\n        try\\n        {\\n            var json = File.ReadAllText(_historyFilePath);\\n            return JsonSerializer.Deserialize<List<PodcastEpisode>>(json) ?? new List<PodcastEpisode>();\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error loading history: \\\" + ex.Message);\\n            return new List<PodcastEpisode>();\\n        }\\n    }\\n    \\n    private void SaveHistory(List<PodcastEpisode> history)\\n    {\\n        try\\n        {\\n            var options = new JsonSerializerOptions { WriteIndented = true };\\n            var json = JsonSerializer.Serialize(history, options);\\n            File.WriteAllText(_historyFilePath, json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving history: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void AddPodcastEpisode(List<PodcastEpisode> history)\\n    {\\n        Console.Write(\\\"Enter podcast name: \\\");\\n        var podcastName = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter episode title: \\\");\\n        var episodeTitle = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter date listened (yyyy-MM-dd): \\\");\\n        var dateInput = Console.ReadLine();\\n        \\n        if (!DateTime.TryParse(dateInput, out var dateListened))\\n        {\\n            dateListened = DateTime.Now;\\n        }\\n        \\n        Console.Write(\\\"Enter rating (1-5): \\\");\\n        var ratingInput = Console.ReadLine();\\n        \\n        if (!int.TryParse(ratingInput, out var rating) || rating < 1 || rating > 5)\\n        {\\n            rating = 3;\\n        }\\n        \\n        var episode = new PodcastEpisode\\n        {\\n            PodcastName = podcastName,\\n            EpisodeTitle = episodeTitle,\\n            DateListened = dateListened,\\n            Rating = rating\\n        };\\n        \\n        history.Add(episode);\\n        Console.WriteLine(\\\"Episode added successfully!\\\");\\n    }\\n    \\n    private void DisplayHistory(List<PodcastEpisode> history)\\n    {\\n        if (history.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No podcast episodes in history yet.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nPodcast Listening History:\\\");\\n        foreach (var episode in history)\\n        {\\n            Console.WriteLine($\\\"{episode.DateListened:yyyy-MM-dd} - {episode.PodcastName}: {episode.EpisodeTitle} (Rating: {episode.Rating}/5)\\\");\\n        }\\n    }\\n}\\n\\npublic class PodcastEpisode\\n{\\n    public string PodcastName { get; set; }\\n    public string EpisodeTitle { get; set; }\\n    public DateTime DateListened { get; set; }\\n    public int Rating { get; set; }\\n}\",\n  \"name\": \"Podcast Tracker\",\n  \"description\": \"Tracks podcast listening history with episode ratings and stores data in JSON format\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":519,"completion_tokens":1199,"total_tokens":1718,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":71},"system_fingerprint":"fp_3d5141a69a_prod0225"}