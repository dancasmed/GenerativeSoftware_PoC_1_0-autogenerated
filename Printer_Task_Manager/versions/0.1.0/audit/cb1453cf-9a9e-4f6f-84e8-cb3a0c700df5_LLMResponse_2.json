{"id":"03675a07-9ed3-41e3-ae7f-e1cc676e35f4","object":"chat.completion","created":1743791252,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Linq;\\nusing System.Text.Json;\\n\\npublic class PrinterTaskManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Printer Task Manager\\\";\\n\\n    private string _dataFilePath;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        _dataFilePath = Path.Combine(dataFolder, \\\"printer_tasks.json\\\");\\n        \\n        Console.WriteLine(\\\"Printer Task Manager module is running.\\\");\\n        Console.WriteLine(\\\"Loading tasks from: \\\" + _dataFilePath);\\n\\n        List<PrinterTask> tasks = LoadTasks();\\n        \\n        bool running = true;\\n        while (running)\\n        {\\n            Console.WriteLine(\\\"\\\\nOptions:\\\");\\n            Console.WriteLine(\\\"1. Add Task\\\");\\n            Console.WriteLine(\\\"2. Process Next Task\\\");\\n            Console.WriteLine(\\\"3. List All Tasks\\\");\\n            Console.WriteLine(\\\"4. Exit Module\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddTask(tasks);\\n                    break;\\n                case \\\"2\\\":\\n                    ProcessNextTask(tasks);\\n                    break;\\n                case \\\"3\\\":\\n                    ListAllTasks(tasks);\\n                    break;\\n                case \\\"4\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n            \\n            SaveTasks(tasks);\\n        }\\n        \\n        Console.WriteLine(\\\"Printer Task Manager module is exiting.\\\");\\n        return true;\\n    }\\n    \\n    private List<PrinterTask> LoadTasks()\\n    {\\n        try\\n        {\\n            if (File.Exists(_dataFilePath))\\n            {\\n                string json = File.ReadAllText(_dataFilePath);\\n                return JsonSerializer.Deserialize<List<PrinterTask>>(json) ?? new List<PrinterTask>();\\n            }\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error loading tasks: \\\" + ex.Message);\\n        }\\n        \\n        return new List<PrinterTask>();\\n    }\\n    \\n    private void SaveTasks(List<PrinterTask> tasks)\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(tasks);\\n            File.WriteAllText(_dataFilePath, json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving tasks: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void AddTask(List<PrinterTask> tasks)\\n    {\\n        Console.Write(\\\"Enter task description: \\\");\\n        string description = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter priority (1-High, 2-Medium, 3-Low): \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int priority) || priority < 1 || priority > 3)\\n        {\\n            Console.WriteLine(\\\"Invalid priority. Using default Medium priority.\\\");\\n            priority = 2;\\n        }\\n        \\n        tasks.Add(new PrinterTask\\n        {\\n            Id = Guid.NewGuid(),\\n            Description = description,\\n            Priority = (PriorityLevel)priority,\\n            CreatedAt = DateTime.Now\\n        });\\n        \\n        Console.WriteLine(\\\"Task added successfully.\\\");\\n    }\\n    \\n    private void ProcessNextTask(List<PrinterTask> tasks)\\n    {\\n        if (tasks.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No tasks in the queue.\\\");\\n            return;\\n        }\\n        \\n        var nextTask = tasks\\n            .OrderBy(t => t.Priority)\\n            .ThenBy(t => t.CreatedAt)\\n            .First();\\n        \\n        Console.WriteLine(\\\"Processing task:\\\");\\n        Console.WriteLine(\\\"ID: \\\" + nextTask.Id);\\n        Console.WriteLine(\\\"Description: \\\" + nextTask.Description);\\n        Console.WriteLine(\\\"Priority: \\\" + nextTask.Priority);\\n        Console.WriteLine(\\\"Created At: \\\" + nextTask.CreatedAt);\\n        \\n        tasks.Remove(nextTask);\\n        Console.WriteLine(\\\"Task processed and removed from queue.\\\");\\n    }\\n    \\n    private void ListAllTasks(List<PrinterTask> tasks)\\n    {\\n        if (tasks.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No tasks in the queue.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"Current Tasks in Queue:\\\");\\n        foreach (var task in tasks.OrderBy(t => t.Priority).ThenBy(t => t.CreatedAt))\\n        {\\n            Console.WriteLine(\\\"ID: \\\" + task.Id);\\n            Console.WriteLine(\\\"Description: \\\" + task.Description);\\n            Console.WriteLine(\\\"Priority: \\\" + task.Priority);\\n            Console.WriteLine(\\\"Created At: \\\" + task.CreatedAt);\\n            Console.WriteLine(\\\"-----\\\");\\n        }\\n    }\\n}\\n\\npublic class PrinterTask\\n{\\n    public Guid Id { get; set; }\\n    public string Description { get; set; }\\n    public PriorityLevel Priority { get; set; }\\n    public DateTime CreatedAt { get; set; }\\n}\\n\\npublic enum PriorityLevel\\n{\\n    High = 1,\\n    Medium = 2,\\n    Low = 3\\n}\",\n  \"name\": \"Printer Task Manager\",\n  \"description\": \"Manages a queue of printer tasks with priority levels (High, Medium, Low) and processes them in priority order.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":522,"completion_tokens":1362,"total_tokens":1884,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":10},"system_fingerprint":"fp_3d5141a69a_prod0225"}