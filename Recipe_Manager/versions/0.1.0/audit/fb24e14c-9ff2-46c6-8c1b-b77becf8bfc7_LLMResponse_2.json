{"id":"385d9f25-f1ff-4438-bbc3-e7c62f28f1c2","object":"chat.completion","created":1743790571,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Linq;\\nusing System.Text.Json;\\n\\npublic class RecipeManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Recipe Manager\\\";\\n    \\n    private List<Recipe> _recipes;\\n    private string _dataFilePath;\\n    \\n    public RecipeManager()\\n    {\\n        _recipes = new List<Recipe>();\\n    }\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Recipe Manager module is running.\\\");\\n        \\n        _dataFilePath = Path.Combine(dataFolder, \\\"recipes.json\\\");\\n        \\n        if (File.Exists(_dataFilePath))\\n        {\\n            try\\n            {\\n                string json = File.ReadAllText(_dataFilePath);\\n                _recipes = JsonSerializer.Deserialize<List<Recipe>>(json) ?? new List<Recipe>();\\n                Console.WriteLine(\\\"Recipes loaded successfully.\\\");\\n            }\\n            catch (Exception ex)\\n            {\\n                Console.WriteLine(\\\"Error loading recipes: \\\" + ex.Message);\\n                return false;\\n            }\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"No existing recipe data found. Starting with empty collection.\\\");\\n        }\\n        \\n        bool running = true;\\n        while (running)\\n        {\\n            Console.WriteLine(\\\"\\\\nRecipe Manager Menu:\\\");\\n            Console.WriteLine(\\\"1. Add new recipe\\\");\\n            Console.WriteLine(\\\"2. List all recipes\\\");\\n            Console.WriteLine(\\\"3. Search recipes by ingredient\\\");\\n            Console.WriteLine(\\\"4. Save and exit\\\");\\n            Console.Write(\\\"Enter your choice: \\\");\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddRecipe();\\n                    break;\\n                case \\\"2\\\":\\n                    ListRecipes();\\n                    break;\\n                case \\\"3\\\":\\n                    SearchByIngredient();\\n                    break;\\n                case \\\"4\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid choice. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_recipes);\\n            File.WriteAllText(_dataFilePath, json);\\n            Console.WriteLine(\\\"Recipes saved successfully.\\\");\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving recipes: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n    \\n    private void AddRecipe()\\n    {\\n        Console.Write(\\\"Enter recipe name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        List<string> ingredients = new List<string>();\\n        Console.WriteLine(\\\"Enter ingredients (one per line, empty line to finish):\\\");\\n        \\n        while (true)\\n        {\\n            string ingredient = Console.ReadLine();\\n            if (string.IsNullOrWhiteSpace(ingredient))\\n                break;\\n            \\n            ingredients.Add(ingredient);\\n        }\\n        \\n        Console.Write(\\\"Enter instructions: \\\");\\n        string instructions = Console.ReadLine();\\n        \\n        _recipes.Add(new Recipe\\n        {\\n            Name = name,\\n            Ingredients = ingredients,\\n            Instructions = instructions\\n        });\\n        \\n        Console.WriteLine(\\\"Recipe added successfully.\\\");\\n    }\\n    \\n    private void ListRecipes()\\n    {\\n        if (_recipes.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No recipes available.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nAvailable Recipes:\\\");\\n        foreach (var recipe in _recipes)\\n        {\\n            Console.WriteLine(\\\"Name: \\\" + recipe.Name);\\n            Console.WriteLine(\\\"Ingredients: \\\" + string.Join(\\\", \\\", recipe.Ingredients));\\n            Console.WriteLine(\\\"Instructions: \\\" + recipe.Instructions);\\n            Console.WriteLine();\\n        }\\n    }\\n    \\n    private void SearchByIngredient()\\n    {\\n        Console.Write(\\\"Enter ingredient to search for: \\\");\\n        string searchTerm = Console.ReadLine().ToLower();\\n        \\n        var matchingRecipes = _recipes\\n            .Where(r => r.Ingredients.Any(i => i.ToLower().Contains(searchTerm)))\\n            .ToList();\\n        \\n        if (matchingRecipes.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No recipes found containing that ingredient.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nRecipes containing \\\" + searchTerm + \\\":\\\");\\n        foreach (var recipe in matchingRecipes)\\n        {\\n            Console.WriteLine(\\\"Name: \\\" + recipe.Name);\\n            Console.WriteLine(\\\"Ingredients: \\\" + string.Join(\\\", \\\", recipe.Ingredients));\\n            Console.WriteLine();\\n        }\\n    }\\n}\\n\\npublic class Recipe\\n{\\n    public string Name { get; set; }\\n    public List<string> Ingredients { get; set; }\\n    public string Instructions { get; set; }\\n}\",\n  \"name\": \"Recipe Manager\",\n  \"description\": \"Manages a collection of recipes with ingredient search functionality\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":520,"completion_tokens":1266,"total_tokens":1786,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":8},"system_fingerprint":"fp_3d5141a69a_prod0225"}