

{"id":"c2de15d5-d9af-4921-b197-063e51831e54","object":"chat.completion","created":1744180811,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class MenuItem\\n{\\n    public string Name { get; set; }\\n    public double Price { get; set; }\\n    public string Category { get; set; }\\n}\\n\\npublic class MenuManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Restaurant Menu Manager\\\";\\n    private List<MenuItem> _menuItems;\\n    private readonly string _menuFilePath;\\n\\n    public MenuManager()\\n    {\\n        _menuItems = new List<MenuItem>();\\n        _menuFilePath = string.Empty;\\n    }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        _menuFilePath = Path.Combine(dataFolder, \\\"menu_items.json\\\");\\n        Console.WriteLine(\\\"Restaurant Menu Manager is running.\\\");\\n        LoadMenuItems();\\n\\n        bool exit = false;\\n        while (!exit)\\n        {\\n            DisplayMenu();\\n            string input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddMenuItem();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewMenuItems();\\n                    break;\\n                case \\\"3\\\":\\n                    UpdateMenuItem();\\n                    break;\\n                case \\\"4\\\":\\n                    DeleteMenuItem();\\n                    break;\\n                case \\\"5\\\":\\n                    exit = true;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        SaveMenuItems();\\n        Console.WriteLine(\\\"Menu items saved successfully.\\\");\\n        return true;\\n    }\\n\\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nRestaurant Menu Manager\\\");\\n        Console.WriteLine(\\\"1. Add Menu Item\\\");\\n        Console.WriteLine(\\\"2. View Menu Items\\\");\\n        Console.WriteLine(\\\"3. Update Menu Item\\\");\\n        Console.WriteLine(\\\"4. Delete Menu Item\\\");\\n        Console.WriteLine(\\\"5. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n\\n    private void AddMenuItem()\\n    {\\n        Console.Write(\\\"Enter item name: \\\");\\n        string name = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter item price: \\\");\\n        if (!double.TryParse(Console.ReadLine(), out double price))\\n        {\\n            Console.WriteLine(\\\"Invalid price. Please enter a valid number.\\\");\\n            return;\\n        }\\n\\n        Console.Write(\\\"Enter item category: \\\");\\n        string category = Console.ReadLine();\\n\\n        _menuItems.Add(new MenuItem { Name = name, Price = price, Category = category });\\n        Console.WriteLine(\\\"Menu item added successfully.\\\");\\n    }\\n\\n    private void ViewMenuItems()\\n    {\\n        if (_menuItems.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No menu items available.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nMenu Items:\\\");\\n        foreach (var item in _menuItems)\\n        {\\n            Console.WriteLine($\\\"Name: {item.Name}, Price: {item.Price}, Category: {item.Category}\\\");\\n        }\\n    }\\n\\n    private void UpdateMenuItem()\\n    {\\n        ViewMenuItems();\\n        if (_menuItems.Count == 0)\\n            return;\\n\\n        Console.Write(\\\"Enter the name of the item to update: \\\");\\n        string name = Console.ReadLine();\\n\\n        var item = _menuItems.Find(i => i.Name.Equals(name, StringComparison.OrdinalIgnoreCase));\\n        if (item == null)\\n        {\\n            Console.WriteLine(\\\"Item not found.\\\");\\n            return;\\n        }\\n\\n        Console.Write(\\\"Enter new name (leave blank to keep current): \\\");\\n        string newName = Console.ReadLine();\\n        if (!string.IsNullOrEmpty(newName))\\n            item.Name = newName;\\n\\n        Console.Write(\\\"Enter new price (leave blank to keep current): \\\");\\n        string priceInput = Console.ReadLine();\\n        if (!string.IsNullOrEmpty(priceInput) && double.TryParse(priceInput, out double newPrice))\\n            item.Price = newPrice;\\n\\n        Console.Write(\\\"Enter new category (leave blank to keep current): \\\");\\n        string newCategory = Console.ReadLine();\\n        if (!string.IsNullOrEmpty(newCategory))\\n            item.Category = newCategory;\\n\\n        Console.WriteLine(\\\"Menu item updated successfully.\\\");\\n    }\\n\\n    private void DeleteMenuItem()\\n    {\\n        ViewMenuItems();\\n        if (_menuItems.Count == 0)\\n            return;\\n\\n        Console.Write(\\\"Enter the name of the item to delete: \\\");\\n        string name = Console.ReadLine();\\n\\n        var item = _menuItems.Find(i => i.Name.Equals(name, StringComparison.OrdinalIgnoreCase));\\n        if (item == null)\\n        {\\n            Console.WriteLine(\\\"Item not found.\\\");\\n            return;\\n        }\\n\\n        _menuItems.Remove(item);\\n        Console.WriteLine(\\\"Menu item deleted successfully.\\\");\\n    }\\n\\n    private void LoadMenuItems()\\n    {\\n        if (File.Exists(_menuFilePath))\\n        {\\n            string json = File.ReadAllText(_menuFilePath);\\n            _menuItems = JsonSerializer.Deserialize<List<MenuItem>>(json) ?? new List<MenuItem>();\\n        }\\n    }\\n\\n    private void SaveMenuItems()\\n    {\\n        string json = JsonSerializer.Serialize(_menuItems);\\n        File.WriteAllText(_menuFilePath, json);\\n    }\\n}\",\n  \"name\": \"Restaurant Menu Manager\",\n  \"description\": \"A module to manage a restaurant's menu with items, prices, and categories.\",\n  \"required_apis\": [],\n  \"required_nugets\": [\n    {\n      \"nuget_name\": \"System.Text.Json\",\n      \"nuget_version\": \"6.0.0\"\n    }\n  ]\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":528,"completion_tokens":1409,"total_tokens":1937,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":16},"system_fingerprint":"fp_3d5141a69a_prod0225"}