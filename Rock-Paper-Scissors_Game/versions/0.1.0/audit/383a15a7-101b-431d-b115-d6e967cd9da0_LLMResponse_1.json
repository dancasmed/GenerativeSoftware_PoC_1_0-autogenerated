{"id":"5d00cf88-caa7-4b0f-875a-5d9e56e01b40","object":"chat.completion","created":1743789917,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class RockPaperScissorsGame : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Rock-Paper-Scissors Game\\\";\\n    private Random _random;\\n    private string _statsFilePath;\\n    private GameStats _stats;\\n\\n    public RockPaperScissorsGame()\\n    {\\n        _random = new Random();\\n    }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        _statsFilePath = Path.Combine(dataFolder, \\\"rps_stats.json\\\");\\n        LoadStats();\\n\\n        Console.WriteLine(\\\"Welcome to Rock-Paper-Scissors!\\\");\\n        Console.WriteLine(\\\"Enter your choice (rock, paper, scissors) or 'quit' to exit:\\\");\\n\\n        bool running = true;\\n        while (running)\\n        {\\n            string input = Console.ReadLine()?.ToLower().Trim();\\n\\n            if (string.IsNullOrEmpty(input))\\n                continue;\\n\\n            if (input == \\\"quit\\\")\\n            {\\n                running = false;\\n                continue;\\n            }\\n\\n            if (!IsValidChoice(input))\\n            {\\n                Console.WriteLine(\\\"Invalid choice. Please enter rock, paper, or scissors.\\\");\\n                continue;\\n            }\\n\\n            string computerChoice = GetComputerChoice();\\n            string result = DetermineWinner(input, computerChoice);\\n\\n            UpdateStats(result);\\n            SaveStats();\\n\\n            Console.WriteLine(\\\"You chose: \\\" + input);\\n            Console.WriteLine(\\\"Computer chose: \\\" + computerChoice);\\n            Console.WriteLine(\\\"Result: \\\" + result);\\n            Console.WriteLine(\\\"Current stats - Wins: \\\" + _stats.Wins + \\\", Losses: \\\" + _stats.Losses + \\\", Ties: \\\" + _stats.Ties);\\n            Console.WriteLine(\\\"Enter your next choice or 'quit' to exit:\\\");\\n        }\\n\\n        Console.WriteLine(\\\"Thanks for playing!\\\");\\n        return true;\\n    }\\n\\n    private bool IsValidChoice(string choice)\\n    {\\n        return choice == \\\"rock\\\" || choice == \\\"paper\\\" || choice == \\\"scissors\\\";\\n    }\\n\\n    private string GetComputerChoice()\\n    {\\n        int choice = _random.Next(0, 3);\\n        return choice switch\\n        {\\n            0 => \\\"rock\\\",\\n            1 => \\\"paper\\\",\\n            _ => \\\"scissors\\\"\\n        };\\n    }\\n\\n    private string DetermineWinner(string playerChoice, string computerChoice)\\n    {\\n        if (playerChoice == computerChoice)\\n            return \\\"tie\\\";\\n\\n        if ((playerChoice == \\\"rock\\\" && computerChoice == \\\"scissors\\\") ||\\n            (playerChoice == \\\"paper\\\" && computerChoice == \\\"rock\\\") ||\\n            (playerChoice == \\\"scissors\\\" && computerChoice == \\\"paper\\\"))\\n            return \\\"win\\\";\\n\\n        return \\\"lose\\\";\\n    }\\n\\n    private void UpdateStats(string result)\\n    {\\n        switch (result)\\n        {\\n            case \\\"win\\\":\\n                _stats.Wins++;\\n                break;\\n            case \\\"lose\\\":\\n                _stats.Losses++;\\n                break;\\n            case \\\"tie\\\":\\n                _stats.Ties++;\\n                break;\\n        }\\n    }\\n\\n    private void LoadStats()\\n    {\\n        try\\n        {\\n            if (File.Exists(_statsFilePath))\\n            {\\n                string json = File.ReadAllText(_statsFilePath);\\n                _stats = JsonSerializer.Deserialize<GameStats>(json) ?? new GameStats();\\n            }\\n            else\\n            {\\n                _stats = new GameStats();\\n            }\\n        }\\n        catch\\n        {\\n            _stats = new GameStats();\\n        }\\n    }\\n\\n    private void SaveStats()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_stats);\\n            File.WriteAllText(_statsFilePath, json);\\n        }\\n        catch\\n        {\\n            // Silently fail if we can't save stats\\n        }\\n    }\\n\\n    private class GameStats\\n    {\\n        public int Wins { get; set; } = 0;\\n        public int Losses { get; set; } = 0;\\n        public int Ties { get; set; } = 0;\\n    }\\n}\",\n  \"name\": \"Rock-Paper-Scissors Game\",\n  \"description\": \"A console-based Rock-Paper-Scissors game that tracks player statistics against the computer\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":524,"completion_tokens":1091,"total_tokens":1615,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":12},"system_fingerprint":"fp_3d5141a69a_prod0225"}