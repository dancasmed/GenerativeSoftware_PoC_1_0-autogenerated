
{"id":"4a339478-d44e-47d7-9a3b-cdfac6c17f75","object":"chat.completion","created":1744178787,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class RockPaperScissorsGame : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Rock Paper Scissors Game\\\";\\n\\n    private Random random = new Random();\\n    private string[] choices = { \\\"Rock\\\", \\\"Paper\\\", \\\"Scissors\\\" };\\n    private string statsFilePath;\\n    private GameStats stats;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        statsFilePath = Path.Combine(dataFolder, \\\"rps_stats.json\\\");\\n        LoadStats();\\n\\n        Console.WriteLine(\\\"Welcome to Rock-Paper-Scissors!\\\");\\n        Console.WriteLine(\\\"Enter your choice (Rock, Paper, Scissors) or 'Q' to quit:\\\");\\n\\n        bool running = true;\\n        while (running)\\n        {\\n            string input = Console.ReadLine()?.Trim();\\n            if (string.Equals(input, \\\"Q\\\", StringComparison.OrdinalIgnoreCase))\\n            {\\n                running = false;\\n                continue;\\n            }\\n\\n            if (!ValidateInput(input))\\n            {\\n                Console.WriteLine(\\\"Invalid choice. Please enter Rock, Paper, or Scissors.\\\");\\n                continue;\\n            }\\n\\n            string playerChoice = input;\\n            string computerChoice = GetComputerChoice();\\n\\n            Console.WriteLine(\\\"You chose: \\\" + playerChoice);\\n            Console.WriteLine(\\\"Computer chose: \\\" + computerChoice);\\n\\n            string result = DetermineWinner(playerChoice, computerChoice);\\n            Console.WriteLine(result);\\n\\n            UpdateStats(result);\\n            SaveStats();\\n\\n            Console.WriteLine(\\\"\\\\nPlay again? Enter your choice or 'Q' to quit:\\\");\\n        }\\n\\n        DisplayStats();\\n        Console.WriteLine(\\\"Thanks for playing!\\\");\\n        return true;\\n    }\\n\\n    private bool ValidateInput(string input)\\n    {\\n        if (string.IsNullOrEmpty(input))\\n            return false;\\n\\n        foreach (string choice in choices)\\n        {\\n            if (string.Equals(input, choice, StringComparison.OrdinalIgnoreCase))\\n                return true;\\n        }\\n        return false;\\n    }\\n\\n    private string GetComputerChoice()\\n    {\\n        return choices[random.Next(choices.Length)];\\n    }\\n\\n    private string DetermineWinner(string player, string computer)\\n    {\\n        if (player.Equals(computer, StringComparison.OrdinalIgnoreCase))\\n            return \\\"It's a tie!\\\";\\n\\n        if ((player.Equals(\\\"Rock\\\", StringComparison.OrdinalIgnoreCase) && computer.Equals(\\\"Scissors\\\", StringComparison.OrdinalIgnoreCase)) ||\\n            (player.Equals(\\\"Paper\\\", StringComparison.OrdinalIgnoreCase) && computer.Equals(\\\"Rock\\\", StringComparison.OrdinalIgnoreCase)) ||\\n            (player.Equals(\\\"Scissors\\\", StringComparison.OrdinalIgnoreCase) && computer.Equals(\\\"Paper\\\", StringComparison.OrdinalIgnoreCase)))\\n        {\\n            return \\\"You win!\\\";\\n        }\\n\\n        return \\\"Computer wins!\\\";\\n    }\\n\\n    private void LoadStats()\\n    {\\n        try\\n        {\\n            if (File.Exists(statsFilePath))\\n            {\\n                string json = File.ReadAllText(statsFilePath);\\n                stats = JsonSerializer.Deserialize<GameStats>(json) ?? new GameStats();\\n            }\\n            else\\n            {\\n                stats = new GameStats();\\n            }\\n        }\\n        catch\\n        {\\n            stats = new GameStats();\\n        }\\n    }\\n\\n    private void SaveStats()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(stats);\\n            File.WriteAllText(statsFilePath, json);\\n        }\\n        catch { }\\n    }\\n\\n    private void UpdateStats(string result)\\n    {\\n        stats.TotalGames++;\\n\\n        if (result.Contains(\\\"win\\\"))\\n            stats.Wins++;\\n        else if (result.Contains(\\\"Computer\\\"))\\n            stats.Losses++;\\n        else\\n            stats.Ties++;\\n    }\\n\\n    private void DisplayStats()\\n    {\\n        Console.WriteLine(\\\"\\\\nGame Statistics:\\\");\\n        Console.WriteLine(\\\"Total games: \\\" + stats.TotalGames);\\n        Console.WriteLine(\\\"Wins: \\\" + stats.Wins);\\n        Console.WriteLine(\\\"Losses: \\\" + stats.Losses);\\n        Console.WriteLine(\\\"Ties: \\\" + stats.Ties);\\n    }\\n\\n    private class GameStats\\n    {\\n        public int TotalGames { get; set; } = 0;\\n        public int Wins { get; set; } = 0;\\n        public int Losses { get; set; } = 0;\\n        public int Ties { get; set; } = 0;\\n    }\\n}\",\n  \"name\": \"Rock Paper Scissors Game\",\n  \"description\": \"A console-based rock-paper-scissors game that tracks game statistics and saves them to a JSON file.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":527,"completion_tokens":1179,"total_tokens":1706,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":15},"system_fingerprint":"fp_3d5141a69a_prod0225"}