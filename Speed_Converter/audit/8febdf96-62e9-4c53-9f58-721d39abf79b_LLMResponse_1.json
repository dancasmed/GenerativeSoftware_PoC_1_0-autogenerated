{"id":"0e610fee-01b5-4d41-9b6c-191c7590135f","object":"chat.completion","created":1743795707,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class SpeedConverterModule\\n{\\n    public string Name { get; set; }\\n    \\n    public SpeedConverterModule()\\n    {\\n        Name = \\\"Speed Converter\\\";\\n    }\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Speed Converter Module is running.\\\");\\n        Console.WriteLine(\\\"This module converts speeds between mph, kph, and knots.\\\");\\n        \\n        string configPath = Path.Combine(dataFolder, \\\"speed_converter_config.json\\\");\\n        \\n        try\\n        {\\n            if (!Directory.Exists(dataFolder))\\n            {\\n                Directory.CreateDirectory(dataFolder);\\n            }\\n            \\n            if (!File.Exists(configPath))\\n            {\\n                var defaultConfig = new Config { LastUsedUnit = \\\"kph\\\" };\\n                string json = JsonSerializer.Serialize(defaultConfig);\\n                File.WriteAllText(configPath, json);\\n            }\\n            \\n            string jsonConfig = File.ReadAllText(configPath);\\n            Config config = JsonSerializer.Deserialize<Config>(jsonConfig);\\n            \\n            bool running = true;\\n            while (running)\\n            {\\n                Console.WriteLine(\\\"\\\\nOptions:\\\");\\n                Console.WriteLine(\\\"1. Convert speed\\\");\\n                Console.WriteLine(\\\"2. Change default unit (current: \\\" + config.LastUsedUnit + \\\")\\\");\\n                Console.WriteLine(\\\"3. Exit module\\\");\\n                Console.Write(\\\"Select an option: \\\");\\n                \\n                string input = Console.ReadLine();\\n                \\n                switch (input)\\n                {\\n                    case \\\"1\\\":\\n                        ConvertSpeed(config.LastUsedUnit);\\n                        break;\\n                    case \\\"2\\\":\\n                        config.LastUsedUnit = ChangeDefaultUnit();\\n                        jsonConfig = JsonSerializer.Serialize(config);\\n                        File.WriteAllText(configPath, jsonConfig);\\n                        break;\\n                    case \\\"3\\\":\\n                        running = false;\\n                        break;\\n                    default:\\n                        Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                        break;\\n                }\\n            }\\n            \\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n    \\n    private void ConvertSpeed(string defaultUnit)\\n    {\\n        Console.Write(\\\"Enter speed value: \\\");\\n        if (!double.TryParse(Console.ReadLine(), out double speed))\\n        {\\n            Console.WriteLine(\\\"Invalid speed value.\\\");\\n            return;\\n        }\\n        \\n        Console.Write(\\\"Enter source unit (mph/kph/knots): \\\");\\n        string sourceUnit = Console.ReadLine().ToLower();\\n        \\n        if (sourceUnit != \\\"mph\\\" && sourceUnit != \\\"kph\\\" && sourceUnit != \\\"knots\\\")\\n        {\\n            Console.WriteLine(\\\"Invalid source unit.\\\");\\n            return;\\n        }\\n        \\n        Console.Write(\\\"Enter target unit (mph/kph/knots): \\\");\\n        string targetUnit = Console.ReadLine().ToLower();\\n        \\n        if (targetUnit != \\\"mph\\\" && targetUnit != \\\"kph\\\" && targetUnit != \\\"knots\\\")\\n        {\\n            Console.WriteLine(\\\"Invalid target unit.\\\");\\n            return;\\n        }\\n        \\n        double convertedSpeed = ConvertSpeedValue(speed, sourceUnit, targetUnit);\\n        Console.WriteLine(speed + \\\" \\\" + sourceUnit + \\\" = \\\" + convertedSpeed + \\\" \\\" + targetUnit);\\n    }\\n    \\n    private double ConvertSpeedValue(double speed, string sourceUnit, string targetUnit)\\n    {\\n        if (sourceUnit == targetUnit)\\n            return speed;\\n            \\n        // Convert to kph first\\n        double kph;\\n        switch (sourceUnit)\\n        {\\n            case \\\"mph\\\":\\n                kph = speed * 1.60934;\\n                break;\\n            case \\\"knots\\\":\\n                kph = speed * 1.852;\\n                break;\\n            default:\\n                kph = speed;\\n                break;\\n        }\\n        \\n        // Convert from kph to target unit\\n        switch (targetUnit)\\n        {\\n            case \\\"mph\\\":\\n                return kph / 1.60934;\\n            case \\\"knots\\\":\\n                return kph / 1.852;\\n            default:\\n                return kph;\\n        }\\n    }\\n    \\n    private string ChangeDefaultUnit()\\n    {\\n        while (true)\\n        {\\n            Console.Write(\\\"Enter default unit (mph/kph/knots): \\\");\\n            string unit = Console.ReadLine().ToLower();\\n            \\n            if (unit == \\\"mph\\\" || unit == \\\"kph\\\" || unit == \\\"knots\\\")\\n                return unit;\\n                \\n            Console.WriteLine(\\\"Invalid unit. Please enter mph, kph, or knots.\\\");\\n        }\\n    }\\n}\\n\\npublic class Config\\n{\\n    public string LastUsedUnit { get; set; }\\n}\",\n  \"name\": \"Speed Converter\",\n  \"description\": \"A module that converts speeds between miles per hour (mph), kilometers per hour (kph), and knots. It remembers the last used unit between sessions.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1252,"total_tokens":1773,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":73},"system_fingerprint":"fp_3d5141a69a_prod0225"}