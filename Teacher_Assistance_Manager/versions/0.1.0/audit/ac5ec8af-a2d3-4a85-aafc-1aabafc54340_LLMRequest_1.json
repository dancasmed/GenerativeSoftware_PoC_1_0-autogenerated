{
  "model": "deepseek-reasoner",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful assistant with high skills in software development. The user will ask you to implement/create an application module using Cross-Platform .NET 9 C# code that adheres to the following interface:\n\n\u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022\n\n### Requirements:\n- The generated code must avoid using external APIs if possible, in case an API is needed add it to the list of required APIS.\n_ If the generated code needs NuGets installed add the NuGet name to the list of required Nugets.\n- The response must be in JSON format.\n- The \u0060source_code\u0060 field must contain C# code only (avoid markdown notation).\n- Do not include the IGeneratedModule in the generated source code.\n- The generated code **must not include any instructions that begin with \u0060Console.WriteLine($\u0060**.\n- If data persistence is required, use JSON files stored in the \u0060dataFolder\u0060 parameter of the \u0060Main\u0060 method.\n- Ensure the generated module is as detailed and complete as possible.\n- The constructor of the generated module must not have any parameters.\n- The generated code MUST not call Exit method. When the implemented Main method finish the excution control is passed to the main application.\n- The generated code must print information in the console to let know the user the module is running.\n- The generated code must implement CRUPDS operations for the data models.\n\n### Example output:\n{\u0022source_code\u0022:\u0022GENERATED C# CODE\u0022,\u0022description\u0022: \u0022GENERATED DESCRIPTION FOR THE MODULE\u0022, \u0022required_apis\u0022=[{\u0022API_1\u0022},{\u0022API_2\u0022}], , \u0022required_nugets\u0022=[{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_1\u0022,\u0022nuget_version\u0022:\u00221.0.0\u0022 },{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_2\u0022,\u0022nuget_version\u0022:\u00222.0.0.0\u0022 }]}"
    },
    {
      "role": "user",
      "content": "Generate a Cross-Platform .NET 9 C# code that implements the next interface \u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022 the Main method is the start point for the module. The souce code will run on a console application. The generated code must not write strings to console like this Console.WriteLine($\u0022{variable}\u0022). The source code will be automaticallty compiled so avoid adding markdown notation or anything that is not c# code The module must: Design a software module to help teachers manage student attendance across multiple groups. The module should allow the teacher to create groups, add students to these groups, and record daily attendance. At the end of each week, the module should generate a summary report showing the attendance percentage for each group. The module should be intuitive and easy to use, with clear options for managing groups, students, and attendance records.\n## Funcional Details ##\nCreate and manage multiple student groups\nAdd, edit, and remove students from groups\nRecord daily attendance for each group\nGenerate weekly attendance summary reports\nView historical attendance data\n## Required features ## \nCreate and manage student groups\nAdd and remove students from groups\nRecord daily attendance\nGenerate weekly attendance summary reports\n## User interaction ## \nCreate a new group by providing a group name and description\nAdd students to a group by entering their names and any other relevant details\nMark attendance for each student in a group on a daily basis\nView and edit attendance records for any given day\nGenerate and view weekly attendance summary reports\n## Suggested data models ##\nGroup: {\u0022group_id\u0022: \u0022string\u0022, \u0022group_name\u0022: \u0022string\u0022, \u0022description\u0022: \u0022string\u0022, \u0022created_at\u0022: \u0022date\u0022, \u0022updated_at\u0022: \u0022date\u0022}\nStudent: {\u0022student_id\u0022: \u0022string\u0022, \u0022group_id\u0022: \u0022string\u0022, \u0022name\u0022: \u0022string\u0022, \u0022email\u0022: \u0022string\u0022, \u0022created_at\u0022: \u0022date\u0022, \u0022updated_at\u0022: \u0022date\u0022}\nAttendance: {\u0022attendance_id\u0022: \u0022string\u0022, \u0022group_id\u0022: \u0022string\u0022, \u0022student_id\u0022: \u0022string\u0022, \u0022date\u0022: \u0022date\u0022, \u0022status\u0022: \u0022string\u0022, \u0022notes\u0022: \u0022string\u0022, \u0022created_at\u0022: \u0022date\u0022, \u0022updated_at\u0022: \u0022date\u0022}\nWeeklySummary: {\u0022summary_id\u0022: \u0022string\u0022, \u0022group_id\u0022: \u0022string\u0022, \u0022week_start_date\u0022: \u0022date\u0022, \u0022week_end_date\u0022: \u0022date\u0022, \u0022total_students\u0022: \u0022integer\u0022, \u0022total_present\u0022: \u0022integer\u0022, \u0022total_absent\u0022: \u0022integer\u0022, \u0022attendance_percentage\u0022: \u0022float\u0022, \u0022created_at\u0022: \u0022date\u0022, \u0022updated_at\u0022: \u0022date\u0022}"
    }
  ],
  "stream": false
}