{"id":"f8e529d1-bdfa-4036-8e8a-a52f2bc1548b","object":"chat.completion","created":1744177146,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class TemperatureConverter : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Temperature Converter\\\";\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Temperature Converter Module is running.\\\");\\n        Console.WriteLine(\\\"This module converts temperatures between Celsius, Fahrenheit, and Kelvin.\\\");\\n\\n        try\\n        {\\n            string configPath = Path.Combine(dataFolder, \\\"temperature_config.json\\\");\\n            if (!File.Exists(configPath))\\n            {\\n                var defaultConfig = new\\n                {\\n                    LastUsedScale = \\\"Celsius\\\",\\n                    DefaultTargetScale = \\\"Fahrenheit\\\"\\n                };\\n                File.WriteAllText(configPath, JsonSerializer.Serialize(defaultConfig));\\n            }\\n\\n            var config = JsonSerializer.Deserialize<Config>(File.ReadAllText(configPath));\\n\\n            while (true)\\n            {\\n                Console.WriteLine(\\\"\\\\nEnter temperature value (or 'q' to quit):\\\");\\n                string input = Console.ReadLine();\\n                if (input.ToLower() == \\\"q\\\") break;\\n\\n                if (!double.TryParse(input, out double temperature))\\n                {\\n                    Console.WriteLine(\\\"Invalid input. Please enter a numeric value.\\\");\\n                    continue;\\n                }\\n\\n                Console.WriteLine(\\\"Enter source scale (Celsius, Fahrenheit, Kelvin):\\\");\\n                string sourceScale = Console.ReadLine().Trim();\\n\\n                Console.WriteLine(\\\"Enter target scale (Celsius, Fahrenheit, Kelvin):\\\");\\n                string targetScale = Console.ReadLine().Trim();\\n\\n                double convertedTemp = ConvertTemperature(temperature, sourceScale, targetScale);\\n                Console.WriteLine(string.Format(\\\"{0} {1} is {2} {3}\\\", temperature, sourceScale, convertedTemp, targetScale));\\n\\n                // Update config\\n                config.LastUsedScale = sourceScale;\\n                config.DefaultTargetScale = targetScale;\\n                File.WriteAllText(configPath, JsonSerializer.Serialize(config));\\n            }\\n\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(string.Format(\\\"An error occurred: {0}\\\", ex.Message));\\n            return false;\\n        }\\n    }\\n\\n    private double ConvertTemperature(double value, string fromScale, string toScale)\\n    {\\n        fromScale = fromScale.ToLower();\\n        toScale = toScale.ToLower();\\n\\n        // First convert to Celsius\\n        double celsius;\\n        switch (fromScale)\\n        {\\n            case \\\"celsius\\\":\\n                celsius = value;\\n                break;\\n            case \\\"fahrenheit\\\":\\n                celsius = (value - 32) * 5 / 9;\\n                break;\\n            case \\\"kelvin\\\":\\n                celsius = value - 273.15;\\n                break;\\n            default:\\n                throw new ArgumentException(\\\"Invalid source temperature scale\\\");\\n        }\\n\\n        // Then convert from Celsius to target scale\\n        switch (toScale)\\n        {\\n            case \\\"celsius\\\":\\n                return celsius;\\n            case \\\"fahrenheit\\\":\\n                return celsius * 9 / 5 + 32;\\n            case \\\"kelvin\\\":\\n                return celsius + 273.15;\\n            default:\\n                throw new ArgumentException(\\\"Invalid target temperature scale\\\");\\n        }\\n    }\\n\\n    private class Config\\n    {\\n        public string LastUsedScale { get; set; }\\n        public string DefaultTargetScale { get; set; }\\n    }\\n}\",\n  \"name\": \"Temperature Converter\",\n  \"description\": \"Converts temperatures between Celsius, Fahrenheit, and Kelvin scales with persistent configuration\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":525,"completion_tokens":870,"total_tokens":1395,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":13},"system_fingerprint":"fp_3d5141a69a_prod0225"}