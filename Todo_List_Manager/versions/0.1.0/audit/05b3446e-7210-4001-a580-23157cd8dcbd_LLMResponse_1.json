
{"id":"19b46f48-a912-4625-80f9-492be5224245","object":"chat.completion","created":1743764493,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class TodoListModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Todo List Manager\\\";\\n\\n    private string _dataFilePath;\\n    private List<TodoItem> _todoItems;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Initializing Todo List Manager...\\\");\\n        _dataFilePath = Path.Combine(dataFolder, \\\"todolist.json\\\");\\n        \\n        LoadTodoList();\\n        \\n        bool running = true;\\n        while (running)\\n        {\\n            DisplayMenu();\\n            var input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddTodoItem();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewTodoList();\\n                    break;\\n                case \\\"3\\\":\\n                    MarkItemComplete();\\n                    break;\\n                case \\\"4\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        SaveTodoList();\\n        Console.WriteLine(\\\"Todo List Manager has finished.\\\");\\n        return true;\\n    }\\n    \\n    private void LoadTodoList()\\n    {\\n        try\\n        {\\n            if (File.Exists(_dataFilePath))\\n            {\\n                var json = File.ReadAllText(_dataFilePath);\\n                _todoItems = JsonSerializer.Deserialize<List<TodoItem>>(json);\\n            }\\n            else\\n            {\\n                _todoItems = new List<TodoItem>();\\n            }\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error loading todo list: \\\" + ex.Message);\\n            _todoItems = new List<TodoItem>();\\n        }\\n    }\\n    \\n    private void SaveTodoList()\\n    {\\n        try\\n        {\\n            var json = JsonSerializer.Serialize(_todoItems);\\n            File.WriteAllText(_dataFilePath, json);\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving todo list: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nTodo List Manager\\\");\\n        Console.WriteLine(\\\"1. Add new todo item\\\");\\n        Console.WriteLine(\\\"2. View todo list\\\");\\n        Console.WriteLine(\\\"3. Mark item as complete\\\");\\n        Console.WriteLine(\\\"4. Exit\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n    \\n    private void AddTodoItem()\\n    {\\n        Console.Write(\\\"Enter task description: \\\");\\n        var description = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter priority (1-Low, 2-Medium, 3-High): \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int priority) || priority < 1 || priority > 3)\\n        {\\n            Console.WriteLine(\\\"Invalid priority. Using Medium priority.\\\");\\n            priority = 2;\\n        }\\n        \\n        Console.Write(\\\"Enter deadline (YYYY-MM-DD): \\\");\\n        if (!DateTime.TryParse(Console.ReadLine(), out DateTime deadline))\\n        {\\n            Console.WriteLine(\\\"Invalid date. Using today's date.\\\");\\n            deadline = DateTime.Today;\\n        }\\n        \\n        _todoItems.Add(new TodoItem\\n        {\\n            Description = description,\\n            Priority = (PriorityLevel)priority,\\n            Deadline = deadline,\\n            IsComplete = false\\n        });\\n        \\n        Console.WriteLine(\\\"Task added successfully.\\\");\\n    }\\n    \\n    private void ViewTodoList()\\n    {\\n        if (_todoItems.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No tasks in the todo list.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nTodo List:\\\");\\n        Console.WriteLine(\\\"ID | Description | Priority | Deadline | Status\\\");\\n        Console.WriteLine(new string('-', 50));\\n        \\n        for (int i = 0; i < _todoItems.Count; i++)\\n        {\\n            var item = _todoItems[i];\\n            Console.WriteLine($\\\"{i + 1} | {item.Description} | {item.Priority} | {item.Deadline:yyyy-MM-dd} | {(item.IsComplete ? \\\"Complete\\\" : \\\"Pending\\\")}\\\");\\n        }\\n    }\\n    \\n    private void MarkItemComplete()\\n    {\\n        ViewTodoList();\\n        \\n        if (_todoItems.Count == 0) return;\\n        \\n        Console.Write(\\\"Enter task ID to mark as complete: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int id) || id < 1 || id > _todoItems.Count)\\n        {\\n            Console.WriteLine(\\\"Invalid task ID.\\\");\\n            return;\\n        }\\n        \\n        _todoItems[id - 1].IsComplete = true;\\n        Console.WriteLine(\\\"Task marked as complete.\\\");\\n    }\\n}\\n\\npublic class TodoItem\\n{\\n    public string Description { get; set; }\\n    public PriorityLevel Priority { get; set; }\\n    public DateTime Deadline { get; set; }\\n    public bool IsComplete { get; set; }\\n}\\n\\npublic enum PriorityLevel\\n{\\n    Low = 1,\\n    Medium = 2,\\n    High = 3\\n}\",\n  \"name\": \"Todo List Manager\",\n  \"description\": \"A module for managing a to-do list with priorities and deadlines. Allows adding, viewing, and marking tasks as complete.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1373,"total_tokens":1894,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":73},"system_fingerprint":"fp_3d5141a69a_prod0225"}