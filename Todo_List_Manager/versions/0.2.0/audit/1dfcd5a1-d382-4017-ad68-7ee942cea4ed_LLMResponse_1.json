{"id":"7a42fd6e-3160-4f02-bce4-fc8e46d71908","object":"chat.completion","created":1743792677,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class TodoItem\\n{\\n    public string Task { get; set; }\\n    public int Priority { get; set; }\\n    public DateTime Deadline { get; set; }\\n    public bool IsCompleted { get; set; }\\n}\\n\\npublic class TodoListModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Todo List Manager\\\";\\n    private List<TodoItem> _todoItems;\\n    private string _dataFilePath;\\n\\n    public TodoListModule()\\n    {\\n        _todoItems = new List<TodoItem>();\\n    }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        _dataFilePath = Path.Combine(dataFolder, \\\"todolist.json\\\");\\n        \\n        Console.WriteLine(\\\"Initializing Todo List Manager...\\\");\\n        \\n        LoadTodoList();\\n        \\n        bool exit = false;\\n        while (!exit)\\n        {\\n            Console.WriteLine(\\\"\\\\nTodo List Manager\\\");\\n            Console.WriteLine(\\\"1. Add Task\\\");\\n            Console.WriteLine(\\\"2. View Tasks\\\");\\n            Console.WriteLine(\\\"3. Mark Task as Completed\\\");\\n            Console.WriteLine(\\\"4. Save and Exit\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddTask();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewTasks();\\n                    break;\\n                case \\\"3\\\":\\n                    MarkTaskCompleted();\\n                    break;\\n                case \\\"4\\\":\\n                    SaveTodoList();\\n                    exit = true;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        Console.WriteLine(\\\"Todo List Manager has exited successfully.\\\");\\n        return true;\\n    }\\n    \\n    private void LoadTodoList()\\n    {\\n        if (File.Exists(_dataFilePath))\\n        {\\n            try\\n            {\\n                string json = File.ReadAllText(_dataFilePath);\\n                _todoItems = JsonSerializer.Deserialize<List<TodoItem>>(json);\\n                Console.WriteLine(\\\"Todo list loaded successfully.\\\");\\n            }\\n            catch (Exception ex)\\n            {\\n                Console.WriteLine(\\\"Error loading todo list: \\\" + ex.Message);\\n                _todoItems = new List<TodoItem>();\\n            }\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"No existing todo list found. A new one will be created.\\\");\\n        }\\n    }\\n    \\n    private void SaveTodoList()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_todoItems);\\n            File.WriteAllText(_dataFilePath, json);\\n            Console.WriteLine(\\\"Todo list saved successfully.\\\");\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving todo list: \\\" + ex.Message);\\n        }\\n    }\\n    \\n    private void AddTask()\\n    {\\n        Console.Write(\\\"Enter task description: \\\");\\n        string task = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter priority (1-5, where 5 is highest): \\\");\\n        int priority;\\n        while (!int.TryParse(Console.ReadLine(), out priority) || priority < 1 || priority > 5)\\n        {\\n            Console.Write(\\\"Invalid input. Enter priority (1-5): \\\");\\n        }\\n        \\n        Console.Write(\\\"Enter deadline (yyyy-MM-dd): \\\");\\n        DateTime deadline;\\n        while (!DateTime.TryParse(Console.ReadLine(), out deadline))\\n        {\\n            Console.Write(\\\"Invalid date format. Enter deadline (yyyy-MM-dd): \\\");\\n        }\\n        \\n        _todoItems.Add(new TodoItem\\n        {\\n            Task = task,\\n            Priority = priority,\\n            Deadline = deadline,\\n            IsCompleted = false\\n        });\\n        \\n        Console.WriteLine(\\\"Task added successfully.\\\");\\n    }\\n    \\n    private void ViewTasks()\\n    {\\n        if (_todoItems.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No tasks found.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nTasks:\\\");\\n        Console.WriteLine(\\\"ID | Task | Priority | Deadline | Status\\\");\\n        Console.WriteLine(\\\"----------------------------------------\\\");\\n        \\n        for (int i = 0; i < _todoItems.Count; i++)\\n        {\\n            var item = _todoItems[i];\\n            Console.WriteLine($\\\"{i + 1} | {item.Task} | {item.Priority} | {item.Deadline:yyyy-MM-dd} | {(item.IsCompleted ? \\\"Completed\\\" : \\\"Pending\\\")}\\\");\\n        }\\n    }\\n    \\n    private void MarkTaskCompleted()\\n    {\\n        ViewTasks();\\n        \\n        if (_todoItems.Count == 0)\\n        {\\n            return;\\n        }\\n        \\n        Console.Write(\\\"Enter task ID to mark as completed: \\\");\\n        int id;\\n        while (!int.TryParse(Console.ReadLine(), out id) || id < 1 || id > _todoItems.Count)\\n        {\\n            Console.Write(\\\"Invalid ID. Enter task ID: \\\");\\n        }\\n        \\n        _todoItems[id - 1].IsCompleted = true;\\n        Console.WriteLine(\\\"Task marked as completed.\\\");\\n    }\\n}\",\n  \"name\": \"Todo List Manager\",\n  \"description\": \"A simple to-do list manager that allows adding tasks with priorities and deadlines, marking tasks as completed, and persisting data to JSON files.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1384,"total_tokens":1905,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":9},"system_fingerprint":"fp_3d5141a69a_prod0225"}