{
  "readme": "# UnitConverter\n\n## Overview\nInteractive distance conversion module supporting kilometers, miles, meters, and feet. Provides bidirectional conversions with history tracking and JSON persistence. Implements input validation and handles edge cases including zero/negative values through a console interface.\n\n## Features\n### Implemented Features\n- \u2705 Kilometer \u2194 Mile conversions\n- \u2705 Meter \u2194 Foot conversions\n- \uD83D\uDEE1\uFE0F Basic numeric input validation\n- \uD83D\uDCCA Conversion result display\n- \uD83D\uDCDA Conversion history persistence (JSON)\n- \u23F3 Historical record tracking with timestamps\n\n### Planned Features\n- \uD83D\uDD04 Full cross-unit conversions between all supported types\n- \uD83D\uDCD6 Enhanced conversion history browser\n- \uD83D\uDD04 Unit swap functionality\n- \uD83C\uDFAF Decimal value support\n- \uD83C\uDF10 Additional unit types (inches, yards, nautical miles)\n- \u26A1 Real-time conversion updates\n- \uD83D\uDCC8 Visual conversion graphs\n- \uD83D\uDCBE Preset saving/loading\n\n## Requirements\n**Core Dependency:**\n- \u0060System.Text.Json\u0060 for JSON serialization\n\n## Usage\n1. **Main Menu**\n\n1. Convert distance\n2. Show conversion history\n3. Exit\n\n2. **Conversion Flow**\n   - Enter numeric value\n   - Select source unit (1-4)\n   - Select target unit (1-4)\n3. **History Management**\n   - Automatic JSON storage in \u0060dataFolder\u0060\n   - Timestamped entries with original/converted values\n\n**Example Session:**\n\nEnter value to convert: 100\nSelect source unit:\n1. Kilometers\n...\nConverted: 100 kilometers = 62.15 miles\n\n\n## Data Models\n| Model                 | Properties                                                                 |\n|-----------------------|----------------------------------------------------------------------------|\n| **ConversionRequest** | \u0060Value: float\u0060, \u0060SourceUnit: string\u0060, \u0060TargetUnit: string\u0060                 |\n| **ConversionResult**  | \u0060OriginalValue: float\u0060, \u0060OriginalUnit: string\u0060, \u0060ConvertedValue: float\u0060, \u0060ConvertedUnit: string\u0060 |\n| **ConversionHistory** | \u0060Timestamp: DateTime\u0060, \u0060Request: ConversionRequest\u0060, \u0060Result: ConversionResult\u0060 |\n\n## Roadmap\n- Expand unit conversion matrix\n- Implement unit swap shortcut\n- Develop graphical visualization\n- Enhance history management\n- Add preset configuration system"
}