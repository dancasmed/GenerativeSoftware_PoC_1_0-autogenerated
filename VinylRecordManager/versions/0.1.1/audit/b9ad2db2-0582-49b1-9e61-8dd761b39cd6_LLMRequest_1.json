{
  "model": "deepseek-reasoner",
  "messages": [
    {
      "role": "system",
      "content": "You are an skilled systems analist and software engineer. The user will provide you with a software module metadata. Your task is to generate a README file for this module."
    },
    {
      "role": "user",
      "content": "I will provide a metadata object describing a software project. This metadata may include details such as the project name, description, features, user interaction points, data\nmodels, dependencies (e.g., NuGet packages or APIs), and any other relevant information. Based on this metadata, generate a well-structured README.md document in markdown format.\nThe README should include the following sections:\n1. **Overview**: A brief description of the project\u0027s purpose and functionality.\n2. **Features**: A breakdown of implemented features and, if applicable, future/planned features.\n3. **Requirements**: List of dependencies or libraries required to run the project (e.g., NuGet packages).\n4. **Usage**: Instructions on how to use the project, including examples of user interactions.\n5. **Data Models** (if applicable): A description of any data structures or schemas used in the project.\n6. **Roadmap** (optional): Information about future improvements or planned features.\n\nThe README should be written in clear, concise language and formatted with appropriate markdown headers and bullet points. If the metadata includes specific fields like\n\u0027CreationRequirements\u0027 or \u0027FunctionalDetails,\u0027 ensure these are reflected in the generated document.\n\n### Example output:\n{ \u0022readme\u0022 : \u0022 GENERATED COUMENT IN MARKDOWN FORMAT\u0022 }\n\n-- Metadata object --\n{\n  \u0022Name\u0022: \u0022VinylRecordManager\u0022,\n  \u0022CreationRequirements\u0022: {\n    \u0022InitialRequirement\u0022: \u0022Help me to manage my vinyl records collection\u0022,\n    \u0022ReviewedRequirement\u0022: \u0022Design a software module to help users manage their vinyl records collection. The module should allow users to catalog their records, track their listening history, and manage their wishlist. Users should be able to add, edit, and delete records from their collection. Each record should include details such as artist, album title, release year, genre, and condition. Users should also be able to mark records as favorites and add personal notes. The module should provide a way to search and filter the collection based on various criteria. Additionally, users should be able to view statistics about their collection, such as the number of records per genre or the most listened-to records. The module should support importing and exporting the collection data for backup or sharing purposes.\u0022,\n    \u0022FunctionalDetails\u0022: [\n      \u0022Catalog vinyl records with details like artist, album title, release year, genre, and condition\u0022,\n      \u0022Track listening history for each record\u0022,\n      \u0022Manage a wishlist of desired records\u0022,\n      \u0022Mark records as favorites and add personal notes\u0022,\n      \u0022Search and filter the collection based on various criteria\u0022,\n      \u0022View statistics about the collection\u0022,\n      \u0022Import and export collection data\u0022\n    ],\n    \u0022UserInteraction\u0022: [\n      \u0022Add a new record to the collection\u0022,\n      \u0022Edit or delete an existing record\u0022,\n      \u0022Mark a record as favorite\u0022,\n      \u0022Add personal notes to a record\u0022,\n      \u0022Search and filter the collection\u0022,\n      \u0022View collection statistics\u0022,\n      \u0022Import or export collection data\u0022\n    ],\n    \u0022MinimumFeatures\u0022: [\n      {\n        \u0022Description\u0022: \u0022Add, edit, and delete records\u0022,\n        \u0022IsImplemented\u0022: true\n      },\n      {\n        \u0022Description\u0022: \u0022Basic record details (artist, album title, release year, genre, condition)\u0022,\n        \u0022IsImplemented\u0022: true\n      },\n      {\n        \u0022Description\u0022: \u0022Search and filter functionality\u0022,\n        \u0022IsImplemented\u0022: true\n      },\n      {\n        \u0022Description\u0022: \u0022Mark records as favorites\u0022,\n        \u0022IsImplemented\u0022: true\n      }\n    ],\n    \u0022GoodToHaveFeatures\u0022: [\n      {\n        \u0022Description\u0022: \u0022Listening history tracking\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Wishlist management\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Personal notes for records\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Collection statistics\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Import and export functionality\u0022,\n        \u0022IsImplemented\u0022: false\n      }\n    ],\n    \u0022BarRaiserFeatures\u0022: [\n      {\n        \u0022Description\u0022: \u0022Integration with music databases to auto-fill record details\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Barcode scanning for quick record addition\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Social sharing of collection or wishlist\u0022,\n        \u0022IsImplemented\u0022: false\n      },\n      {\n        \u0022Description\u0022: \u0022Recommendations based on collection or listening history\u0022,\n        \u0022IsImplemented\u0022: false\n      }\n    ],\n    \u0022DataModels\u0022: [\n      \u0022Record: artist (string), albumTitle (string), releaseYear (number), genre (string), condition (string), isFavorite (boolean), notes (string)\u0022,\n      \u0022ListeningHistory: recordId (string), listenDate (date), notes (string)\u0022,\n      \u0022Wishlist: artist (string), albumTitle (string), releaseYear (number), genre (string), priority (string)\u0022,\n      \u0022Statistics: totalRecords (number), recordsByGenre (object), mostListened (array)\u0022\n    ]\n  },\n  \u0022Version\u0022: {\n    \u0022Major\u0022: 0,\n    \u0022Minor\u0022: 1,\n    \u0022Patch\u0022: 1\n  },\n  \u0022IsInitialRequirementReviewed\u0022: true,\n  \u0022IsSourceCodeGenerated\u0022: true,\n  \u0022AreMinimumFeaturesImplemented\u0022: true,\n  \u0022AreGoodToHaveFeaturesImplemented\u0022: false,\n  \u0022AreBarRaiserFeaturesImplemented\u0022: false,\n  \u0022IsSourceCodeCompiled\u0022: true,\n  \u0022IsReadmeFileGenerated\u0022: false,\n  \u0022Description\u0022: \u0022Vinyl collection manager with CRUD operations, search/filter, statistics, and data import/export capabilities\u0022,\n  \u0022RequiredAPIs\u0022: [],\n  \u0022RequiredNuGets\u0022: [\n    {\n      \u0022nuget_name\u0022: \u0022Newtonsoft.Json\u0022,\n      \u0022nuget_version\u0022: \u002213.0.3\u0022\n    }\n  ]\n}"
    }
  ],
  "stream": false
}