{
  "model": "deepseek-reasoner",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful assistant with high skills in software development. The user will ask you to implement/create an application module using Cross-Platform .NET 9 C# code that adheres to the following interface:\n\n\u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022\n\n### Requirements:\n- The generated code must avoid using external APIs if possible, in case an API is needed add it to the list of required APIS.\n_ If the generated code needs NuGets installed add the NuGet name to the list of required Nugets.\n- The response must be in JSON format.\n- The \u0060source_code\u0060 field must contain C# code only (avoid markdown notation).\n- Do not include the IGeneratedModule in the generated source code.\n- The generated code **must not include any instructions that begin with \u0060Console.WriteLine($\u0060**.\n- If data persistence is required, use JSON files stored in the \u0060dataFolder\u0060 parameter of the \u0060Main\u0060 method.\n- Ensure the generated module is as detailed and complete as possible.\n- The constructor of the generated module must not have any parameters.\n- The generated code MUST not call Exit method. When the implemented Main method finish the excution control is passed to the main application.\n- The generated code must print information in the console to let know the user the module is running.\n- The generated code must implement CRUPDS operations for the data models.\n\n### Example output:\n{\u0022source_code\u0022:\u0022GENERATED C# CODE\u0022,\u0022description\u0022: \u0022GENERATED DESCRIPTION FOR THE MODULE\u0022, \u0022required_apis\u0022=[{\u0022API_1\u0022},{\u0022API_2\u0022}], , \u0022required_nugets\u0022=[{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_1\u0022,\u0022nuget_version\u0022:\u00221.0.0\u0022 },{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_2\u0022,\u0022nuget_version\u0022:\u00222.0.0.0\u0022 }]}"
    },
    {
      "role": "user",
      "content": "Generate a Cross-Platform .NET 9 C# code that implements the next interface \u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022 the Main method is the start point for the module. The souce code will run on a console application. The generated code must not write strings to console like this Console.WriteLine($\u0022{variable}\u0022). The source code will be automaticallty compiled so avoid adding markdown notation or anything that is not c# code The module must: Design a software module to help users manage their vinyl records collection. The module should allow users to catalog, search, and organize their vinyl records efficiently. Users should be able to add, edit, delete, and view details of their records, as well as perform advanced searches and generate reports. The module should also support categorization by genre, artist, and other metadata. Additionally, it should provide features to track the condition of records and manage wishlists for future purchases.\n## Funcional Details ##\nCatalog vinyl records with detailed metadata\nSearch and filter records by various criteria\nOrganize records into custom categories or playlists\nTrack the condition and value of each record\nManage a wishlist for future purchases\nGenerate reports on the collection\n## Required features ## \nCRUDS operations for vinyl records\nBasic search functionality\nAbility to categorize records by genre and artist\nTrack basic metadata (title, artist, year, genre)\n## User interaction ## \nAdd a new vinyl record to the collection\nEdit or update details of an existing record\nDelete a record from the collection\nSearch for records by title, artist, genre, etc.\nFilter records by condition, year, or other attributes\nGenerate a report or summary of the collection\nAdd records to a wishlist for future reference\n## Suggested data models ##\nmarkdown\n# Record\n- **id**: Unique identifier\n- **title**: Title of the record\n- **artist**: Artist or band name\n- **year**: Release year\n- **genre**: Music genre\n- **condition**: Physical condition (e.g., Mint, Good, Fair)\n- **notes**: Additional notes or comments\n- **value**: Estimated monetary value\n\nmarkdown\n# Wishlist\n- **id**: Unique identifier\n- **title**: Title of the desired record\n- **artist**: Artist or band name\n- **year**: Release year\n- **genre**: Music genre\n- **priority**: Priority level (e.g., High, Medium, Low)\n- **notes**: Additional notes or comments\n\nmarkdown\n# Report\n- **id**: Unique identifier\n- **type**: Type of report (e.g., Summary, By Genre, By Year)\n- **date**: Date of report generation\n- **content**: Report content or data\n"
    }
  ],
  "stream": false
}