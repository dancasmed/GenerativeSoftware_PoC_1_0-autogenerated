{"UseOnlineModel":true,"OfflineModel":"deepseek-r1:70b","OnlineModel":"deepseek-chat","Description":"","SystemPrompt":"You are a helpful assistant with high skills in software development. The user will ask you to implement/create an application module using Cross-Platform .NET 9 C# code that adheres to the following interface:\n\n\u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022\n\n### Requirements:\n- The generated code must avoid using external APIs if possible, in case an API is needed add it to the list of required APIS.\n_ If the generated code needs NuGets installed add the NuGet name to the list of required Nugets.\n- The response must be in JSON format.\n- The \u0060source_code\u0060 field must contain C# code only (avoid markdown notation).\n- Do not include the IGeneratedModule in the generated source code.\n- The generated code **must not include any instructions that begin with \u0060Console.WriteLine($\u0060**.\n- If data persistence is required, use JSON files stored in the \u0060dataFolder\u0060 parameter of the \u0060Main\u0060 method.\n- Ensure the generated module is as detailed and complete as possible.\n- The constructor of the generated module must not have any parameters.\n- The generated code MUST not call Exit method. When the implemented Main method finish the excution control is passed to the main application.\n- The generated code must print information in the console to let know the user the module is running.\n\n### Example output:\n{\u0022source_code\u0022:\u0022GENERATED C# CODE\u0022,\u0022name\u0022: \u0022GENERATED NAME FOR THE MODULE\u0022,\u0022description\u0022: \u0022GENERATED DESCRIPTION FOR THE MODULE\u0022, \u0022required_apis\u0022=[{\u0022API_1\u0022},{\u0022API_2\u0022}], , \u0022required_nugets\u0022=[{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_1\u0022,\u0022nuget_version\u0022:\u00221.0.0\u0022 },{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_2\u0022,\u0022nuget_version\u0022:\u00222.0.0.0\u0022 }]}","BasePrompt":"Generate a Cross-Platform .NET 9 C# code that implements the next interface \u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022 the Main method is the start point for the module. The souce code will run on a console application. The generated code must not write strings to console like this Console.WriteLine($\u0022{variable}\u0022). The source code will be automaticallty compiled so avoid adding markdown notation or anything that is not c# code The module must: \u003CTASK_INPUT\u003E","TaskInput":"Generate a random meal plan for the week","ModelRawResponse":"{\u0022id\u0022:\u0022923ee276-f936-47e9-bfcc-d6f999b418ca\u0022,\u0022object\u0022:\u0022chat.completion\u0022,\u0022created\u0022:1743795156,\u0022model\u0022:\u0022deepseek-chat\u0022,\u0022choices\u0022:[{\u0022index\u0022:0,\u0022message\u0022:{\u0022role\u0022:\u0022assistant\u0022,\u0022content\u0022:\u0022\u0060\u0060\u0060json\\n{\\n  \\\u0022source_code\\\u0022: \\\u0022using System;\\\\nusing System.Collections.Generic;\\\\nusing System.IO;\\\\nusing System.Text.Json;\\\\n\\\\npublic class MealPlannerModule : IGeneratedModule\\\\n{\\\\n    public string Name { get; set; } = \\\\\\\u0022Weekly Meal Planner\\\\\\\u0022;\\\\n\\\\n    private static readonly List\u003Cstring\u003E BreakfastOptions = new List\u003Cstring\u003E\\\\n    {\\\\n        \\\\\\\u0022Oatmeal with fruits\\\\\\\u0022,\\\\n        \\\\\\\u0022Scrambled eggs with toast\\\\\\\u0022,\\\\n        \\\\\\\u0022Yogurt with granola\\\\\\\u0022,\\\\n        \\\\\\\u0022Pancakes with maple syrup\\\\\\\u0022,\\\\n        \\\\\\\u0022Smoothie bowl\\\\\\\u0022,\\\\n        \\\\\\\u0022Avocado toast\\\\\\\u0022,\\\\n        \\\\\\\u0022French toast\\\\\\\u0022\\\\n    };\\\\n\\\\n    private static readonly List\u003Cstring\u003E LunchOptions = new List\u003Cstring\u003E\\\\n    {\\\\n        \\\\\\\u0022Chicken Caesar salad\\\\\\\u0022,\\\\n        \\\\\\\u0022Vegetable stir fry with rice\\\\\\\u0022,\\\\n        \\\\\\\u0022Grilled cheese sandwich with tomato soup\\\\\\\u0022,\\\\n        \\\\\\\u0022Quinoa bowl with roasted vegetables\\\\\\\u0022,\\\\n        \\\\\\\u0022Tuna salad wrap\\\\\\\u0022,\\\\n        \\\\\\\u0022Pasta with pesto\\\\\\\u0022,\\\\n        \\\\\\\u0022Burrito bowl\\\\\\\u0022\\\\n    };\\\\n\\\\n    private static readonly List\u003Cstring\u003E DinnerOptions = new List\u003Cstring\u003E\\\\n    {\\\\n        \\\\\\\u0022Grilled salmon with asparagus\\\\\\\u0022,\\\\n        \\\\\\\u0022Beef tacos with guacamole\\\\\\\u0022,\\\\n        \\\\\\\u0022Vegetable lasagna\\\\\\\u0022,\\\\n        \\\\\\\u0022Roast chicken with mashed potatoes\\\\\\\u0022,\\\\n        \\\\\\\u0022Shrimp stir fry with noodles\\\\\\\u0022,\\\\n        \\\\\\\u0022Mushroom risotto\\\\\\\u0022,\\\\n        \\\\\\\u0022Homemade pizza\\\\\\\u0022\\\\n    };\\\\n\\\\n    private static readonly Random random = new Random();\\\\n\\\\n    public bool Main(string dataFolder)\\\\n    {\\\\n        Console.WriteLine(\\\\\\\u0022Generating weekly meal plan...\\\\\\\u0022);\\\\n\\\\n        try\\\\n        {\\\\n            var mealPlan = new Dictionary\u003Cstring, Dictionary\u003Cstring, string\u003E\u003E();\\\\n            var daysOfWeek = new[] { \\\\\\\u0022Monday\\\\\\\u0022, \\\\\\\u0022Tuesday\\\\\\\u0022, \\\\\\\u0022Wednesday\\\\\\\u0022, \\\\\\\u0022Thursday\\\\\\\u0022, \\\\\\\u0022Friday\\\\\\\u0022, \\\\\\\u0022Saturday\\\\\\\u0022, \\\\\\\u0022Sunday\\\\\\\u0022 };\\\\n\\\\n            foreach (var day in daysOfWeek)\\\\n            {\\\\n                mealPlan[day] = new Dictionary\u003Cstring, string\u003E\\\\n                {\\\\n                    { \\\\\\\u0022Breakfast\\\\\\\u0022, GetRandomMeal(BreakfastOptions) },\\\\n                    { \\\\\\\u0022Lunch\\\\\\\u0022, GetRandomMeal(LunchOptions) },\\\\n                    { \\\\\\\u0022Dinner\\\\\\\u0022, GetRandomMeal(DinnerOptions) }\\\\n                };\\\\n            }\\\\n\\\\n            string json = JsonSerializer.Serialize(mealPlan, new JsonSerializerOptions { WriteIndented = true });\\\\n            string filePath = Path.Combine(dataFolder, \\\\\\\u0022weekly_meal_plan.json\\\\\\\u0022);\\\\n            File.WriteAllText(filePath, json);\\\\n\\\\n            Console.WriteLine(\\\\\\\u0022Weekly meal plan generated successfully!\\\\\\\u0022);\\\\n            Console.WriteLine(\\\\\\\u0022Saved to: \\\\\\\u0022 \u002B filePath);\\\\n            return true;\\\\n        }\\\\n        catch (Exception ex)\\\\n        {\\\\n            Console.WriteLine(\\\\\\\u0022Error generating meal plan: \\\\\\\u0022 \u002B ex.Message);\\\\n            return false;\\\\n        }\\\\n    }\\\\n\\\\n    private static string GetRandomMeal(List\u003Cstring\u003E options)\\\\n    {\\\\n        return options[random.Next(options.Count)];\\\\n    }\\\\n}\\\u0022,\\n  \\\u0022name\\\u0022: \\\u0022Weekly Meal Planner\\\u0022,\\n  \\\u0022description\\\u0022: \\\u0022Generates a random meal plan for the week with breakfast, lunch, and dinner options for each day.\\\u0022,\\n  \\\u0022required_apis\\\u0022: [],\\n  \\\u0022required_nugets\\\u0022: []\\n}\\n\u0060\u0060\u0060\u0022},\u0022logprobs\u0022:null,\u0022finish_reason\u0022:\u0022stop\u0022}],\u0022usage\u0022:{\u0022prompt_tokens\u0022:520,\u0022completion_tokens\u0022:755,\u0022total_tokens\u0022:1275,\u0022prompt_tokens_details\u0022:{\u0022cached_tokens\u0022:512},\u0022prompt_cache_hit_tokens\u0022:512,\u0022prompt_cache_miss_tokens\u0022:8},\u0022system_fingerprint\u0022:\u0022fp_3d5141a69a_prod0225\u0022}","ResponseFormat":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"source_code":{"type":"string"},"required_apis":{"type":"array","items":{"type":"string"}},"required_nugets":{"type":"array","items":{"type":"object","properties":{"nuget_name":{"type":"string"},"nuget_version":{"type":"string"}}}}},"required":["name","description","source_code"]},"CreationTime":"2025-04-04T19:32:35.991151Z","CompletionTime":"2025-04-04T19:33:05.789764Z","responseType":null,"TaskUUID":"598a3e95-0e77-49a7-b259-0e3b30964d5f","ModuleName":"ModuleCreator"}