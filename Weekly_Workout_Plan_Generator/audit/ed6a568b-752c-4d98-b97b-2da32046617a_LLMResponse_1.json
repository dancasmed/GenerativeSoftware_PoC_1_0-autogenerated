{"id":"bcf2548f-d85d-47da-94a0-7d8b1f948573","object":"chat.completion","created":1743794706,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class WorkoutPlanGenerator : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Weekly Workout Plan Generator\\\";\\n\\n    public WorkoutPlanGenerator() { }\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Weekly Workout Plan Generator is running...\\\");\\n\\n        try\\n        {\\n            if (!Directory.Exists(dataFolder))\\n            {\\n                Directory.CreateDirectory(dataFolder);\\n            }\\n\\n            Console.WriteLine(\\\"Please enter your fitness goal (e.g., Strength, Endurance, Weight Loss, General Fitness):\\\");\\n            string goal = Console.ReadLine();\\n\\n            Console.WriteLine(\\\"Enter your workout days per week (1-7):\\\");\\n            int daysPerWeek;\\n            while (!int.TryParse(Console.ReadLine(), out daysPerWeek) || daysPerWeek < 1 || daysPerWeek > 7)\\n            {\\n                Console.WriteLine(\\\"Invalid input. Please enter a number between 1 and 7:\\\");\\n            }\\n\\n            var workoutPlan = GenerateWorkoutPlan(goal, daysPerWeek);\\n            string json = JsonSerializer.Serialize(workoutPlan, new JsonSerializerOptions { WriteIndented = true });\\n\\n            string filePath = Path.Combine(dataFolder, \\\"workout_plan.json\\\");\\n            File.WriteAllText(filePath, json);\\n\\n            Console.WriteLine(\\\"Workout plan generated and saved to \\\" + filePath);\\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n\\n    private Dictionary<string, List<string>> GenerateWorkoutPlan(string goal, int daysPerWeek)\\n    {\\n        var workoutPlan = new Dictionary<string, List<string>>();\\n        var exercises = GetExercisesByGoal(goal);\\n        var random = new Random();\\n\\n        for (int i = 1; i <= daysPerWeek; i++)\\n        {\\n            var dayExercises = new List<string>();\\n            int exerciseCount = Math.Min(5, exercises.Count);\\n\\n            for (int j = 0; j < exerciseCount; j++)\\n            {\\n                int index = random.Next(exercises.Count);\\n                dayExercises.Add(exercises[index]);\\n            }\\n\\n            workoutPlan.Add(\\\"Day \\\" + i, dayExercises);\\n        }\\n\\n        return workoutPlan;\\n    }\\n\\n    private List<string> GetExercisesByGoal(string goal)\\n    {\\n        switch (goal.ToLower())\\n        {\\n            case \\\"strength\\\":\\n                return new List<string>\\n                {\\n                    \\\"Deadlifts\\\", \\\"Squats\\\", \\\"Bench Press\\\", \\\"Overhead Press\\\", \\\"Barbell Rows\\\",\\n                    \\\"Pull-Ups\\\", \\\"Dips\\\", \\\"Lunges\\\", \\\"Romanian Deadlifts\\\"\\n                };\\n            case \\\"endurance\\\":\\n                return new List<string>\\n                {\\n                    \\\"Running\\\", \\\"Cycling\\\", \\\"Swimming\\\", \\\"Rowing\\\", \\\"Jump Rope\\\",\\n                    \\\"Burpees\\\", \\\"Mountain Climbers\\\", \\\"Box Jumps\\\", \\\"High Knees\\\"\\n                };\\n            case \\\"weight loss\\\":\\n                return new List<string>\\n                {\\n                    \\\"HIIT Circuit\\\", \\\"Kettlebell Swings\\\", \\\"Battle Ropes\\\", \\\"Sprints\\\",\\n                    \\\"Jump Squats\\\", \\\"Plank\\\", \\\"Russian Twists\\\", \\\"Bicycle Crunches\\\"\\n                };\\n            default:\\n                return new List<string>\\n                {\\n                    \\\"Push-Ups\\\", \\\"Squats\\\", \\\"Lunges\\\", \\\"Plank\\\", \\\"Crunches\\\",\\n                    \\\"Superman\\\", \\\"Glute Bridges\\\", \\\"Arm Circles\\\", \\\"Leg Raises\\\"\\n                };\\n        }\\n    }\\n}\",\n  \"name\": \"Weekly Workout Plan Generator\",\n  \"description\": \"Generates a personalized weekly workout plan based on user's fitness goals and available workout days.\",\n  \"required_apis\": [],\n  \"required_nugets\": [\n    {\n      \"nuget_name\": \"System.Text.Json\",\n      \"nuget_version\": \"6.0.0\"\n    }\n  ]\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":521,"completion_tokens":1000,"total_tokens":1521,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":9},"system_fingerprint":"fp_3d5141a69a_prod0225"}