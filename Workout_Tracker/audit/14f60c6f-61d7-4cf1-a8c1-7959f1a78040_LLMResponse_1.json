{"id":"577495f7-11cb-49b8-a38d-304386dd96b1","object":"chat.completion","created":1743792634,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class WorkoutTrackerModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Workout Tracker\\\";\\n    \\n    private string _workoutsFilePath;\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        _workoutsFilePath = Path.Combine(dataFolder, \\\"workouts.json\\\");\\n        \\n        Console.WriteLine(\\\"Workout Tracker Module is running.\\\");\\n        Console.WriteLine(\\\"Data will be saved to: \\\" + _workoutsFilePath);\\n        \\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n        \\n        List<Workout> workouts = LoadWorkouts();\\n        \\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            DisplayMenu();\\n            \\n            string input = Console.ReadLine();\\n            \\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddWorkout(workouts);\\n                    break;\\n                case \\\"2\\\":\\n                    ViewWorkouts(workouts);\\n                    break;\\n                case \\\"3\\\":\\n                    SaveWorkouts(workouts);\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n        \\n        return true;\\n    }\\n    \\n    private List<Workout> LoadWorkouts()\\n    {\\n        if (File.Exists(_workoutsFilePath))\\n        {\\n            string json = File.ReadAllText(_workoutsFilePath);\\n            return JsonSerializer.Deserialize<List<Workout>>(json);\\n        }\\n        \\n        return new List<Workout>();\\n    }\\n    \\n    private void SaveWorkouts(List<Workout> workouts)\\n    {\\n        string json = JsonSerializer.Serialize(workouts, new JsonSerializerOptions { WriteIndented = true });\\n        File.WriteAllText(_workoutsFilePath, json);\\n        Console.WriteLine(\\\"Workouts saved successfully.\\\");\\n    }\\n    \\n    private void DisplayMenu()\\n    {\\n        Console.WriteLine(\\\"\\\\nWorkout Tracker Menu:\\\");\\n        Console.WriteLine(\\\"1. Add Workout\\\");\\n        Console.WriteLine(\\\"2. View Workouts\\\");\\n        Console.WriteLine(\\\"3. Exit and Save\\\");\\n        Console.Write(\\\"Select an option: \\\");\\n    }\\n    \\n    private void AddWorkout(List<Workout> workouts)\\n    {\\n        Console.Write(\\\"Enter workout name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter duration in minutes: \\\");\\n        int duration = int.Parse(Console.ReadLine());\\n        \\n        Console.Write(\\\"Enter calories burned: \\\");\\n        int calories = int.Parse(Console.ReadLine());\\n        \\n        Console.Write(\\\"Enter date (yyyy-MM-dd): \\\");\\n        DateTime date = DateTime.Parse(Console.ReadLine());\\n        \\n        workouts.Add(new Workout\\n        {\\n            Name = name,\\n            Duration = duration,\\n            Calories = calories,\\n            Date = date\\n        });\\n        \\n        Console.WriteLine(\\\"Workout added successfully.\\\");\\n    }\\n    \\n    private void ViewWorkouts(List<Workout> workouts)\\n    {\\n        if (workouts.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No workouts recorded yet.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nRecorded Workouts:\\\");\\n        foreach (var workout in workouts)\\n        {\\n            Console.WriteLine($\\\"{workout.Date:yyyy-MM-dd} - {workout.Name}\\\");\\n            Console.WriteLine($\\\"  Duration: {workout.Duration} mins\\\");\\n            Console.WriteLine($\\\"  Calories: {workout.Calories}\\\");\\n        }\\n    }\\n}\\n\\npublic class Workout\\n{\\n    public string Name { get; set; }\\n    public int Duration { get; set; }\\n    public int Calories { get; set; }\\n    public DateTime Date { get; set; }\\n}\",\n  \"name\": \"Workout Tracker\",\n  \"description\": \"Tracks workout routines and progress over time, storing data in JSON format\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":519,"completion_tokens":1046,"total_tokens":1565,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":7},"system_fingerprint":"fp_3d5141a69a_prod0225"}