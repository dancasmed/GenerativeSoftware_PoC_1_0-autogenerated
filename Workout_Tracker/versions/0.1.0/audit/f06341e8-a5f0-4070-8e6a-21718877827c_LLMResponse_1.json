
{"id":"d24ebc51-e14d-42b4-bd5c-e08be35cb1b6","object":"chat.completion","created":1743764341,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class WorkoutTrackerModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Workout Tracker\\\";\\n\\n    private string _workoutsFilePath;\\n    private List<Workout> _workouts;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Initializing Workout Tracker Module...\\\");\\n\\n        _workoutsFilePath = Path.Combine(dataFolder, \\\"workouts.json\\\");\\n        _workouts = new List<Workout>();\\n\\n        LoadWorkouts();\\n\\n        bool running = true;\\n        while (running)\\n        {\\n            Console.WriteLine(\\\"\\\\nWorkout Tracker Menu:\\\");\\n            Console.WriteLine(\\\"1. Add Workout\\\");\\n            Console.WriteLine(\\\"2. View Workouts\\\");\\n            Console.WriteLine(\\\"3. View Progress\\\");\\n            Console.WriteLine(\\\"4. Exit\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n\\n            string input = Console.ReadLine();\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddWorkout();\\n                    break;\\n                case \\\"2\\\":\\n                    ViewWorkouts();\\n                    break;\\n                case \\\"3\\\":\\n                    ViewProgress();\\n                    break;\\n                case \\\"4\\\":\\n                    running = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        SaveWorkouts();\\n        Console.WriteLine(\\\"Workout Tracker Module completed.\\\");\\n        return true;\\n    }\\n\\n    private void LoadWorkouts()\\n    {\\n        try\\n        {\\n            if (File.Exists(_workoutsFilePath))\\n            {\\n                string json = File.ReadAllText(_workoutsFilePath);\\n                _workouts = JsonSerializer.Deserialize<List<Workout>>(json);\\n                Console.WriteLine(\\\"Workout data loaded successfully.\\\");\\n            }\\n            else\\n            {\\n                Console.WriteLine(\\\"No existing workout data found. Starting fresh.\\\");\\n            }\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error loading workouts: \\\" + ex.Message);\\n        }\\n    }\\n\\n    private void SaveWorkouts()\\n    {\\n        try\\n        {\\n            string json = JsonSerializer.Serialize(_workouts);\\n            File.WriteAllText(_workoutsFilePath, json);\\n            Console.WriteLine(\\\"Workout data saved successfully.\\\");\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"Error saving workouts: \\\" + ex.Message);\\n        }\\n    }\\n\\n    private void AddWorkout()\\n    {\\n        Console.Write(\\\"Enter workout name: \\\");\\n        string name = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter workout date (yyyy-MM-dd): \\\");\\n        if (!DateTime.TryParse(Console.ReadLine(), out DateTime date))\\n        {\\n            Console.WriteLine(\\\"Invalid date format. Using today's date.\\\");\\n            date = DateTime.Today;\\n        }\\n\\n        Console.Write(\\\"Enter duration in minutes: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int duration))\\n        {\\n            Console.WriteLine(\\\"Invalid duration. Defaulting to 30 minutes.\\\");\\n            duration = 30;\\n        }\\n\\n        Console.Write(\\\"Enter calories burned: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int calories))\\n        {\\n            Console.WriteLine(\\\"Invalid calories. Defaulting to 0.\\\");\\n            calories = 0;\\n        }\\n\\n        var workout = new Workout\\n        {\\n            Name = name,\\n            Date = date,\\n            DurationMinutes = duration,\\n            CaloriesBurned = calories\\n        };\\n\\n        _workouts.Add(workout);\\n        Console.WriteLine(\\\"Workout added successfully!\\\");\\n    }\\n\\n    private void ViewWorkouts()\\n    {\\n        if (_workouts.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No workouts recorded yet.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nRecorded Workouts:\\\");\\n        foreach (var workout in _workouts)\\n        {\\n            Console.WriteLine($\\\"{workout.Date:yyyy-MM-dd}: {workout.Name} ({workout.DurationMinutes} min, {workout.CaloriesBurned} cal)\\\");\\n        }\\n    }\\n\\n    private void ViewProgress()\\n    {\\n        if (_workouts.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No workouts recorded yet.\\\");\\n            return;\\n        }\\n\\n        var earliestDate = _workouts.Min(w => w.Date);\\n        var latestDate = _workouts.Max(w => w.Date);\\n        var totalWorkouts = _workouts.Count;\\n        var totalDuration = _workouts.Sum(w => w.DurationMinutes);\\n        var totalCalories = _workouts.Sum(w => w.CaloriesBurned);\\n\\n        Console.WriteLine(\\\"\\\\nWorkout Progress Summary:\\\");\\n        Console.WriteLine($\\\"Tracking period: {earliestDate:yyyy-MM-dd} to {latestDate:yyyy-MM-dd}\\\");\\n        Console.WriteLine($\\\"Total workouts: {totalWorkouts}\\\");\\n        Console.WriteLine($\\\"Total workout time: {totalDuration} minutes\\\");\\n        Console.WriteLine($\\\"Total calories burned: {totalCalories}\\\");\\n\\n        var workoutsByType = _workouts.GroupBy(w => w.Name)\\n                                    .Select(g => new { Name = g.Key, Count = g.Count() })\\n                                    .OrderByDescending(x => x.Count);\\n\\n        Console.WriteLine(\\\"\\\\nMost Frequent Workouts:\\\");\\n        foreach (var type in workoutsByType)\\n        {\\n            Console.WriteLine($\\\"{type.Name}: {type.Count} times\\\");\\n        }\\n    }\\n}\\n\\npublic class Workout\\n{\\n    public string Name { get; set; }\\n    public DateTime Date { get; set; }\\n    public int DurationMinutes { get; set; }\\n    public int CaloriesBurned { get; set; }\\n}\",\n  \"name\": \"Workout Tracker\",\n  \"description\": \"Tracks workout routines and progress over time, storing data in JSON format\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":519,"completion_tokens":1501,"total_tokens":2020,"prompt_tokens_details":{"cached_tokens":448},"prompt_cache_hit_tokens":448,"prompt_cache_miss_tokens":71},"system_fingerprint":"fp_3d5141a69a_prod0225"}