{"id":"c5ad975e-cf67-411b-8694-13487918ee37","object":"chat.completion","created":1743766600,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class WorkoutTrackerModule : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Workout Tracker Module\\\";\\n    \\n    private string _workoutsFilePath;\\n    \\n    public bool Main(string dataFolder)\\n    {\\n        try\\n        {\\n            Console.WriteLine(\\\"Workout Tracker Module is running.\\\");\\n            \\n            _workoutsFilePath = Path.Combine(dataFolder, \\\"workouts.json\\\");\\n            \\n            if (!Directory.Exists(dataFolder))\\n            {\\n                Directory.CreateDirectory(dataFolder);\\n            }\\n            \\n            bool continueRunning = true;\\n            while (continueRunning)\\n            {\\n                Console.WriteLine(\\\"\\\\nWorkout Tracker Menu:\\\");\\n                Console.WriteLine(\\\"1. Add Workout\\\");\\n                Console.WriteLine(\\\"2. View Workout History\\\");\\n                Console.WriteLine(\\\"3. Exit\\\");\\n                Console.Write(\\\"Select an option: \\\");\\n                \\n                string input = Console.ReadLine();\\n                \\n                switch (input)\\n                {\\n                    case \\\"1\\\":\\n                        AddWorkout();\\n                        break;\\n                    case \\\"2\\\":\\n                        ViewWorkoutHistory();\\n                        break;\\n                    case \\\"3\\\":\\n                        continueRunning = false;\\n                        break;\\n                    default:\\n                        Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                        break;\\n                }\\n            }\\n            \\n            return true;\\n        }\\n        catch (Exception ex)\\n        {\\n            Console.WriteLine(\\\"An error occurred: \\\" + ex.Message);\\n            return false;\\n        }\\n    }\\n    \\n    private void AddWorkout()\\n    {\\n        Console.Write(\\\"Enter workout name: \\\");\\n        string name = Console.ReadLine();\\n        \\n        Console.Write(\\\"Enter workout duration (minutes): \\\");\\n        int duration = int.Parse(Console.ReadLine());\\n        \\n        Console.Write(\\\"Enter calories burned: \\\");\\n        int calories = int.Parse(Console.ReadLine());\\n        \\n        Console.Write(\\\"Enter notes (optional): \\\");\\n        string notes = Console.ReadLine();\\n        \\n        var workout = new Workout\\n        {\\n            Name = name,\\n            Duration = duration,\\n            CaloriesBurned = calories,\\n            Notes = notes,\\n            Date = DateTime.Now\\n        };\\n        \\n        List<Workout> workouts = LoadWorkouts();\\n        workouts.Add(workout);\\n        SaveWorkouts(workouts);\\n        \\n        Console.WriteLine(\\\"Workout added successfully!\\\");\\n    }\\n    \\n    private void ViewWorkoutHistory()\\n    {\\n        List<Workout> workouts = LoadWorkouts();\\n        \\n        if (workouts.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No workouts recorded yet.\\\");\\n            return;\\n        }\\n        \\n        Console.WriteLine(\\\"\\\\nWorkout History:\\\");\\n        foreach (var workout in workouts)\\n        {\\n            Console.WriteLine(\\\"\\\\nName: \\\" + workout.Name);\\n            Console.WriteLine(\\\"Date: \\\" + workout.Date.ToString(\\\"yyyy-MM-dd HH:mm\\\"));\\n            Console.WriteLine(\\\"Duration: \\\" + workout.Duration + \\\" minutes\\\");\\n            Console.WriteLine(\\\"Calories Burned: \\\" + workout.CaloriesBurned);\\n            if (!string.IsNullOrEmpty(workout.Notes))\\n            {\\n                Console.WriteLine(\\\"Notes: \\\" + workout.Notes);\\n            }\\n        }\\n    }\\n    \\n    private List<Workout> LoadWorkouts()\\n    {\\n        if (!File.Exists(_workoutsFilePath))\\n        {\\n            return new List<Workout>();\\n        }\\n        \\n        string json = File.ReadAllText(_workoutsFilePath);\\n        return JsonSerializer.Deserialize<List<Workout>>(json) ?? new List<Workout>();\\n    }\\n    \\n    private void SaveWorkouts(List<Workout> workouts)\\n    {\\n        string json = JsonSerializer.Serialize(workouts);\\n        File.WriteAllText(_workoutsFilePath, json);\\n    }\\n}\\n\\npublic class Workout\\n{\\n    public string Name { get; set; }\\n    public int Duration { get; set; }\\n    public int CaloriesBurned { get; set; }\\n    public string Notes { get; set; }\\n    public DateTime Date { get; set; }\\n}\",\n  \"name\": \"Workout Tracker Module\",\n  \"description\": \"A module that tracks workout routines and progress over time, storing data in JSON format.\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":519,"completion_tokens":1116,"total_tokens":1635,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":7},"system_fingerprint":"fp_3d5141a69a_prod0225"}