{"UseOnlineModel":true,"OfflineModel":"deepseek-r1:70b","OnlineModel":"deepseek-chat","Description":"","SystemPrompt":"You are a helpful assistant with high skills in software development. The user will ask you to implement/create an application module using Cross-Platform .NET 9 C# code that adheres to the following interface:\n\n\u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022\n\n### Requirements:\n- The generated code must avoid using external APIs if possible, in case an API is needed add it to the list of required APIS.\n_ If the generated code needs NuGets installed add the NuGet name to the list of required Nugets.\n- The response must be in JSON format.\n- The \u0060source_code\u0060 field must contain C# code only (avoid markdown notation).\n- Do not include the IGeneratedModule in the generated source code.\n- The generated code **must not include any instructions that begin with \u0060Console.WriteLine($\u0060**.\n- If data persistence is required, use JSON files stored in the \u0060dataFolder\u0060 parameter of the \u0060Main\u0060 method.\n- Ensure the generated module is as detailed and complete as possible.\n- The constructor of the generated module must not have any parameters.\n- The generated code MUST not call Exit method. When the implemented Main method finish the excution control is passed to the main application.\n- The generated code must print information in the console to let know the user the module is running.\n\n### Example output:\n{\u0022source_code\u0022:\u0022GENERATED C# CODE\u0022,\u0022name\u0022: \u0022GENERATED NAME FOR THE MODULE\u0022,\u0022description\u0022: \u0022GENERATED DESCRIPTION FOR THE MODULE\u0022, \u0022required_apis\u0022=[{\u0022API_1\u0022},{\u0022API_2\u0022}], , \u0022required_nugets\u0022=[{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_1\u0022,\u0022nuget_version\u0022:\u00221.0.0\u0022 },{ \u0022nuget_name\u0022:\u0022MISSING_NUGET_2\u0022,\u0022nuget_version\u0022:\u00222.0.0.0\u0022 }]}","BasePrompt":"Generate a Cross-Platform .NET 9 C# code that implements the next interface \u0022public interface IGeneratedModule { public string Name { get; set; } public bool Main(string dataFolder); }\u0022 the Main method is the start point for the module. The souce code will run on a console application. The generated code must not write strings to console like this Console.WriteLine($\u0022{variable}\u0022). The source code will be automaticallty compiled so avoid adding markdown notation or anything that is not c# code The module must: \u003CTASK_INPUT\u003E","TaskInput":"Generate random writing prompts for creative writing","ModelRawResponse":"{\u0022id\u0022:\u0022543fd227-cfe6-492b-9a70-bbc0c9133821\u0022,\u0022object\u0022:\u0022chat.completion\u0022,\u0022created\u0022:1743792974,\u0022model\u0022:\u0022deepseek-chat\u0022,\u0022choices\u0022:[{\u0022index\u0022:0,\u0022message\u0022:{\u0022role\u0022:\u0022assistant\u0022,\u0022content\u0022:\u0022\u0060\u0060\u0060json\\n{\\n  \\\u0022source_code\\\u0022: \\\u0022using System;\\\\nusing System.Collections.Generic;\\\\nusing System.IO;\\\\nusing System.Text.Json;\\\\n\\\\npublic class WritingPromptGenerator : IGeneratedModule\\\\n{\\\\n    public string Name { get; set; } = \\\\\\\u0022Writing Prompt Generator\\\\\\\u0022;\\\\n    \\\\n    private readonly List\u003Cstring\u003E _prompts = new List\u003Cstring\u003E\\\\n    {\\\\n        \\\\\\\u0022Write a story about a character who discovers a hidden door in their home.\\\\\\\u0022,\\\\n        \\\\\\\u0022Describe a world where time moves backward instead of forward.\\\\\\\u0022,\\\\n        \\\\\\\u0022Write a dialogue between two strangers who meet on a train.\\\\\\\u0022,\\\\n        \\\\\\\u0022Create a story where the protagonist has a unique superpower that seems useless at first.\\\\\\\u0022,\\\\n        \\\\\\\u0022Imagine a society where emotions are bought and sold. How does it function?\\\\\\\u0022,\\\\n        \\\\\\\u0022Write about a character who receives a mysterious letter with no return address.\\\\\\\u0022,\\\\n        \\\\\\\u0022Describe a day in the life of a sentient robot living among humans.\\\\\\\u0022,\\\\n        \\\\\\\u0022Write a story set in a library where the books come to life at night.\\\\\\\u0022,\\\\n        \\\\\\\u0022Imagine a world where dreams are shared experiences. What happens when a nightmare spreads?\\\\\\\u0022,\\\\n        \\\\\\\u0022Write about a person who finds an old photograph that changes their life.\\\\\\\u0022\\\\n    };\\\\n    \\\\n    private readonly Random _random = new Random();\\\\n    \\\\n    public bool Main(string dataFolder)\\\\n    {\\\\n        try\\\\n        {\\\\n            Console.WriteLine(\\\\\\\u0022Writing Prompt Generator is running...\\\\\\\u0022);\\\\n            \\\\n            string filePath = Path.Combine(dataFolder, \\\\\\\u0022writing_prompts.json\\\\\\\u0022);\\\\n            \\\\n            if (!Directory.Exists(dataFolder))\\\\n            {\\\\n                Directory.CreateDirectory(dataFolder);\\\\n            }\\\\n            \\\\n            string randomPrompt = _prompts[_random.Next(_prompts.Count)];\\\\n            \\\\n            var promptData = new\\\\n            {\\\\n                Prompt = randomPrompt,\\\\n                GeneratedAt = DateTime.Now\\\\n            };\\\\n            \\\\n            string json = JsonSerializer.Serialize(promptData);\\\\n            File.WriteAllText(filePath, json);\\\\n            \\\\n            Console.WriteLine(\\\\\\\u0022A new writing prompt has been generated and saved.\\\\\\\u0022);\\\\n            Console.WriteLine(\\\\\\\u0022Prompt: \\\\\\\u0022 \u002B randomPrompt);\\\\n            \\\\n            return true;\\\\n        }\\\\n        catch (Exception ex)\\\\n        {\\\\n            Console.WriteLine(\\\\\\\u0022An error occurred: \\\\\\\u0022 \u002B ex.Message);\\\\n            return false;\\\\n        }\\\\n    }\\\\n}\\\u0022,\\n  \\\u0022name\\\u0022: \\\u0022Writing Prompt Generator\\\u0022,\\n  \\\u0022description\\\u0022: \\\u0022A module that generates random writing prompts for creative writing and saves them to a JSON file.\\\u0022,\\n  \\\u0022required_apis\\\u0022: [],\\n  \\\u0022required_nugets\\\u0022: []\\n}\\n\u0060\u0060\u0060\u0022},\u0022logprobs\u0022:null,\u0022finish_reason\u0022:\u0022stop\u0022}],\u0022usage\u0022:{\u0022prompt_tokens\u0022:519,\u0022completion_tokens\u0022:600,\u0022total_tokens\u0022:1119,\u0022prompt_tokens_details\u0022:{\u0022cached_tokens\u0022:512},\u0022prompt_cache_hit_tokens\u0022:512,\u0022prompt_cache_miss_tokens\u0022:7},\u0022system_fingerprint\u0022:\u0022fp_3d5141a69a_prod0225\u0022}","ResponseFormat":{"type":"object","properties":{"name":{"type":"string"},"description":{"type":"string"},"source_code":{"type":"string"},"required_apis":{"type":"array","items":{"type":"string"}},"required_nugets":{"type":"array","items":{"type":"object","properties":{"nuget_name":{"type":"string"},"nuget_version":{"type":"string"}}}}},"required":["name","description","source_code"]},"CreationTime":"2025-04-04T18:56:13.905312Z","CompletionTime":"2025-04-04T18:56:41.00813Z","responseType":null,"TaskUUID":"7397f0ec-b494-45a9-a78f-0f664ce07a85","ModuleName":"ModuleCreator"}