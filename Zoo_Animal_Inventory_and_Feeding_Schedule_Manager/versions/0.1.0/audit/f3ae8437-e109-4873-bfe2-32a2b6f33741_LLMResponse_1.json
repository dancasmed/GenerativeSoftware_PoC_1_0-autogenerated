
{"id":"f2ae52bf-95f7-49aa-be05-4830cffb8025","object":"chat.completion","created":1744182635,"model":"deepseek-chat","choices":[{"index":0,"message":{"role":"assistant","content":"```json\n{\n  \"source_code\": \"using System;\\nusing System.Collections.Generic;\\nusing System.IO;\\nusing System.Text.Json;\\n\\npublic class ZooManager : IGeneratedModule\\n{\\n    public string Name { get; set; } = \\\"Zoo Animal Inventory and Feeding Schedule Manager\\\";\\n\\n    private string _animalsFilePath;\\n    private string _feedingSchedulesFilePath;\\n\\n    public bool Main(string dataFolder)\\n    {\\n        Console.WriteLine(\\\"Initializing Zoo Manager Module...\\\");\\n\\n        _animalsFilePath = Path.Combine(dataFolder, \\\"animals.json\\\");\\n        _feedingSchedulesFilePath = Path.Combine(dataFolder, \\\"feedingSchedules.json\\\");\\n\\n        if (!Directory.Exists(dataFolder))\\n        {\\n            Directory.CreateDirectory(dataFolder);\\n        }\\n\\n        List<Animal> animals = LoadAnimals();\\n        List<FeedingSchedule> feedingSchedules = LoadFeedingSchedules();\\n\\n        bool continueRunning = true;\\n        while (continueRunning)\\n        {\\n            Console.WriteLine(\\\"\\\\nZoo Management System\\\");\\n            Console.WriteLine(\\\"1. Add Animal\\\");\\n            Console.WriteLine(\\\"2. View Animals\\\");\\n            Console.WriteLine(\\\"3. Add Feeding Schedule\\\");\\n            Console.WriteLine(\\\"4. View Feeding Schedules\\\");\\n            Console.WriteLine(\\\"5. Exit Module\\\");\\n            Console.Write(\\\"Select an option: \\\");\\n\\n            string input = Console.ReadLine();\\n\\n            switch (input)\\n            {\\n                case \\\"1\\\":\\n                    AddAnimal(animals);\\n                    break;\\n                case \\\"2\\\":\\n                    ViewAnimals(animals);\\n                    break;\\n                case \\\"3\\\":\\n                    AddFeedingSchedule(feedingSchedules, animals);\\n                    break;\\n                case \\\"4\\\":\\n                    ViewFeedingSchedules(feedingSchedules);\\n                    break;\\n                case \\\"5\\\":\\n                    continueRunning = false;\\n                    break;\\n                default:\\n                    Console.WriteLine(\\\"Invalid option. Please try again.\\\");\\n                    break;\\n            }\\n        }\\n\\n        SaveAnimals(animals);\\n        SaveFeedingSchedules(feedingSchedules);\\n\\n        Console.WriteLine(\\\"Zoo Manager Module completed successfully.\\\");\\n        return true;\\n    }\\n\\n    private List<Animal> LoadAnimals()\\n    {\\n        if (File.Exists(_animalsFilePath))\\n        {\\n            string json = File.ReadAllText(_animalsFilePath);\\n            return JsonSerializer.Deserialize<List<Animal>>(json) ?? new List<Animal>();\\n        }\\n        return new List<Animal>();\\n    }\\n\\n    private List<FeedingSchedule> LoadFeedingSchedules()\\n    {\\n        if (File.Exists(_feedingSchedulesFilePath))\\n        {\\n            string json = File.ReadAllText(_feedingSchedulesFilePath);\\n            return JsonSerializer.Deserialize<List<FeedingSchedule>>(json) ?? new List<FeedingSchedule>();\\n        }\\n        return new List<FeedingSchedule>();\\n    }\\n\\n    private void SaveAnimals(List<Animal> animals)\\n    {\\n        string json = JsonSerializer.Serialize(animals);\\n        File.WriteAllText(_animalsFilePath, json);\\n    }\\n\\n    private void SaveFeedingSchedules(List<FeedingSchedule> schedules)\\n    {\\n        string json = JsonSerializer.Serialize(schedules);\\n        File.WriteAllText(_feedingSchedulesFilePath, json);\\n    }\\n\\n    private void AddAnimal(List<Animal> animals)\\n    {\\n        Console.Write(\\\"Enter animal name: \\\");\\n        string name = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter species: \\\");\\n        string species = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter enclosure number: \\\");\\n        string enclosure = Console.ReadLine();\\n\\n        animals.Add(new Animal\\n        {\\n            Id = animals.Count + 1,\\n            Name = name,\\n            Species = species,\\n            Enclosure = enclosure,\\n            LastFed = DateTime.MinValue\\n        });\\n\\n        Console.WriteLine(\\\"Animal added successfully.\\\");\\n    }\\n\\n    private void ViewAnimals(List<Animal> animals)\\n    {\\n        if (animals.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No animals in inventory.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nAnimal Inventory:\\\");\\n        foreach (var animal in animals)\\n        {\\n            Console.WriteLine($\\\"ID: {animal.Id}, Name: {animal.Name}, Species: {animal.Species}, Enclosure: {animal.Enclosure}\\\");\\n        }\\n    }\\n\\n    private void AddFeedingSchedule(List<FeedingSchedule> schedules, List<Animal> animals)\\n    {\\n        ViewAnimals(animals);\\n        if (animals.Count == 0) return;\\n\\n        Console.Write(\\\"Enter animal ID: \\\");\\n        if (!int.TryParse(Console.ReadLine(), out int animalId))\\n        {\\n            Console.WriteLine(\\\"Invalid animal ID.\\\");\\n            return;\\n        }\\n\\n        var animal = animals.Find(a => a.Id == animalId);\\n        if (animal == null)\\n        {\\n            Console.WriteLine(\\\"Animal not found.\\\");\\n            return;\\n        }\\n\\n        Console.Write(\\\"Enter feeding time (HH:mm): \\\");\\n        if (!TimeSpan.TryParse(Console.ReadLine(), out TimeSpan feedingTime))\\n        {\\n            Console.WriteLine(\\\"Invalid time format.\\\");\\n            return;\\n        }\\n\\n        Console.Write(\\\"Enter food type: \\\");\\n        string foodType = Console.ReadLine();\\n\\n        Console.Write(\\\"Enter quantity: \\\");\\n        if (!double.TryParse(Console.ReadLine(), out double quantity))\\n        {\\n            Console.WriteLine(\\\"Invalid quantity.\\\");\\n            return;\\n        }\\n\\n        schedules.Add(new FeedingSchedule\\n        {\\n            Id = schedules.Count + 1,\\n            AnimalId = animalId,\\n            AnimalName = animal.Name,\\n            Time = feedingTime,\\n            FoodType = foodType,\\n            Quantity = quantity,\\n            LastFed = DateTime.MinValue\\n        });\\n\\n        Console.WriteLine(\\\"Feeding schedule added successfully.\\\");\\n    }\\n\\n    private void ViewFeedingSchedules(List<FeedingSchedule> schedules)\\n    {\\n        if (schedules.Count == 0)\\n        {\\n            Console.WriteLine(\\\"No feeding schedules available.\\\");\\n            return;\\n        }\\n\\n        Console.WriteLine(\\\"\\\\nFeeding Schedules:\\\");\\n        foreach (var schedule in schedules)\\n        {\\n            Console.WriteLine($\\\"ID: {schedule.Id}, Animal: {schedule.AnimalName}, Time: {schedule.Time}, Food: {schedule.FoodType}, Quantity: {schedule.Quantity}\\\");\\n        }\\n    }\\n}\\n\\npublic class Animal\\n{\\n    public int Id { get; set; }\\n    public string Name { get; set; }\\n    public string Species { get; set; }\\n    public string Enclosure { get; set; }\\n    public DateTime LastFed { get; set; }\\n}\\n\\npublic class FeedingSchedule\\n{\\n    public int Id { get; set; }\\n    public int AnimalId { get; set; }\\n    public string AnimalName { get; set; }\\n    public TimeSpan Time { get; set; }\\n    public string FoodType { get; set; }\\n    public double Quantity { get; set; }\\n    public DateTime LastFed { get; set; }\\n}\",\n  \"name\": \"Zoo Animal Inventory and Feeding Schedule Manager\",\n  \"description\": \"A module for managing zoo animal inventory and their feeding schedules with persistent storage in JSON files\",\n  \"required_apis\": [],\n  \"required_nugets\": []\n}\n```"},"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":525,"completion_tokens":1797,"total_tokens":2322,"prompt_tokens_details":{"cached_tokens":512},"prompt_cache_hit_tokens":512,"prompt_cache_miss_tokens":13},"system_fingerprint":"fp_3d5141a69a_prod0225"}